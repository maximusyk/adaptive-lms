import {
  require_extends,
  require_interopRequireDefault,
  require_slicedToArray
} from "./chunk-4XSGKUXO.js";
import {
  es_exports as es_exports2,
  init_es as init_es2
} from "./chunk-6YKC6NEJ.js";
import {
  es_exports,
  init_es,
  require_typeof
} from "./chunk-PK4Y62UW.js";
import "./chunk-BJTFEMVQ.js";
import "./chunk-SQY5IF3S.js";
import "./chunk-5OIG7VTD.js";
import {
  require_react
} from "./chunk-KCSTHIR7.js";
import "./chunk-UELTEBPF.js";
import "./chunk-2BBYBPV4.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-ACCAMVX6.js";

// node_modules/.pnpm/antd@4.21.3_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/antd/lib/form/util.js
var require_util = __commonJS({
  "node_modules/.pnpm/antd@4.21.3_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/antd/lib/form/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getFieldId = getFieldId;
    exports.toArray = toArray;
    var formItemNameBlackList = ["parentNode"];
    var defaultItemNamePrefixCls = "form_item";
    function toArray(candidate) {
      if (candidate === void 0 || candidate === false)
        return [];
      return Array.isArray(candidate) ? candidate : [candidate];
    }
    function getFieldId(namePath, formName) {
      if (!namePath.length)
        return void 0;
      var mergedId = namePath.join("_");
      if (formName) {
        return "".concat(formName, "_").concat(mergedId);
      }
      var isIllegalName = formItemNameBlackList.indexOf(mergedId) >= 0;
      return isIllegalName ? "".concat(defaultItemNamePrefixCls, "_").concat(mergedId) : mergedId;
    }
  }
});

// node_modules/.pnpm/antd@4.21.3_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/antd/lib/form/hooks/useForm.js
var require_useForm = __commonJS({
  "node_modules/.pnpm/antd@4.21.3_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/antd/lib/form/hooks/useForm.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _typeof = require_typeof();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = useForm;
    var _extends2 = _interopRequireDefault(require_extends());
    var _slicedToArray2 = _interopRequireDefault(require_slicedToArray());
    var React = _interopRequireWildcard(require_react());
    var _rcFieldForm = (init_es(), __toCommonJS(es_exports));
    var _scrollIntoViewIfNeeded = _interopRequireDefault((init_es2(), __toCommonJS(es_exports2)));
    var _util = require_util();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function toNamePathStr(name) {
      var namePath = (0, _util.toArray)(name);
      return namePath.join("_");
    }
    function useForm(form) {
      var _useRcForm = (0, _rcFieldForm.useForm)(), _useRcForm2 = (0, _slicedToArray2["default"])(_useRcForm, 1), rcForm = _useRcForm2[0];
      var itemsRef = React.useRef({});
      var wrapForm = React.useMemo(function() {
        return form !== null && form !== void 0 ? form : (0, _extends2["default"])((0, _extends2["default"])({}, rcForm), {
          __INTERNAL__: {
            itemRef: function itemRef(name) {
              return function(node) {
                var namePathStr = toNamePathStr(name);
                if (node) {
                  itemsRef.current[namePathStr] = node;
                } else {
                  delete itemsRef.current[namePathStr];
                }
              };
            }
          },
          scrollToField: function scrollToField(name) {
            var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            var namePath = (0, _util.toArray)(name);
            var fieldId = (0, _util.getFieldId)(namePath, wrapForm.__INTERNAL__.name);
            var node = fieldId ? document.getElementById(fieldId) : null;
            if (node) {
              (0, _scrollIntoViewIfNeeded["default"])(node, (0, _extends2["default"])({
                scrollMode: "if-needed",
                block: "nearest"
              }, options));
            }
          },
          getFieldInstance: function getFieldInstance(name) {
            var namePathStr = toNamePathStr(name);
            return itemsRef.current[namePathStr];
          }
        });
      }, [form, rcForm]);
      return [wrapForm];
    }
  }
});

// dep:antd_lib_form_hooks_useForm
var antd_lib_form_hooks_useForm_default = require_useForm();
export {
  antd_lib_form_hooks_useForm_default as default
};
//# sourceMappingURL=antd_lib_form_hooks_useForm.js.map
