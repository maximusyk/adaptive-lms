import {
  __assign,
  __extends,
  __read,
  __rest,
  __spreadArray,
  __values
} from "./chunk-AGADXW7G.js";
import {
  require_hoist_non_react_statics_cjs
} from "./chunk-KFBP2WIM.js";
import {
  require_prop_types
} from "./chunk-HJ6K6ZJ4.js";
import {
  require_copy_to_clipboard
} from "./chunk-K72AU2X6.js";
import {
  TinyColor,
  init_public_api,
  random
} from "./chunk-WMVA2DUJ.js";
import {
  require_react_dom
} from "./chunk-KUDJYGSZ.js";
import {
  _setPrototypeOf,
  init_setPrototypeOf
} from "./chunk-BJTFEMVQ.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-SQY5IF3S.js";
import {
  _extends,
  init_extends
} from "./chunk-5OIG7VTD.js";
import {
  require_react
} from "./chunk-KCSTHIR7.js";
import {
  _defineProperty,
  init_defineProperty
} from "./chunk-2BBYBPV4.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-ACCAMVX6.js";

// node_modules/.pnpm/lodash.mergewith@4.6.2/node_modules/lodash.mergewith/index.js
var require_lodash = __commonJS({
  "node_modules/.pnpm/lodash.mergewith@4.6.2/node_modules/lodash.mergewith/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types2 = freeModule && freeModule.require && freeModule.require("util").types;
        if (types2) {
          return types2;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function apply(func2, thisArg, args) {
      switch (args.length) {
        case 0:
          return func2.call(thisArg);
        case 1:
          return func2.call(thisArg, args[0]);
        case 2:
          return func2.call(thisArg, args[0], args[1]);
        case 3:
          return func2.call(thisArg, args[0], args[1], args[2]);
      }
      return func2.apply(thisArg, args);
    }
    function baseTimes(n, iteratee) {
      var index2 = -1, result = Array(n);
      while (++index2 < n) {
        result[index2] = iteratee(index2);
      }
      return result;
    }
    function baseUnary(func2) {
      return function(value) {
        return func2(value);
      };
    }
    function getValue2(object2, key) {
      return object2 == null ? void 0 : object2[key];
    }
    function overArg(func2, transform19) {
      return function(arg) {
        return func2(transform19(arg));
      };
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root2["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var objectCtorString = funcToString.call(Object);
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    var Buffer = moduleExports ? root2.Buffer : void 0;
    var Symbol2 = root2.Symbol;
    var Uint8Array = root2.Uint8Array;
    var allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    var objectCreate = Object.create;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var defineProperty = function() {
      try {
        var func2 = getNative(Object, "defineProperty");
        func2({}, "", {});
        return func2;
      } catch (e) {
      }
    }();
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var nativeMax = Math.max;
    var nativeNow = Date.now;
    var Map2 = getNative(root2, "Map");
    var nativeCreate = getNative(Object, "create");
    var baseCreate = function() {
      function object2() {
      }
      return function(proto) {
        if (!isObject3(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object2.prototype = proto;
        var result = new object2();
        object2.prototype = void 0;
        return result;
      };
    }();
    function Hash(entries) {
      var index2 = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index2 < length2) {
        var entry = entries[index2];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index2 = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index2 < length2) {
        var entry = entries[index2];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index2 = assocIndexOf(data, key);
      if (index2 < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index2 == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index2, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index2 = assocIndexOf(data, key);
      return index2 < 0 ? void 0 : data[index2][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index2 = assocIndexOf(data, key);
      if (index2 < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index2][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index2 = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index2 < length2) {
        var entry = entries[index2];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size3 = data.size;
      data.set(key, value);
      this.size += data.size == size3 ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function Stack2(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack2.prototype.clear = stackClear;
    Stack2.prototype["delete"] = stackDelete;
    Stack2.prototype.get = stackGet;
    Stack2.prototype.has = stackHas;
    Stack2.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray3(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assignMergeValue(object2, key, value) {
      if (value !== void 0 && !eq(object2[key], value) || value === void 0 && !(key in object2)) {
        baseAssignValue(object2, key, value);
      }
    }
    function assignValue(object2, key, value) {
      var objValue = object2[key];
      if (!(hasOwnProperty2.call(object2, key) && eq(objValue, value)) || value === void 0 && !(key in object2)) {
        baseAssignValue(object2, key, value);
      }
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseAssignValue(object2, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object2, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object2[key] = value;
      }
    }
    var baseFor = createBaseFor();
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsNative(value) {
      if (!isObject3(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction4(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeysIn(object2) {
      if (!isObject3(object2)) {
        return nativeKeysIn(object2);
      }
      var isProto = isPrototype(object2), result = [];
      for (var key in object2) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object2, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    function baseMerge(object2, source, srcIndex, customizer, stack) {
      if (object2 === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack2());
        if (isObject3(srcValue)) {
          baseMergeDeep(object2, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object2, key), srcValue, key + "", object2, source, stack) : void 0;
          if (newValue === void 0) {
            newValue = srcValue;
          }
          assignMergeValue(object2, key, newValue);
        }
      }, keysIn);
    }
    function baseMergeDeep(object2, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object2, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
      if (stacked) {
        assignMergeValue(object2, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + "", object2, source, stack) : void 0;
      var isCommon = newValue === void 0;
      if (isCommon) {
        var isArr = isArray3(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray3(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject3(objValue) || isFunction4(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack["delete"](srcValue);
      }
      assignMergeValue(object2, key, newValue);
    }
    function baseRest(func2, start2) {
      return setToString(overRest(func2, start2, identity2), func2 + "");
    }
    var baseSetToString = !defineProperty ? identity2 : function(func2, string2) {
      return defineProperty(func2, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string2),
        "writable": true
      });
    };
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length2 = buffer.length, result = allocUnsafe ? allocUnsafe(length2) : new buffer.constructor(length2);
      buffer.copy(result);
      return result;
    }
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    function copyArray(source, array) {
      var index2 = -1, length2 = source.length;
      array || (array = Array(length2));
      while (++index2 < length2) {
        array[index2] = source[index2];
      }
      return array;
    }
    function copyObject(source, props, object2, customizer) {
      var isNew = !object2;
      object2 || (object2 = {});
      var index2 = -1, length2 = props.length;
      while (++index2 < length2) {
        var key = props[index2];
        var newValue = customizer ? customizer(object2[key], source[key], key, object2, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object2, key, newValue);
        } else {
          assignValue(object2, key, newValue);
        }
      }
      return object2;
    }
    function createAssigner(assigner) {
      return baseRest(function(object2, sources) {
        var index2 = -1, length2 = sources.length, customizer = length2 > 1 ? sources[length2 - 1] : void 0, guard = length2 > 2 ? sources[2] : void 0;
        customizer = assigner.length > 3 && typeof customizer == "function" ? (length2--, customizer) : void 0;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length2 < 3 ? void 0 : customizer;
          length2 = 1;
        }
        object2 = Object(object2);
        while (++index2 < length2) {
          var source = sources[index2];
          if (source) {
            assigner(object2, source, index2, customizer);
          }
        }
        return object2;
      });
    }
    function createBaseFor(fromRight) {
      return function(object2, iteratee, keysFunc) {
        var index2 = -1, iterable = Object(object2), props = keysFunc(object2), length2 = props.length;
        while (length2--) {
          var key = props[fromRight ? length2 : ++index2];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object2;
      };
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object2, key) {
      var value = getValue2(object2, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty2.call(value, symToStringTag), tag2 = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag2;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    function initCloneObject(object2) {
      return typeof object2.constructor == "function" && !isPrototype(object2) ? baseCreate(getPrototype(object2)) : {};
    }
    function isIndex(value, length2) {
      var type = typeof value;
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isIterateeCall(value, index2, object2) {
      if (!isObject3(object2)) {
        return false;
      }
      var type = typeof index2;
      if (type == "number" ? isArrayLike(object2) && isIndex(index2, object2.length) : type == "string" && index2 in object2) {
        return eq(object2[index2], value);
      }
      return false;
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func2) {
      return !!maskSrcKey && maskSrcKey in func2;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function nativeKeysIn(object2) {
      var result = [];
      if (object2 != null) {
        for (var key in Object(object2)) {
          result.push(key);
        }
      }
      return result;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function overRest(func2, start2, transform19) {
      start2 = nativeMax(start2 === void 0 ? func2.length - 1 : start2, 0);
      return function() {
        var args = arguments, index2 = -1, length2 = nativeMax(args.length - start2, 0), array = Array(length2);
        while (++index2 < length2) {
          array[index2] = args[start2 + index2];
        }
        index2 = -1;
        var otherArgs = Array(start2 + 1);
        while (++index2 < start2) {
          otherArgs[index2] = args[index2];
        }
        otherArgs[start2] = transform19(array);
        return apply(func2, this, otherArgs);
      };
    }
    function safeGet(object2, key) {
      if (key === "constructor" && typeof object2[key] === "function") {
        return;
      }
      if (key == "__proto__") {
        return;
      }
      return object2[key];
    }
    var setToString = shortOut(baseSetToString);
    function shortOut(func2) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func2.apply(void 0, arguments);
      };
    }
    function toSource(func2) {
      if (func2 != null) {
        try {
          return funcToString.call(func2);
        } catch (e) {
        }
        try {
          return func2 + "";
        } catch (e) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray3 = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction4(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isFunction4(value) {
      if (!isObject3(value)) {
        return false;
      }
      var tag2 = baseGetTag(value);
      return tag2 == funcTag || tag2 == genTag || tag2 == asyncTag || tag2 == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject3(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    function keysIn(object2) {
      return isArrayLike(object2) ? arrayLikeKeys(object2, true) : baseKeysIn(object2);
    }
    var mergeWith = createAssigner(function(object2, source, srcIndex, customizer) {
      baseMerge(object2, source, srcIndex, customizer);
    });
    function constant(value) {
      return function() {
        return value;
      };
    }
    function identity2(value) {
      return value;
    }
    function stubFalse() {
      return false;
    }
    module.exports = mergeWith;
  }
});

// node_modules/.pnpm/react-fast-compare@3.2.0/node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/.pnpm/react-fast-compare@3.2.0/node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a2, b2) {
      if (a2 === b2)
        return true;
      if (a2 && b2 && typeof a2 == "object" && typeof b2 == "object") {
        if (a2.constructor !== b2.constructor)
          return false;
        var length2, i, keys4;
        if (Array.isArray(a2)) {
          length2 = a2.length;
          if (length2 != b2.length)
            return false;
          for (i = length2; i-- !== 0; )
            if (!equal(a2[i], b2[i]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a2 instanceof Map && b2 instanceof Map) {
          if (a2.size !== b2.size)
            return false;
          it = a2.entries();
          while (!(i = it.next()).done)
            if (!b2.has(i.value[0]))
              return false;
          it = a2.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b2.get(i.value[0])))
              return false;
          return true;
        }
        if (hasSet && a2 instanceof Set && b2 instanceof Set) {
          if (a2.size !== b2.size)
            return false;
          it = a2.entries();
          while (!(i = it.next()).done)
            if (!b2.has(i.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a2) && ArrayBuffer.isView(b2)) {
          length2 = a2.length;
          if (length2 != b2.length)
            return false;
          for (i = length2; i-- !== 0; )
            if (a2[i] !== b2[i])
              return false;
          return true;
        }
        if (a2.constructor === RegExp)
          return a2.source === b2.source && a2.flags === b2.flags;
        if (a2.valueOf !== Object.prototype.valueOf)
          return a2.valueOf() === b2.valueOf();
        if (a2.toString !== Object.prototype.toString)
          return a2.toString() === b2.toString();
        keys4 = Object.keys(a2);
        length2 = keys4.length;
        if (length2 !== Object.keys(b2).length)
          return false;
        for (i = length2; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b2, keys4[i]))
            return false;
        if (hasElementType && a2 instanceof Element)
          return false;
        for (i = length2; i-- !== 0; ) {
          if ((keys4[i] === "_owner" || keys4[i] === "__v" || keys4[i] === "__o") && a2.$$typeof) {
            continue;
          }
          if (!equal(a2[keys4[i]], b2[keys4[i]]))
            return false;
        }
        return true;
      }
      return a2 !== a2 && b2 !== b2;
    }
    module.exports = function isEqual3(a2, b2) {
      try {
        return equal(a2, b2);
      } catch (error3) {
        if ((error3.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error3;
      }
    };
  }
});

// node_modules/.pnpm/@emotion+memoize@0.7.4/node_modules/@emotion/memoize/dist/memoize.browser.esm.js
function memoize6(fn6) {
  var cache = {};
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn6(arg);
    return cache[arg];
  };
}
var memoize_browser_esm_default;
var init_memoize_browser_esm = __esm({
  "node_modules/.pnpm/@emotion+memoize@0.7.4/node_modules/@emotion/memoize/dist/memoize.browser.esm.js"() {
    memoize_browser_esm_default = memoize6;
  }
});

// node_modules/.pnpm/@emotion+is-prop-valid@0.8.8/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js
var is_prop_valid_browser_esm_exports = {};
__export(is_prop_valid_browser_esm_exports, {
  default: () => is_prop_valid_browser_esm_default
});
var reactPropsRegex2, index, is_prop_valid_browser_esm_default;
var init_is_prop_valid_browser_esm = __esm({
  "node_modules/.pnpm/@emotion+is-prop-valid@0.8.8/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"() {
    init_memoize_browser_esm();
    reactPropsRegex2 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
    index = memoize_browser_esm_default(function(prop3) {
      return reactPropsRegex2.test(prop3) || prop3.charCodeAt(0) === 111 && prop3.charCodeAt(1) === 110 && prop3.charCodeAt(2) < 91;
    });
    is_prop_valid_browser_esm_default = index;
  }
});

// node_modules/.pnpm/warning@4.0.3/node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/.pnpm/warning@4.0.3/node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__3 = true;
    var warning2 = function() {
    };
    if (__DEV__3) {
      printWarning = function printWarning2(format2, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format2.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning2 = function(condition, format2, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format2 === void 0) {
          throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
        }
        if (!condition) {
          printWarning.apply(null, [format2].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning2;
  }
});

// node_modules/.pnpm/@emotion+react@11.9.3_mfe26viqrj3fhudxstuq5xbm4i/node_modules/@emotion/react/dist/emotion-react.browser.esm.js
var React2 = __toESM(require_react());
var import_react2 = __toESM(require_react());

// node_modules/.pnpm/@emotion+sheet@1.1.1/node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
function sheetForTag(tag2) {
  if (tag2.sheet) {
    return tag2.sheet;
  }
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag2) {
      return document.styleSheets[i];
    }
  }
}
function createStyleElement(options) {
  var tag2 = document.createElement("style");
  tag2.setAttribute("data-emotion", options.key);
  if (options.nonce !== void 0) {
    tag2.setAttribute("nonce", options.nonce);
  }
  tag2.appendChild(document.createTextNode(""));
  tag2.setAttribute("data-s", "");
  return tag2;
}
var StyleSheet = function() {
  function StyleSheet2(options) {
    var _this = this;
    this._insertTag = function(tag2) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag2, before);
      _this.tags.push(tag2);
    };
    this.isSpeedy = options.speedy === void 0 ? false : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce;
    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet2.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert(rule) {
    if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag2 = this.tags[this.tags.length - 1];
    if (true) {
      var isImportRule3 = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;
      if (isImportRule3 && this._alreadyInsertedOrderInsensitiveRule) {
        console.error("You're attempting to insert the following rule:\n" + rule + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.");
      }
      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule3;
    }
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag2);
      try {
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear){/.test(rule)) {
          console.error('There was a problem inserting the following rule: "' + rule + '"', e);
        }
      }
    } else {
      tag2.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    this.tags.forEach(function(tag2) {
      return tag2.parentNode && tag2.parentNode.removeChild(tag2);
    });
    this.tags = [];
    this.ctr = 0;
    if (true) {
      this._alreadyInsertedOrderInsensitiveRule = false;
    }
  };
  return StyleSheet2;
}();

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Enum.js
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Utility.js
var abs = Math.abs;
var from = String.fromCharCode;
var assign = Object.assign;
function hash(value, length2) {
  return (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3);
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search) {
  return value.indexOf(search);
}
function charat(value, index2) {
  return value.charCodeAt(index2) | 0;
}
function substr(value, begin, end2) {
  return value.slice(begin, end2);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Tokenizer.js
var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";
function node(value, root2, parent, type, props, children, length2) {
  return { value, root: root2, parent, type, props, children, line, column, length: length2, return: "" };
}
function copy(root2, props) {
  return assign(node("", null, null, "", null, null, 0), root2, { length: -root2.length }, props);
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end2) {
  return substr(characters, begin, end2);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index2, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index2, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type, index2) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index2, position - 1) + "*" + from(type === 47 ? type : next());
}
function identifier(index2) {
  while (!token(peek()))
    next();
  return slice(index2, position);
}

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Parser.js
function compile(value) {
  return dealloc(parse("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse(value, root2, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index2 = 0;
  var offset2 = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference2 = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && characters2.charCodeAt(length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f") != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root2, parent), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index2++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset2:
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference2 = ruleset(characters2, root2, parent, index2, offset2, rules, points, type, props = [], children = [], length2), rulesets);
            if (character2 === 123)
              if (offset2 === 0)
                parse(characters2, root2, reference2, reference2, props, rulesets, length2, points, children);
              else
                switch (atrule) {
                  case 100:
                  case 109:
                  case 115:
                    parse(value, reference2, reference2, rule && append(ruleset(value, reference2, reference2, 0, 0, rules, points, type, rules, props = [], length2), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse(characters2, reference2, reference2, reference2, [""], children, 0, points, children);
                }
        }
        index2 = offset2 = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset2 > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index2++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset2 = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root2, parent, index2, offset2, rules, points, type, props, children, length2) {
  var post = offset2 - 1;
  var rule = offset2 === 0 ? rules : [""];
  var size3 = sizeof(rule);
  for (var i = 0, j = 0, k = 0; i < index2; ++i)
    for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size3; ++x)
      if (z = trim(j > 0 ? rule[x] + " " + y : replace(y, /&\f/g, rule[x])))
        props[k++] = z;
  return node(value, root2, parent, offset2 === 0 ? RULESET : type, props, children, length2);
}
function comment(value, root2, parent) {
  return node(value, root2, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
}
function declaration(value, root2, parent, length2) {
  return node(value, root2, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2);
}

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Prefixer.js
function prefix(value, length2) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 6828:
    case 4268:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/, "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch") ? prefix(replace(value, "stretch", "fill-available"), length2) + value : value;
        }
      break;
    case 4949:
      if (charat(value, length2 + 1) !== 115)
        break;
    case 6444:
      switch (charat(value, strlen(value) - 3 - (~indexof(value, "!important") && 10))) {
        case 107:
          return replace(value, ":", ":" + WEBKIT) + value;
        case 101:
          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
      }
      break;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
      return WEBKIT + value + MS + value + value;
  }
  return value;
}

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Serializer.js
function serialize(children, callback) {
  var output = "";
  var length2 = sizeof(children);
  for (var i = 0; i < length2; i++)
    output += callback(children[i], i, children, callback) || "";
  return output;
}
function stringify(element, index2, children, callback) {
  switch (element.type) {
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      element.value = element.props.join(",");
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}

// node_modules/.pnpm/stylis@4.0.13/node_modules/stylis/src/Middleware.js
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index2, children, callback) {
    var output = "";
    for (var i = 0; i < length2; i++)
      output += collection[i](element, index2, children, callback) || "";
    return output;
  };
}
function prefixer(element, index2, children, callback) {
  if (element.length > -1) {
    if (!element.return)
      switch (element.type) {
        case DECLARATION:
          element.return = prefix(element.value, element.length);
          break;
        case KEYFRAMES:
          return serialize([copy(element, { value: replace(element.value, "@", "@" + WEBKIT) })], callback);
        case RULESET:
          if (element.length)
            return combine(element.props, function(value) {
              switch (match(value, /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  return serialize([copy(element, { props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")] })], callback);
                case "::placeholder":
                  return serialize([
                    copy(element, { props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")] }),
                    copy(element, { props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")] }),
                    copy(element, { props: [replace(value, /:(plac\w+)/, MS + "input-$1")] })
                  ], callback);
              }
              return "";
            });
      }
  }
}

// node_modules/.pnpm/@emotion+weak-memoize@0.2.5/node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js
var weakMemoize = function weakMemoize2(func2) {
  var cache = /* @__PURE__ */ new WeakMap();
  return function(arg) {
    if (cache.has(arg)) {
      return cache.get(arg);
    }
    var ret = func2(arg);
    cache.set(arg, ret);
    return ret;
  };
};
var weak_memoize_browser_esm_default = weakMemoize;

// node_modules/.pnpm/@emotion+memoize@0.7.5/node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js
function memoize(fn6) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn6(arg);
    return cache[arg];
  };
}
var emotion_memoize_browser_esm_default = memoize;

// node_modules/.pnpm/@emotion+cache@11.9.3/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js
var last = function last2(arr) {
  return arr.length ? arr[arr.length - 1] : null;
};
var identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index2) {
  var previous = 0;
  var character2 = 0;
  while (true) {
    previous = character2;
    character2 = peek();
    if (previous === 38 && character2 === 12) {
      points[index2] = 1;
    }
    if (token(character2)) {
      break;
    }
    next();
  }
  return slice(begin, position);
};
var toRules = function toRules2(parsed, points) {
  var index2 = -1;
  var character2 = 44;
  do {
    switch (token(character2)) {
      case 0:
        if (character2 === 38 && peek() === 12) {
          points[index2] = 1;
        }
        parsed[index2] += identifierWithPointTracking(position - 1, points, index2);
        break;
      case 2:
        parsed[index2] += delimit(character2);
        break;
      case 4:
        if (character2 === 44) {
          parsed[++index2] = peek() === 58 ? "&\f" : "";
          points[index2] = parsed[index2].length;
          break;
        }
      default:
        parsed[index2] += from(character2);
    }
  } while (character2 = next());
  return parsed;
};
var getRules = function getRules2(value, points) {
  return dealloc(toRules(alloc(value), points));
};
var fixedElements = /* @__PURE__ */ new WeakMap();
var compat = function compat2(element) {
  if (element.type !== "rule" || !element.parent || element.length < 1) {
    return;
  }
  var value = element.value, parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== "rule") {
    parent = parent.parent;
    if (!parent)
      return;
  }
  if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
    return;
  }
  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};
var removeLabel = function removeLabel2(element) {
  if (element.type === "decl") {
    var value = element.value;
    if (value.charCodeAt(0) === 108 && value.charCodeAt(2) === 98) {
      element["return"] = "";
      element.value = "";
    }
  }
};
var ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason";
var isIgnoringComment = function isIgnoringComment2(element) {
  return !!element && element.type === "comm" && element.children.indexOf(ignoreFlag) > -1;
};
var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm2(cache) {
  return function(element, index2, children) {
    if (element.type !== "rule")
      return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
    if (unsafePseudoClasses && cache.compat !== true) {
      var prevElement = index2 > 0 ? children[index2 - 1] : null;
      if (prevElement && isIgnoringComment(last(prevElement.children))) {
        return;
      }
      unsafePseudoClasses.forEach(function(unsafePseudoClass) {
        console.error('The pseudo class "' + unsafePseudoClass + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + unsafePseudoClass.split("-child")[0] + '-of-type".');
      });
    }
  };
};
var isImportRule = function isImportRule2(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};
var isPrependedWithRegularRules = function isPrependedWithRegularRules2(index2, children) {
  for (var i = index2 - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }
  return false;
};
var nullifyElement = function nullifyElement2(element) {
  element.type = "";
  element.value = "";
  element["return"] = "";
  element.children = "";
  element.props = "";
};
var incorrectImportAlarm = function incorrectImportAlarm2(element, index2, children) {
  if (!isImportRule(element)) {
    return;
  }
  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index2, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};
var defaultStylisPlugins = [prefixer];
var createCache = function createCache2(options) {
  var key = options.key;
  if (!key) {
    throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\nIf multiple caches share the same key they might \"fight\" for each other's style elements.");
  }
  if (key === "css") {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ssrStyles, function(node3) {
      var dataEmotionAttribute = node3.getAttribute("data-emotion");
      if (dataEmotionAttribute.indexOf(" ") === -1) {
        return;
      }
      document.head.appendChild(node3);
      node3.setAttribute("data-s", "");
    });
  }
  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
  if (true) {
    if (/[^a-z-]/.test(key)) {
      throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + key + '" was passed');
    }
  }
  var inserted = {};
  var container4;
  var nodesToHydrate = [];
  {
    container4 = options.container || document.head;
    Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + key + ' "]'), function(node3) {
      var attrib = node3.getAttribute("data-emotion").split(" ");
      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }
      nodesToHydrate.push(node3);
    });
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  if (true) {
    omnipresentPlugins.push(createUnsafeSelectorsAlarm({
      get compat() {
        return cache.compat;
      }
    }), incorrectImportAlarm);
  }
  {
    var currentSheet;
    var finalizingPlugins = [stringify, true ? function(element) {
      if (!element.root) {
        if (element["return"]) {
          currentSheet.insert(element["return"]);
        } else if (element.value && element.type !== COMMENT) {
          currentSheet.insert(element.value + "{}");
        }
      }
    } : rulesheet(function(rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis2(styles3) {
      return serialize(compile(styles3), serializer);
    };
    _insert = function insert(selector2, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      if (serialized.map !== void 0) {
        currentSheet = {
          insert: function insert2(rule) {
            sheet.insert(rule + serialized.map);
          }
        };
      }
      stylis(selector2 ? selector2 + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key,
    sheet: new StyleSheet({
      key,
      container: container4,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};
var emotion_cache_browser_esm_default = createCache;

// node_modules/.pnpm/@emotion+react@11.9.3_mfe26viqrj3fhudxstuq5xbm4i/node_modules/@emotion/react/dist/emotion-element-cbed451f.browser.esm.js
var React = __toESM(require_react());
var import_react = __toESM(require_react());
init_extends();

// node_modules/.pnpm/@emotion+react@11.9.3_mfe26viqrj3fhudxstuq5xbm4i/node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());

// node_modules/.pnpm/@emotion+utils@1.1.0/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var isBrowser = true;
function getRegisteredStyles(registered, registeredStyles, classNames3) {
  var rawClassName = "";
  classNames3.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var registerStyles = function registerStyles2(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if ((isStringTag === false || isBrowser === false) && cache.registered[className] === void 0) {
    cache.registered[className] = serialized.styles;
  }
};
var insertStyles = function insertStyles2(cache, serialized, isStringTag) {
  registerStyles(cache, serialized, isStringTag);
  var className = cache.key + "-" + serialized.name;
  if (cache.inserted[serialized.name] === void 0) {
    var current = serialized;
    do {
      var maybeStyles = cache.insert(serialized === current ? "." + className : "", current, cache.sheet, true);
      current = current.next;
    } while (current !== void 0);
  }
};

// node_modules/.pnpm/@emotion+hash@0.8.0/node_modules/@emotion/hash/dist/hash.browser.esm.js
function murmur2(str) {
  var h = 0;
  var k, i = 0, len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;
    k = (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16);
    k ^= k >>> 24;
    h = (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16) ^ (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 255) << 16;
    case 2:
      h ^= (str.charCodeAt(i + 1) & 255) << 8;
    case 1:
      h ^= str.charCodeAt(i) & 255;
      h = (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  h ^= h >>> 13;
  h = (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}
var hash_browser_esm_default = murmur2;

// node_modules/.pnpm/@emotion+unitless@0.7.5/node_modules/@emotion/unitless/dist/unitless.browser.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var unitless_browser_esm_default = unitlessKeys;

// node_modules/.pnpm/@emotion+serialize@1.0.4/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js
var ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty2(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue2(value) {
  return value != null && typeof value !== "boolean";
};
var processStyleName = emotion_memoize_browser_esm_default(function(styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});
var processStyleValue = function processStyleValue2(key, value) {
  switch (key) {
    case "animation":
    case "animationName": {
      if (typeof value === "string") {
        return value.replace(animationRegex, function(match2, p1, p2) {
          cursor = {
            name: p1,
            styles: p2,
            next: cursor
          };
          return p1;
        });
      }
    }
  }
  if (unitless_browser_esm_default[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
    return value + "px";
  }
  return value;
};
if (true) {
  contentValuePattern = /(var|attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
  contentValues = ["normal", "none", "initial", "inherit", "unset"];
  oldProcessStyleValue = processStyleValue;
  msPattern = /^-ms-/;
  hyphenPattern = /-(.)/g;
  hyphenatedCache = {};
  processStyleValue = function processStyleValue3(key, value) {
    if (key === "content") {
      if (typeof value !== "string" || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
        throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
      }
    }
    var processed = oldProcessStyleValue(key, value);
    if (processed !== "" && !isCustomProperty(key) && key.indexOf("-") !== -1 && hyphenatedCache[key] === void 0) {
      hyphenatedCache[key] = true;
      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, "ms-").replace(hyphenPattern, function(str, _char) {
        return _char.toUpperCase();
      }) + "?");
    }
    return processed;
  };
}
var contentValuePattern;
var contentValues;
var oldProcessStyleValue;
var msPattern;
var hyphenPattern;
var hyphenatedCache;
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return "";
  }
  if (interpolation.__emotion_styles !== void 0) {
    if (interpolation.toString() === "NO_COMPONENT_SELECTOR") {
      throw new Error(noComponentSelectorMessage);
    }
    return interpolation;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      if (interpolation.anim === 1) {
        cursor = {
          name: interpolation.name,
          styles: interpolation.styles,
          next: cursor
        };
        return interpolation.name;
      }
      if (interpolation.styles !== void 0) {
        var next2 = interpolation.next;
        if (next2 !== void 0) {
          while (next2 !== void 0) {
            cursor = {
              name: next2.name,
              styles: next2.styles,
              next: cursor
            };
            next2 = next2.next;
          }
        }
        var styles3 = interpolation.styles + ";";
        if (interpolation.map !== void 0) {
          styles3 += interpolation.map;
        }
        return styles3;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result);
      } else if (true) {
        console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      }
      break;
    }
    case "string":
      if (true) {
        var matched = [];
        var replaced = interpolation.replace(animationRegex, function(match2, p1, p2) {
          var fakeVarName = "animation" + matched.length;
          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, "") + "`");
          return "${" + fakeVarName + "}";
        });
        if (matched.length) {
          console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(matched, ["`" + replaced + "`"]).join("\n") + "\n\nYou should wrap it with `css` like this:\n\n" + ("css`" + replaced + "`"));
        }
      }
      break;
  }
  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== void 0 ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string2 = "";
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string2 += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== "object") {
        if (registered != null && registered[value] !== void 0) {
          string2 += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string2 += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === "NO_COMPONENT_SELECTOR" && true) {
          throw new Error(noComponentSelectorMessage);
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string2 += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case "animation":
            case "animationName": {
              string2 += processStyleName(_key) + ":" + interpolated + ";";
              break;
            }
            default: {
              if (_key === "undefined") {
                console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
              }
              string2 += _key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string2;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;
if (true) {
  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
}
var cursor;
var serializeStyles = function serializeStyles2(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
    return args[0];
  }
  var stringMode = true;
  var styles3 = "";
  cursor = void 0;
  var strings = args[0];
  if (strings == null || strings.raw === void 0) {
    stringMode = false;
    styles3 += handleInterpolation(mergedProps, registered, strings);
  } else {
    if (strings[0] === void 0) {
      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
    }
    styles3 += strings[0];
  }
  for (var i = 1; i < args.length; i++) {
    styles3 += handleInterpolation(mergedProps, registered, args[i]);
    if (stringMode) {
      if (strings[i] === void 0) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
      }
      styles3 += strings[i];
    }
  }
  var sourceMap;
  if (true) {
    styles3 = styles3.replace(sourceMapPattern, function(match3) {
      sourceMap = match3;
      return "";
    });
  }
  labelPattern.lastIndex = 0;
  var identifierName = "";
  var match2;
  while ((match2 = labelPattern.exec(styles3)) !== null) {
    identifierName += "-" + match2[1];
  }
  var name = hash_browser_esm_default(styles3) + identifierName;
  if (true) {
    return {
      name,
      styles: styles3,
      map: sourceMap,
      next: cursor,
      toString: function toString() {
        return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
      }
    };
  }
  return {
    name,
    styles: styles3,
    next: cursor
  };
};

// node_modules/.pnpm/@emotion+react@11.9.3_mfe26viqrj3fhudxstuq5xbm4i/node_modules/@emotion/react/dist/emotion-element-cbed451f.browser.esm.js
var hasOwnProperty = {}.hasOwnProperty;
var EmotionCacheContext = (0, import_react.createContext)(typeof HTMLElement !== "undefined" ? emotion_cache_browser_esm_default({
  key: "css"
}) : null);
if (true) {
  EmotionCacheContext.displayName = "EmotionCacheContext";
}
var CacheProvider = EmotionCacheContext.Provider;
var withEmotionCache = function withEmotionCache2(func2) {
  return (0, import_react.forwardRef)(function(props, ref) {
    var cache = (0, import_react.useContext)(EmotionCacheContext);
    return func2(props, cache, ref);
  });
};
var ThemeContext = (0, import_react.createContext)({});
if (true) {
  ThemeContext.displayName = "EmotionThemeContext";
}
var getTheme = function getTheme2(outerTheme, theme3) {
  if (typeof theme3 === "function") {
    var mergedTheme = theme3(outerTheme);
    if (mergedTheme == null || typeof mergedTheme !== "object" || Array.isArray(mergedTheme)) {
      throw new Error("[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!");
    }
    return mergedTheme;
  }
  if (theme3 == null || typeof theme3 !== "object" || Array.isArray(theme3)) {
    throw new Error("[ThemeProvider] Please make your theme prop a plain object");
  }
  return _extends({}, outerTheme, theme3);
};
var createCacheWithTheme = weak_memoize_browser_esm_default(function(outerTheme) {
  return weak_memoize_browser_esm_default(function(theme3) {
    return getTheme(outerTheme, theme3);
  });
});
var ThemeProvider = function ThemeProvider2(props) {
  var theme3 = (0, import_react.useContext)(ThemeContext);
  if (props.theme !== theme3) {
    theme3 = createCacheWithTheme(theme3)(props.theme);
  }
  return (0, import_react.createElement)(ThemeContext.Provider, {
    value: theme3
  }, props.children);
};
var useInsertionEffect2 = React["useInsertionEffect"] ? React["useInsertionEffect"] : function useInsertionEffect3(create) {
  create();
};
function useInsertionEffectMaybe(create) {
  useInsertionEffect2(create);
}
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
var labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__";
var Insertion = function Insertion2(_ref2) {
  var cache = _ref2.cache, serialized = _ref2.serialized, isStringTag = _ref2.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  var rules = useInsertionEffectMaybe(function() {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var Emotion = withEmotionCache(function(props, cache, ref) {
  var cssProp = props.css;
  if (typeof cssProp === "string" && cache.registered[cssProp] !== void 0) {
    cssProp = cache.registered[cssProp];
  }
  var WrappedComponent = props[typePropName];
  var registeredStyles = [cssProp];
  var className = "";
  if (typeof props.className === "string") {
    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
  } else if (props.className != null) {
    className = props.className + " ";
  }
  var serialized = serializeStyles(registeredStyles, void 0, (0, import_react.useContext)(ThemeContext));
  if (serialized.name.indexOf("-") === -1) {
    var labelFromStack = props[labelPropName];
    if (labelFromStack) {
      serialized = serializeStyles([serialized, "label:" + labelFromStack + ";"]);
    }
  }
  className += cache.key + "-" + serialized.name;
  var newProps = {};
  for (var key in props) {
    if (hasOwnProperty.call(props, key) && key !== "css" && key !== typePropName && key !== labelPropName) {
      newProps[key] = props[key];
    }
  }
  newProps.ref = ref;
  newProps.className = className;
  return (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)(Insertion, {
    cache,
    serialized,
    isStringTag: typeof WrappedComponent === "string"
  }), (0, import_react.createElement)(WrappedComponent, newProps));
});
if (true) {
  Emotion.displayName = "EmotionCssPropInternal";
}

// node_modules/.pnpm/@emotion+react@11.9.3_mfe26viqrj3fhudxstuq5xbm4i/node_modules/@emotion/react/dist/emotion-react.browser.esm.js
init_extends();
var import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());
var pkg = {
  name: "@emotion/react",
  version: "11.9.3",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.cjs.js": "./dist/emotion-react.browser.cjs.js",
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.js",
    "macro.d.ts",
    "macro.js.flow"
  ],
  sideEffects: false,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.13.10",
    "@emotion/babel-plugin": "^11.7.1",
    "@emotion/cache": "^11.9.3",
    "@emotion/serialize": "^1.0.4",
    "@emotion/utils": "^1.1.0",
    "@emotion/weak-memoize": "^0.2.5",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: true
    },
    "@types/react": {
      optional: true
    }
  },
  devDependencies: {
    "@babel/core": "^7.13.10",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.9.0",
    "@emotion/css-prettifier": "1.0.1",
    "@emotion/server": "11.4.0",
    "@emotion/styled": "11.9.3",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact"
  }
};
var useInsertionEffect5 = React2["useInsertionEffect"] ? React2["useInsertionEffect"] : import_react2.useLayoutEffect;
var warnedAboutCssPropForGlobal = false;
var Global = withEmotionCache(function(props, cache) {
  if (!warnedAboutCssPropForGlobal && (props.className || props.css)) {
    console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
    warnedAboutCssPropForGlobal = true;
  }
  var styles3 = props.styles;
  var serialized = serializeStyles([styles3], void 0, (0, import_react2.useContext)(ThemeContext));
  var sheetRef = (0, import_react2.useRef)();
  useInsertionEffect5(function() {
    var key = cache.key + "-global";
    var sheet = new cache.sheet.constructor({
      key,
      nonce: cache.sheet.nonce,
      container: cache.sheet.container,
      speedy: cache.sheet.isSpeedy
    });
    var rehydrating = false;
    var node3 = document.querySelector('style[data-emotion="' + key + " " + serialized.name + '"]');
    if (cache.sheet.tags.length) {
      sheet.before = cache.sheet.tags[0];
    }
    if (node3 !== null) {
      rehydrating = true;
      node3.setAttribute("data-emotion", key);
      sheet.hydrate([node3]);
    }
    sheetRef.current = [sheet, rehydrating];
    return function() {
      sheet.flush();
    };
  }, [cache]);
  useInsertionEffect5(function() {
    var sheetRefCurrent = sheetRef.current;
    var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
    if (rehydrating) {
      sheetRefCurrent[1] = false;
      return;
    }
    if (serialized.next !== void 0) {
      insertStyles(cache, serialized.next, true);
    }
    if (sheet.tags.length) {
      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
      sheet.before = element;
      sheet.flush();
    }
    cache.insert("", serialized, sheet, false);
  }, [cache, serialized.name]);
  return null;
});
if (true) {
  Global.displayName = "EmotionGlobal";
}
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
var keyframes = function keyframes2() {
  var insertable = css.apply(void 0, arguments);
  var name = "animation-" + insertable.name;
  return {
    name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var classnames = function classnames2(args) {
  var len = args.length;
  var i = 0;
  var cls = "";
  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null)
      continue;
    var toAdd = void 0;
    switch (typeof arg) {
      case "boolean":
        break;
      case "object": {
        if (Array.isArray(arg)) {
          toAdd = classnames2(arg);
        } else {
          if (arg.styles !== void 0 && arg.name !== void 0) {
            console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.");
          }
          toAdd = "";
          for (var k in arg) {
            if (arg[k] && k) {
              toAdd && (toAdd += " ");
              toAdd += k;
            }
          }
        }
        break;
      }
      default: {
        toAdd = arg;
      }
    }
    if (toAdd) {
      cls && (cls += " ");
      cls += toAdd;
    }
  }
  return cls;
};
function merge(registered, css6, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
  if (registeredStyles.length < 2) {
    return className;
  }
  return rawClassName + css6(registeredStyles);
}
var Insertion3 = function Insertion4(_ref2) {
  var cache = _ref2.cache, serializedArr = _ref2.serializedArr;
  var rules = useInsertionEffectMaybe(function() {
    for (var i = 0; i < serializedArr.length; i++) {
      var res = insertStyles(cache, serializedArr[i], false);
    }
  });
  return null;
};
var ClassNames = withEmotionCache(function(props, cache) {
  var hasRendered = false;
  var serializedArr = [];
  var css6 = function css7() {
    if (hasRendered && true) {
      throw new Error("css can only be used during render");
    }
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var serialized = serializeStyles(args, cache.registered);
    serializedArr.push(serialized);
    registerStyles(cache, serialized, false);
    return cache.key + "-" + serialized.name;
  };
  var cx3 = function cx4() {
    if (hasRendered && true) {
      throw new Error("cx can only be used during render");
    }
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return merge(cache.registered, css6, classnames(args));
  };
  var content = {
    css: css6,
    cx: cx3,
    theme: (0, import_react2.useContext)(ThemeContext)
  };
  var ele = props.children(content);
  hasRendered = true;
  return (0, import_react2.createElement)(import_react2.Fragment, null, (0, import_react2.createElement)(Insertion3, {
    cache,
    serializedArr
  }), ele);
});
if (true) {
  ClassNames.displayName = "EmotionClassNames";
}
if (true) {
  isBrowser5 = true;
  isJest = typeof jest !== "undefined";
  if (isBrowser5 && !isJest) {
    globalContext = typeof globalThis !== "undefined" ? globalThis : isBrowser5 ? window : global;
    globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
    if (globalContext[globalKey]) {
      console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used.");
    }
    globalContext[globalKey] = true;
  }
}
var isBrowser5;
var isJest;
var globalContext;
var globalKey;

// node_modules/.pnpm/@chakra-ui+css-reset@1.1.3_zvvj5zqukrd2alwllfyasacnw4/node_modules/@chakra-ui/css-reset/dist/chakra-ui-css-reset.esm.js
var React3 = __toESM(require_react());
var CSSReset = function CSSReset2() {
  return React3.createElement(Global, {
    styles: `
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        font-feature-settings: 'kern';
      }

      *,
      *::before,
      *::after {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
      }

      main {
        display: block;
      }

      hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      pre,
      code,
      kbd,
      samp {
        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      b,
      strong {
        font-weight: bold;
      }

      small {
        font-size: 80%;
      }

      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      sub {
        bottom: -0.25em;
      }

      sup {
        top: -0.5em;
      }

      img {
        border-style: none;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      button,
      input {
        overflow: visible;
      }

      button,
      select {
        text-transform: none;
      }

      button::-moz-focus-inner,
      [type="button"]::-moz-focus-inner,
      [type="reset"]::-moz-focus-inner,
      [type="submit"]::-moz-focus-inner {
        border-style: none;
        padding: 0;
      }

      fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      progress {
        vertical-align: baseline;
      }

      textarea {
        overflow: auto;
      }

      [type="checkbox"],
      [type="radio"] {
        box-sizing: border-box;
        padding: 0;
      }

      [type="number"]::-webkit-inner-spin-button,
      [type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      input[type="number"] {
        -moz-appearance: textfield;
      }

      [type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      [type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      details {
        display: block;
      }

      summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      body,
      blockquote,
      dl,
      dd,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      hr,
      figure,
      p,
      pre {
        margin: 0;
      }

      button {
        background: transparent;
        padding: 0;
      }

      fieldset {
        margin: 0;
        padding: 0;
      }

      ol,
      ul {
        margin: 0;
        padding: 0;
      }

      textarea {
        resize: vertical;
      }

      button,
      [role="button"] {
        cursor: pointer;
      }

      button::-moz-focus-inner {
        border: 0 !important;
      }

      table {
        border-collapse: collapse;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-size: inherit;
        font-weight: inherit;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      img,
      svg,
      video,
      canvas,
      audio,
      iframe,
      embed,
      object {
        display: block;
      }

      img,
      video {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible] :focus:not([data-focus-visible-added]) {
        outline: none;
        box-shadow: none;
      }

      select::-ms-expand {
        display: none;
      }
    `
  });
};
var CSSReset$1 = CSSReset;

// node_modules/.pnpm/tiny-invariant@1.2.0/node_modules/tiny-invariant/dist/tiny-invariant.esm.js
var isProduction = false;
var prefix2 = "Invariant failed";
function invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(prefix2);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? prefix2 + ": " + provided : prefix2;
  throw new Error(value);
}

// node_modules/.pnpm/css-box-model@1.2.1/node_modules/css-box-model/dist/css-box-model.esm.js
var getRect = function getRect2(_ref2) {
  var top2 = _ref2.top, right2 = _ref2.right, bottom2 = _ref2.bottom, left2 = _ref2.left;
  var width = right2 - left2;
  var height = bottom2 - top2;
  var rect = {
    top: top2,
    right: right2,
    bottom: bottom2,
    left: left2,
    width,
    height,
    x: left2,
    y: top2,
    center: {
      x: (right2 + left2) / 2,
      y: (bottom2 + top2) / 2
    }
  };
  return rect;
};
var expand = function expand2(target, expandBy) {
  return {
    top: target.top - expandBy.top,
    left: target.left - expandBy.left,
    bottom: target.bottom + expandBy.bottom,
    right: target.right + expandBy.right
  };
};
var shrink = function shrink2(target, shrinkBy) {
  return {
    top: target.top + shrinkBy.top,
    left: target.left + shrinkBy.left,
    bottom: target.bottom - shrinkBy.bottom,
    right: target.right - shrinkBy.right
  };
};
var noSpacing = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var createBox = function createBox2(_ref2) {
  var borderBox = _ref2.borderBox, _ref2$margin = _ref2.margin, margin = _ref2$margin === void 0 ? noSpacing : _ref2$margin, _ref2$border = _ref2.border, border3 = _ref2$border === void 0 ? noSpacing : _ref2$border, _ref2$padding = _ref2.padding, padding = _ref2$padding === void 0 ? noSpacing : _ref2$padding;
  var marginBox = getRect(expand(borderBox, margin));
  var paddingBox = getRect(shrink(borderBox, border3));
  var contentBox = getRect(shrink(paddingBox, padding));
  return {
    marginBox,
    borderBox: getRect(borderBox),
    paddingBox,
    contentBox,
    margin,
    border: border3,
    padding
  };
};
var parse2 = function parse3(raw) {
  var value = raw.slice(0, -2);
  var suffix = raw.slice(-2);
  if (suffix !== "px") {
    return 0;
  }
  var result = Number(value);
  !!isNaN(result) ? true ? invariant(false, "Could not parse value [raw: " + raw + ", without suffix: " + value + "]") : invariant(false) : void 0;
  return result;
};
var calculateBox = function calculateBox2(borderBox, styles3) {
  var margin = {
    top: parse2(styles3.marginTop),
    right: parse2(styles3.marginRight),
    bottom: parse2(styles3.marginBottom),
    left: parse2(styles3.marginLeft)
  };
  var padding = {
    top: parse2(styles3.paddingTop),
    right: parse2(styles3.paddingRight),
    bottom: parse2(styles3.paddingBottom),
    left: parse2(styles3.paddingLeft)
  };
  var border3 = {
    top: parse2(styles3.borderTopWidth),
    right: parse2(styles3.borderRightWidth),
    bottom: parse2(styles3.borderBottomWidth),
    left: parse2(styles3.borderLeftWidth)
  };
  return createBox({
    borderBox,
    margin,
    padding,
    border: border3
  });
};
var getBox = function getBox2(el) {
  var borderBox = el.getBoundingClientRect();
  var styles3 = window.getComputedStyle(el);
  return calculateBox(borderBox, styles3);
};

// node_modules/.pnpm/@chakra-ui+utils@1.10.4/node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js
var import_lodash = __toESM(require_lodash());

// node_modules/.pnpm/framesync@5.3.0/node_modules/framesync/dist/es/on-next-frame.js
var defaultTimestep = 1 / 60 * 1e3;
var getCurrentTime = typeof performance !== "undefined" ? function() {
  return performance.now();
} : function() {
  return Date.now();
};
var onNextFrame = typeof window !== "undefined" ? function(callback) {
  return window.requestAnimationFrame(callback);
} : function(callback) {
  return setTimeout(function() {
    return callback(getCurrentTime());
  }, defaultTimestep);
};

// node_modules/.pnpm/framesync@5.3.0/node_modules/framesync/dist/es/create-render-step.js
function createRenderStep(runNextFrame3) {
  var toRun = [];
  var toRunNextFrame = [];
  var numToRun = 0;
  var isProcessing3 = false;
  var toKeepAlive = /* @__PURE__ */ new WeakSet();
  var step = {
    schedule: function(callback, keepAlive, immediate) {
      if (keepAlive === void 0) {
        keepAlive = false;
      }
      if (immediate === void 0) {
        immediate = false;
      }
      var addToCurrentFrame = immediate && isProcessing3;
      var buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (buffer.indexOf(callback) === -1) {
        buffer.push(callback);
        if (addToCurrentFrame && isProcessing3)
          numToRun = toRun.length;
      }
      return callback;
    },
    cancel: function(callback) {
      var index2 = toRunNextFrame.indexOf(callback);
      if (index2 !== -1)
        toRunNextFrame.splice(index2, 1);
      toKeepAlive.delete(callback);
    },
    process: function(frameData) {
      var _a;
      isProcessing3 = true;
      _a = [toRunNextFrame, toRun], toRun = _a[0], toRunNextFrame = _a[1];
      toRunNextFrame.length = 0;
      numToRun = toRun.length;
      if (numToRun) {
        for (var i = 0; i < numToRun; i++) {
          var callback = toRun[i];
          callback(frameData);
          if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame3();
          }
        }
      }
      isProcessing3 = false;
    }
  };
  return step;
}

// node_modules/.pnpm/framesync@5.3.0/node_modules/framesync/dist/es/index.js
var maxElapsed = 40;
var useDefaultElapsed = true;
var runNextFrame = false;
var isProcessing = false;
var frame = {
  delta: 0,
  timestamp: 0
};
var stepsOrder = ["read", "update", "preRender", "render", "postRender"];
var steps = stepsOrder.reduce(function(acc, key) {
  acc[key] = createRenderStep(function() {
    return runNextFrame = true;
  });
  return acc;
}, {});
var sync = stepsOrder.reduce(function(acc, key) {
  var step = steps[key];
  acc[key] = function(process2, keepAlive, immediate) {
    if (keepAlive === void 0) {
      keepAlive = false;
    }
    if (immediate === void 0) {
      immediate = false;
    }
    if (!runNextFrame)
      startLoop();
    return step.schedule(process2, keepAlive, immediate);
  };
  return acc;
}, {});
var cancelSync = stepsOrder.reduce(function(acc, key) {
  acc[key] = steps[key].cancel;
  return acc;
}, {});
var flushSync = stepsOrder.reduce(function(acc, key) {
  acc[key] = function() {
    return steps[key].process(frame);
  };
  return acc;
}, {});
var processStep = function(stepId) {
  return steps[stepId].process(frame);
};
var processFrame = function(timestamp) {
  runNextFrame = false;
  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
  frame.timestamp = timestamp;
  isProcessing = true;
  stepsOrder.forEach(processStep);
  isProcessing = false;
  if (runNextFrame) {
    useDefaultElapsed = false;
    onNextFrame(processFrame);
  }
};
var startLoop = function() {
  runNextFrame = true;
  useDefaultElapsed = true;
  if (!isProcessing)
    onNextFrame(processFrame);
};
var getFrameData = function() {
  return frame;
};
var es_default = sync;

// node_modules/.pnpm/@chakra-ui+utils@1.10.4/node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js
function getLastItem(array) {
  var length2 = array == null ? 0 : array.length;
  return length2 ? array[length2 - 1] : void 0;
}
function addItem(array, item) {
  return [].concat(array, [item]);
}
function removeItem(array, item) {
  return array.filter(function(eachItem) {
    return eachItem !== item;
  });
}
function getNextItemFromSearch(items, searchString, itemToString, currentItem) {
  if (searchString == null) {
    return currentItem;
  }
  if (!currentItem) {
    var foundItem = items.find(function(item) {
      return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());
    });
    return foundItem;
  }
  var matchingItems = items.filter(function(item) {
    return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());
  });
  if (matchingItems.length > 0) {
    var nextIndex;
    if (matchingItems.includes(currentItem)) {
      var currentIndex = matchingItems.indexOf(currentItem);
      nextIndex = currentIndex + 1;
      if (nextIndex === matchingItems.length) {
        nextIndex = 0;
      }
      return matchingItems[nextIndex];
    }
    nextIndex = items.indexOf(matchingItems[0]);
    return items[nextIndex];
  }
  return currentItem;
}
function isNumber(value) {
  return typeof value === "number";
}
function isNotNumber(value) {
  return typeof value !== "number" || Number.isNaN(value) || !Number.isFinite(value);
}
function isArray(value) {
  return Array.isArray(value);
}
function isEmptyArray(value) {
  return isArray(value) && value.length === 0;
}
function isFunction(value) {
  return typeof value === "function";
}
function isUndefined(value) {
  return typeof value === "undefined" || value === void 0;
}
function isObject(value) {
  var type = typeof value;
  return value != null && (type === "object" || type === "function") && !isArray(value);
}
function isEmptyObject(value) {
  return isObject(value) && Object.keys(value).length === 0;
}
function isNull(value) {
  return value == null;
}
function isString(value) {
  return Object.prototype.toString.call(value) === "[object String]";
}
function isCssVar(value) {
  return /^var\(--.+\)$/.test(value);
}
function isEmpty(value) {
  if (isArray(value))
    return isEmptyArray(value);
  if (isObject(value))
    return isEmptyObject(value);
  if (value == null || value === "")
    return true;
  return false;
}
var __DEV__ = true;
function isRefObject(val) {
  return "current" in val;
}
function isInputEvent(value) {
  return value && isObject(value) && isObject(value.target);
}
function omit(object2, keys4) {
  var result = {};
  Object.keys(object2).forEach(function(key) {
    if (keys4.includes(key))
      return;
    result[key] = object2[key];
  });
  return result;
}
function pick(object2, keys4) {
  var result = {};
  keys4.forEach(function(key) {
    if (key in object2) {
      result[key] = object2[key];
    }
  });
  return result;
}
function split(object2, keys4) {
  var picked = {};
  var omitted = {};
  Object.keys(object2).forEach(function(key) {
    if (keys4.includes(key)) {
      picked[key] = object2[key];
    } else {
      omitted[key] = object2[key];
    }
  });
  return [picked, omitted];
}
function get(obj, path, fallback, index2) {
  var key = typeof path === "string" ? path.split(".") : [path];
  for (index2 = 0; index2 < key.length; index2 += 1) {
    if (!obj)
      break;
    obj = obj[key[index2]];
  }
  return obj === void 0 ? fallback : obj;
}
var memoize2 = function memoize3(fn6) {
  var cache = /* @__PURE__ */ new WeakMap();
  var memoizedFn = function memoizedFn2(obj, path, fallback, index2) {
    if (typeof obj === "undefined") {
      return fn6(obj, path, fallback);
    }
    if (!cache.has(obj)) {
      cache.set(obj, /* @__PURE__ */ new Map());
    }
    var map = cache.get(obj);
    if (map.has(path)) {
      return map.get(path);
    }
    var value = fn6(obj, path, fallback, index2);
    map.set(path, value);
    return value;
  };
  return memoizedFn;
};
var memoizedGet = memoize2(get);
function objectFilter(object2, fn6) {
  var result = {};
  Object.keys(object2).forEach(function(key) {
    var value = object2[key];
    var shouldPass = fn6(value, key, object2);
    if (shouldPass) {
      result[key] = value;
    }
  });
  return result;
}
var filterUndefined = function filterUndefined2(object2) {
  return objectFilter(object2, function(val) {
    return val !== null && val !== void 0;
  });
};
var objectKeys = function objectKeys2(obj) {
  return Object.keys(obj);
};
var fromEntries = function fromEntries2(entries) {
  return entries.reduce(function(carry, _ref2) {
    var key = _ref2[0], value = _ref2[1];
    carry[key] = value;
    return carry;
  }, {});
};
var getCSSVar = function getCSSVar2(theme3, scale3, value) {
  var _theme$__cssMap$$varR, _theme$__cssMap$;
  return (_theme$__cssMap$$varR = (_theme$__cssMap$ = theme3.__cssMap[scale3 + "." + value]) == null ? void 0 : _theme$__cssMap$.varRef) != null ? _theme$__cssMap$$varR : value;
};
function analyzeCSSValue(value) {
  var num = parseFloat(value.toString());
  var unit = value.toString().replace(String(num), "");
  return {
    unitless: !unit,
    value: num,
    unit
  };
}
function px(value) {
  if (value == null)
    return value;
  var _analyzeCSSValue = analyzeCSSValue(value), unitless = _analyzeCSSValue.unitless;
  return unitless || isNumber(value) ? value + "px" : value;
}
var sortByBreakpointValue = function sortByBreakpointValue2(a2, b2) {
  return parseInt(a2[1], 10) > parseInt(b2[1], 10) ? 1 : -1;
};
var sortBps = function sortBps2(breakpoints5) {
  return fromEntries(Object.entries(breakpoints5).sort(sortByBreakpointValue));
};
function normalize(breakpoints5) {
  var sorted = sortBps(breakpoints5);
  return Object.assign(Object.values(sorted), sorted);
}
function keys(breakpoints5) {
  var value = Object.keys(sortBps(breakpoints5));
  return new Set(value);
}
function subtract(value) {
  var _px;
  if (!value)
    return value;
  value = (_px = px(value)) != null ? _px : value;
  var factor = value.endsWith("px") ? -1 : -0.0635;
  return isNumber(value) ? "" + (value + factor) : value.replace(/([0-9]+\.?[0-9]*)/, function(m2) {
    return "" + (parseFloat(m2) + factor);
  });
}
function queryString(min2, max2) {
  var query = ["@media screen"];
  if (min2)
    query.push("and", "(min-width: " + px(min2) + ")");
  if (max2)
    query.push("and", "(max-width: " + px(max2) + ")");
  return query.join(" ");
}
function analyzeBreakpoints(breakpoints5) {
  var _breakpoints$base;
  if (!breakpoints5)
    return null;
  breakpoints5.base = (_breakpoints$base = breakpoints5.base) != null ? _breakpoints$base : "0px";
  var normalized = normalize(breakpoints5);
  var queries2 = Object.entries(breakpoints5).sort(sortByBreakpointValue).map(function(_ref2, index2, entry) {
    var _entry;
    var breakpoint = _ref2[0], minW = _ref2[1];
    var _ref22 = (_entry = entry[index2 + 1]) != null ? _entry : [], maxW = _ref22[1];
    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;
    return {
      breakpoint,
      minW,
      maxW,
      maxWQuery: queryString(null, maxW),
      minWQuery: queryString(minW),
      minMaxQuery: queryString(minW, maxW)
    };
  });
  var _keys = keys(breakpoints5);
  var _keysArr = Array.from(_keys.values());
  return {
    keys: _keys,
    normalized,
    isResponsive: function isResponsive(test2) {
      var keys4 = Object.keys(test2);
      return keys4.length > 0 && keys4.every(function(key) {
        return _keys.has(key);
      });
    },
    asObject: sortBps(breakpoints5),
    asArray: normalize(breakpoints5),
    details: queries2,
    media: [null].concat(normalized.map(function(minW) {
      return queryString(minW);
    }).slice(1)),
    toArrayValue: function toArrayValue(test2) {
      if (!isObject(test2)) {
        throw new Error("toArrayValue: value must be an object");
      }
      var result = _keysArr.map(function(bp) {
        var _test$bp;
        return (_test$bp = test2[bp]) != null ? _test$bp : null;
      });
      while (getLastItem(result) === null) {
        result.pop();
      }
      return result;
    },
    toObjectValue: function toObjectValue(test2) {
      if (!Array.isArray(test2)) {
        throw new Error("toObjectValue: value must be an array");
      }
      return test2.reduce(function(acc, value, index2) {
        var key = _keysArr[index2];
        if (key != null && value != null)
          acc[key] = value;
        return acc;
      }, {});
    }
  };
}
function isElement(el) {
  return el != null && typeof el == "object" && "nodeType" in el && el.nodeType === Node.ELEMENT_NODE;
}
function isHTMLElement(el) {
  var _el$ownerDocument$def;
  if (!isElement(el)) {
    return false;
  }
  var win2 = (_el$ownerDocument$def = el.ownerDocument.defaultView) != null ? _el$ownerDocument$def : window;
  return el instanceof win2.HTMLElement;
}
function getOwnerWindow(node3) {
  var _getOwnerDocument$def, _getOwnerDocument;
  return isElement(node3) ? (_getOwnerDocument$def = (_getOwnerDocument = getOwnerDocument(node3)) == null ? void 0 : _getOwnerDocument.defaultView) != null ? _getOwnerDocument$def : window : window;
}
function getOwnerDocument(node3) {
  var _node$ownerDocument;
  return isElement(node3) ? (_node$ownerDocument = node3.ownerDocument) != null ? _node$ownerDocument : document : document;
}
function getEventWindow(event) {
  var _view;
  return (_view = event.view) != null ? _view : window;
}
function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
var isBrowser2 = canUseDOM();
var dataAttr = function dataAttr2(condition) {
  return condition ? "" : void 0;
};
var ariaAttr = function ariaAttr2(condition) {
  return condition ? true : void 0;
};
var cx = function cx2() {
  for (var _len = arguments.length, classNames3 = new Array(_len), _key = 0; _key < _len; _key++) {
    classNames3[_key] = arguments[_key];
  }
  return classNames3.filter(Boolean).join(" ");
};
function getActiveElement(node3) {
  var doc2 = getOwnerDocument(node3);
  return doc2 == null ? void 0 : doc2.activeElement;
}
function contains(parent, child) {
  if (!parent)
    return false;
  return parent === child || parent.contains(child);
}
function addDomEvent(target, eventName, handler, options) {
  target.addEventListener(eventName, handler, options);
  return function() {
    target.removeEventListener(eventName, handler, options);
  };
}
function normalizeEventKey(event) {
  var key = event.key, keyCode = event.keyCode;
  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf("Arrow") !== 0;
  var eventKey = isArrowKey ? "Arrow" + key : key;
  return eventKey;
}
function getRelatedTarget(event) {
  var _event$target, _event$relatedTarget;
  var target = (_event$target = event.target) != null ? _event$target : event.currentTarget;
  var activeElement = getActiveElement(target);
  return (_event$relatedTarget = event.relatedTarget) != null ? _event$relatedTarget : activeElement;
}
function isRightClick(event) {
  return event.button !== 0;
}
var hasTabIndex = function hasTabIndex2(element) {
  return element.hasAttribute("tabindex");
};
var hasNegativeTabIndex = function hasNegativeTabIndex2(element) {
  return hasTabIndex(element) && element.tabIndex === -1;
};
function isDisabled(element) {
  return Boolean(element.getAttribute("disabled")) === true || Boolean(element.getAttribute("aria-disabled")) === true;
}
function isInputElement(element) {
  return isHTMLElement(element) && element.tagName.toLowerCase() === "input" && "select" in element;
}
function isActiveElement(element) {
  var doc2 = isHTMLElement(element) ? getOwnerDocument(element) : document;
  return doc2.activeElement === element;
}
function hasFocusWithin(element) {
  if (!document.activeElement)
    return false;
  return element.contains(document.activeElement);
}
function isHidden(element) {
  if (element.parentElement && isHidden(element.parentElement))
    return true;
  return element.hidden;
}
function isContentEditable(element) {
  var value = element.getAttribute("contenteditable");
  return value !== "false" && value != null;
}
function isFocusable(element) {
  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {
    return false;
  }
  var localName = element.localName;
  var focusableTags = ["input", "select", "textarea", "button"];
  if (focusableTags.indexOf(localName) >= 0)
    return true;
  var others3 = {
    a: function a2() {
      return element.hasAttribute("href");
    },
    audio: function audio() {
      return element.hasAttribute("controls");
    },
    video: function video() {
      return element.hasAttribute("controls");
    }
  };
  if (localName in others3) {
    return others3[localName]();
  }
  if (isContentEditable(element))
    return true;
  return hasTabIndex(element);
}
function isTabbable(element) {
  if (!element)
    return false;
  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);
}
var focusableElList = ["input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])", "embed", "iframe", "object", "a[href]", "area[href]", "button:not([disabled])", "[tabindex]", "audio[controls]", "video[controls]", "*[tabindex]:not([aria-disabled])", "*[contenteditable]"];
var focusableElSelector = focusableElList.join();
function getAllFocusable(container4) {
  var focusableEls = Array.from(container4.querySelectorAll(focusableElSelector));
  focusableEls.unshift(container4);
  return focusableEls.filter(isFocusable).filter(function(el) {
    return window.getComputedStyle(el).display !== "none";
  });
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function runIfFn(valueOrFn) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return isFunction(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;
}
function callAllHandlers() {
  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    fns[_key2] = arguments[_key2];
  }
  return function func2(event) {
    fns.some(function(fn6) {
      fn6 == null ? void 0 : fn6(event);
      return event == null ? void 0 : event.defaultPrevented;
    });
  };
}
function callAll() {
  for (var _len3 = arguments.length, fns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    fns[_key3] = arguments[_key3];
  }
  return function mergedFn(arg) {
    fns.forEach(function(fn6) {
      fn6 == null ? void 0 : fn6(arg);
    });
  };
}
function once(fn6) {
  var result;
  return function func2() {
    if (fn6) {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      result = fn6.apply(this, args);
      fn6 = null;
    }
    return result;
  };
}
var noop = function noop2() {
};
var warn = once(function(options) {
  return function() {
    var condition = options.condition, message = options.message;
    if (condition && __DEV__) {
      console.warn(message);
    }
  };
});
var error = once(function(options) {
  return function() {
    var condition = options.condition, message = options.message;
    if (condition && __DEV__) {
      console.error(message);
    }
  };
});
var pipe = function pipe2() {
  for (var _len6 = arguments.length, fns = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    fns[_key6] = arguments[_key6];
  }
  return function(v) {
    return fns.reduce(function(a2, b2) {
      return b2(a2);
    }, v);
  };
};
var distance1D = function distance1D2(a2, b2) {
  return Math.abs(a2 - b2);
};
var isPoint = function isPoint2(point) {
  return "x" in point && "y" in point;
};
function distance(a2, b2) {
  if (isNumber(a2) && isNumber(b2)) {
    return distance1D(a2, b2);
  }
  if (isPoint(a2) && isPoint(b2)) {
    var xDelta = distance1D(a2.x, b2.x);
    var yDelta = distance1D(a2.y, b2.y);
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));
  }
  return 0;
}
function focus(element, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$isActive = _options.isActive, isActive = _options$isActive === void 0 ? isActiveElement : _options$isActive, nextTick = _options.nextTick, _options$preventScrol = _options.preventScroll, preventScroll = _options$preventScrol === void 0 ? true : _options$preventScrol, _options$selectTextIf = _options.selectTextIfInput, selectTextIfInput = _options$selectTextIf === void 0 ? true : _options$selectTextIf;
  if (!element || isActive(element))
    return -1;
  function triggerFocus() {
    if (!element) {
      warn({
        condition: true,
        message: "[chakra-ui]: can't call focus() on `null` or `undefined` element"
      });
      return;
    }
    if (supportsPreventScroll()) {
      element.focus({
        preventScroll
      });
    } else {
      element.focus();
      if (preventScroll) {
        var scrollableElements = getScrollableElements(element);
        restoreScrollPosition(scrollableElements);
      }
    }
    if (isInputElement(element) && selectTextIfInput) {
      element.select();
    }
  }
  if (nextTick) {
    return requestAnimationFrame(triggerFocus);
  }
  triggerFocus();
  return -1;
}
var supportsPreventScrollCached = null;
function supportsPreventScroll() {
  if (supportsPreventScrollCached == null) {
    supportsPreventScrollCached = false;
    try {
      var div = document.createElement("div");
      div.focus({
        get preventScroll() {
          supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e) {
    }
  }
  return supportsPreventScrollCached;
}
function getScrollableElements(element) {
  var _doc$defaultView;
  var doc2 = getOwnerDocument(element);
  var win2 = (_doc$defaultView = doc2.defaultView) != null ? _doc$defaultView : window;
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = doc2.scrollingElement || doc2.documentElement;
  while (parent instanceof win2.HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    }
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof win2.HTMLElement) {
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  }
  return scrollableElements;
}
function restoreScrollPosition(scrollableElements) {
  for (var _iterator = _createForOfIteratorHelperLoose(scrollableElements), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, element = _step$value.element, scrollTop = _step$value.scrollTop, scrollLeft = _step$value.scrollLeft;
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
function flatten(target, maxDepth2) {
  if (maxDepth2 === void 0) {
    maxDepth2 = Infinity;
  }
  if (!isObject(target) && !Array.isArray(target) || !maxDepth2) {
    return target;
  }
  return Object.entries(target).reduce(function(result, _ref2) {
    var key = _ref2[0], value = _ref2[1];
    if (isObject(value) || isArray(value)) {
      Object.entries(flatten(value, maxDepth2 - 1)).forEach(function(_ref22) {
        var childKey = _ref22[0], childValue = _ref22[1];
        result[key + "." + childKey] = childValue;
      });
    } else {
      result[key] = value;
    }
    return result;
  }, {});
}
function determineLazyBehavior(options) {
  var hasBeenSelected = options.hasBeenSelected, isLazy = options.isLazy, isSelected = options.isSelected, _options$lazyBehavior = options.lazyBehavior, lazyBehavior = _options$lazyBehavior === void 0 ? "unmount" : _options$lazyBehavior;
  if (!isLazy)
    return true;
  if (isSelected)
    return true;
  if (lazyBehavior === "keepMounted" && hasBeenSelected)
    return true;
  return false;
}
var minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;
var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;
function toNumber(value) {
  var num = parseFloat(value);
  return isNotNumber(num) ? 0 : num;
}
function toPrecision(value, precision) {
  var nextValue = toNumber(value);
  var scaleFactor = Math.pow(10, precision != null ? precision : 10);
  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;
  return precision ? nextValue.toFixed(precision) : nextValue.toString();
}
function countDecimalPlaces(value) {
  if (!Number.isFinite(value))
    return 0;
  var e = 1;
  var p = 0;
  while (Math.round(value * e) / e !== value) {
    e *= 10;
    p += 1;
  }
  return p;
}
function valueToPercent(value, min2, max2) {
  return (value - min2) * 100 / (max2 - min2);
}
function percentToValue(percent2, min2, max2) {
  return (max2 - min2) * percent2 + min2;
}
function roundValueToStep(value, from2, step) {
  var nextValue = Math.round((value - from2) / step) * step + from2;
  var precision = countDecimalPlaces(step);
  return toPrecision(nextValue, precision);
}
function clampValue(value, min2, max2) {
  if (value == null)
    return value;
  warn({
    condition: max2 < min2,
    message: "clamp: max cannot be less than min"
  });
  return Math.min(Math.max(value, min2), max2);
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function isMouseEvent(event) {
  var win2 = getEventWindow(event);
  if (typeof win2.PointerEvent !== "undefined" && event instanceof win2.PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof win2.MouseEvent;
}
function isTouchEvent(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}
function filterPrimaryPointer(eventHandler) {
  return function(event) {
    var win2 = getEventWindow(event);
    var isMouseEvent4 = event instanceof win2.MouseEvent;
    var isPrimaryPointer = !isMouseEvent4 || isMouseEvent4 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint = {
  pageX: 0,
  pageY: 0
};
function pointFromTouch(e, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e.touches[0] || e.changedTouches[0];
  var point = primaryTouch || defaultPagePoint;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
  };
}
var wrapPointerEventHandler = function wrapPointerEventHandler2(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function listener2(event) {
    return handler(event, extractEventInfo(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
};
var supportsPointerEvents = function supportsPointerEvents2() {
  return isBrowser2 && window.onpointerdown === null;
};
var supportsTouchEvents = function supportsTouchEvents2() {
  return isBrowser2 && window.ontouchstart === null;
};
var supportsMouseEvents = function supportsMouseEvents2() {
  return isBrowser2 && window.onmousedown === null;
};
var mouseEventNames = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName(name) {
  if (supportsPointerEvents()) {
    return name;
  }
  if (supportsTouchEvents()) {
    return touchEventNames[name];
  }
  if (supportsMouseEvents()) {
    return mouseEventNames[name];
  }
  return name;
}
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, getPointerEventName(eventName), wrapPointerEventHandler(handler, eventName === "pointerdown"), options);
}
function isMultiTouchEvent(event) {
  return isTouchEvent(event) && event.touches.length > 1;
}
var PanSession = function() {
  function PanSession4(_event, handlers, threshold) {
    var _this = this;
    this.history = [];
    this.startEvent = null;
    this.lastEvent = null;
    this.lastEventInfo = null;
    this.handlers = {};
    this.removeListeners = noop;
    this.threshold = 3;
    this.win = void 0;
    this.updatePoint = function() {
      if (!(_this.lastEvent && _this.lastEventInfo))
        return;
      var info = getPanInfo(_this.lastEventInfo, _this.history);
      var isPanStarted = _this.startEvent !== null;
      var isDistancePastThreshold = distance(info.offset, {
        x: 0,
        y: 0
      }) >= _this.threshold;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      var _getFrameData = getFrameData(), timestamp = _getFrameData.timestamp;
      _this.history.push(_extends2({}, info.point, {
        timestamp
      }));
      var _this$handlers = _this.handlers, onStart = _this$handlers.onStart, onMove = _this$handlers.onMove;
      if (!isPanStarted) {
        onStart == null ? void 0 : onStart(_this.lastEvent, info);
        _this.startEvent = _this.lastEvent;
      }
      onMove == null ? void 0 : onMove(_this.lastEvent, info);
    };
    this.onPointerMove = function(event, info) {
      _this.lastEvent = event;
      _this.lastEventInfo = info;
      if (isMouseEvent(event) && event.buttons === 0) {
        _this.onPointerUp(event, info);
        return;
      }
      es_default.update(_this.updatePoint, true);
    };
    this.onPointerUp = function(event, info) {
      var panInfo = getPanInfo(info, _this.history);
      var _this$handlers2 = _this.handlers, onEnd = _this$handlers2.onEnd, onSessionEnd = _this$handlers2.onSessionEnd;
      onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);
      _this.end();
      if (!onEnd || !_this.startEvent)
        return;
      onEnd == null ? void 0 : onEnd(event, panInfo);
    };
    this.win = getEventWindow(_event);
    if (isMultiTouchEvent(_event))
      return;
    this.handlers = handlers;
    if (threshold) {
      this.threshold = threshold;
    }
    _event.stopPropagation();
    _event.preventDefault();
    var _info = extractEventInfo(_event);
    var _getFrameData2 = getFrameData(), _timestamp = _getFrameData2.timestamp;
    this.history = [_extends2({}, _info.point, {
      timestamp: _timestamp
    })];
    var onSessionStart = handlers.onSessionStart;
    onSessionStart == null ? void 0 : onSessionStart(_event, getPanInfo(_info, this.history));
    this.removeListeners = pipe(addPointerEvent(this.win, "pointermove", this.onPointerMove), addPointerEvent(this.win, "pointerup", this.onPointerUp), addPointerEvent(this.win, "pointercancel", this.onPointerUp));
  }
  var _proto = PanSession4.prototype;
  _proto.updateHandlers = function updateHandlers(handlers) {
    this.handlers = handlers;
  };
  _proto.end = function end2() {
    var _this$removeListeners;
    (_this$removeListeners = this.removeListeners) == null ? void 0 : _this$removeListeners.call(this);
    cancelSync.update(this.updatePoint);
  };
  return PanSession4;
}();
function subtractPoint(a2, b2) {
  return {
    x: a2.x - b2.x,
    y: a2.y - b2.y
  };
}
function startPanPoint(history) {
  return history[0];
}
function lastPanPoint(history) {
  return history[history.length - 1];
}
function getPanInfo(info, history) {
  return {
    point: info.point,
    delta: subtractPoint(info.point, lastPanPoint(history)),
    offset: subtractPoint(info.point, startPanPoint(history)),
    velocity: getVelocity(history, 0.1)
  };
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
var toMilliseconds = function toMilliseconds2(seconds) {
  return seconds * 1e3;
};
function getVelocity(history, timeDelta) {
  if (history.length < 2) {
    return {
      x: 0,
      y: 0
    };
  }
  var i = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint(history);
  while (i >= 0) {
    timestampedPoint = history[i];
    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {
      break;
    }
    i--;
  }
  if (!timestampedPoint) {
    return {
      x: 0,
      y: 0
    };
  }
  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time === 0) {
    return {
      x: 0,
      y: 0
    };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time,
    y: (lastPoint.y - timestampedPoint.y) / time
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}
var breakpoints = Object.freeze(["base", "sm", "md", "lg", "xl", "2xl"]);
function mapResponsive(prop3, mapper) {
  if (isArray(prop3)) {
    return prop3.map(function(item) {
      if (item === null) {
        return null;
      }
      return mapper(item);
    });
  }
  if (isObject(prop3)) {
    return objectKeys(prop3).reduce(function(result, key) {
      result[key] = mapper(prop3[key]);
      return result;
    }, {});
  }
  if (prop3 != null) {
    return mapper(prop3);
  }
  return null;
}
function arrayToObjectNotation(values, bps) {
  if (bps === void 0) {
    bps = breakpoints;
  }
  var result = {};
  values.forEach(function(value, index2) {
    var key = bps[index2];
    if (value == null)
      return;
    result[key] = value;
  });
  return result;
}
function getUserAgentBrowser(navigator2) {
  var ua = navigator2.userAgent, vendor = navigator2.vendor;
  var android = /(android)/i.test(ua);
  switch (true) {
    case /CriOS/.test(ua):
      return "Chrome for iOS";
    case /Edg\//.test(ua):
      return "Edge";
    case (android && /Silk\//.test(ua)):
      return "Silk";
    case (/Chrome/.test(ua) && /Google Inc/.test(vendor)):
      return "Chrome";
    case /Firefox\/\d+\.\d+$/.test(ua):
      return "Firefox";
    case android:
      return "AOSP";
    case /MSIE|Trident/.test(ua):
      return "IE";
    case (/Safari/.test(navigator2.userAgent) && /Apple Computer/.test(ua)):
      return "Safari";
    case /AppleWebKit/.test(ua):
      return "WebKit";
    default:
      return null;
  }
}
function detectBrowser(browser) {
  if (!isBrowser2)
    return false;
  return getUserAgentBrowser(window.navigator) === browser;
}

// node_modules/.pnpm/@chakra-ui+react-utils@1.2.3_react@16.14.0/node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js
var React4 = __toESM(require_react());
function assignRef(ref, value) {
  if (ref == null)
    return;
  if (isFunction(ref)) {
    ref(value);
    return;
  }
  try {
    ref.current = value;
  } catch (error3) {
    throw new Error("Cannot assign value '" + value + "' to ref '" + ref + "'");
  }
}
function mergeRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return function(node3) {
    refs.forEach(function(ref) {
      return assignRef(ref, node3);
    });
  };
}
function createContext3(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$strict = _options.strict, strict = _options$strict === void 0 ? true : _options$strict, _options$errorMessage = _options.errorMessage, errorMessage = _options$errorMessage === void 0 ? "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider" : _options$errorMessage, name = _options.name;
  var Context = React4.createContext(void 0);
  Context.displayName = name;
  function useContext31() {
    var context = React4.useContext(Context);
    if (!context && strict) {
      var error3 = new Error(errorMessage);
      error3.name = "ContextError";
      Error.captureStackTrace == null ? void 0 : Error.captureStackTrace(error3, useContext31);
      throw error3;
    }
    return context;
  }
  return [Context.Provider, useContext31, Context];
}
function getValidChildren(children) {
  return React4.Children.toArray(children).filter(function(child) {
    return React4.isValidElement(child);
  });
}

// node_modules/.pnpm/@chakra-ui+portal@1.3.10_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/@chakra-ui/portal/dist/chakra-ui-portal.esm.js
var React7 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+hooks@1.9.1_react@16.14.0/node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js
var React6 = __toESM(require_react());
var import_react5 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+hooks@1.9.1_react@16.14.0/node_modules/@chakra-ui/hooks/dist/use-animation-state-5054a9f7.esm.js
var React5 = __toESM(require_react());
var import_react4 = __toESM(require_react());
var useSafeLayoutEffect = isBrowser2 ? React5.useLayoutEffect : React5.useEffect;
function useCallbackRef(fn6, deps) {
  if (deps === void 0) {
    deps = [];
  }
  var ref = React5.useRef(fn6);
  useSafeLayoutEffect(function() {
    ref.current = fn6;
  });
  return React5.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current.apply(ref, args);
  }, deps);
}
function useEventListener(event, handler, env3, options) {
  var listener = useCallbackRef(handler);
  React5.useEffect(function() {
    var _runIfFn;
    var node3 = (_runIfFn = runIfFn(env3)) != null ? _runIfFn : document;
    if (!handler) {
      return;
    }
    node3.addEventListener(event, listener, options);
    return function() {
      node3.removeEventListener(event, listener, options);
    };
  }, [event, env3, options, listener, handler]);
  return function() {
    var _runIfFn2;
    var node3 = (_runIfFn2 = runIfFn(env3)) != null ? _runIfFn2 : document;
    node3.removeEventListener(event, listener, options);
  };
}
function useAnimationState(props) {
  var isOpen = props.isOpen, ref = props.ref;
  var _useState = (0, import_react4.useState)(isOpen), mounted = _useState[0], setMounted = _useState[1];
  var _useState2 = (0, import_react4.useState)(false), once3 = _useState2[0], setOnce = _useState2[1];
  (0, import_react4.useEffect)(function() {
    if (!once3) {
      setMounted(isOpen);
      setOnce(true);
    }
  }, [isOpen, once3, mounted]);
  useEventListener("animationend", function() {
    setMounted(isOpen);
  }, function() {
    return ref.current;
  });
  var hidden = isOpen ? false : !mounted;
  return {
    present: !hidden,
    onComplete: function onComplete() {
      var _ref$current;
      var win2 = getOwnerWindow(ref.current);
      var evt = new win2.CustomEvent("animationend", {
        bubbles: true
      });
      (_ref$current = ref.current) == null ? void 0 : _ref$current.dispatchEvent(evt);
    }
  };
}

// node_modules/.pnpm/@chakra-ui+hooks@1.9.1_react@16.14.0/node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js
var import_copy_to_clipboard = __toESM(require_copy_to_clipboard());
function useBoolean(initialState) {
  if (initialState === void 0) {
    initialState = false;
  }
  var _useState = (0, import_react5.useState)(initialState), value = _useState[0], setValue = _useState[1];
  var callbacks = (0, import_react5.useMemo)(function() {
    return {
      on: function on() {
        return setValue(true);
      },
      off: function off() {
        return setValue(false);
      },
      toggle: function toggle() {
        return setValue(function(prev2) {
          return !prev2;
        });
      }
    };
  }, []);
  return [value, callbacks];
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded = ["timeout"];
function useClipboard(text, optionsOrTimeout) {
  if (optionsOrTimeout === void 0) {
    optionsOrTimeout = {};
  }
  var _useState = (0, import_react5.useState)(false), hasCopied = _useState[0], setHasCopied = _useState[1];
  var _ref2 = typeof optionsOrTimeout === "number" ? {
    timeout: optionsOrTimeout
  } : optionsOrTimeout, _ref$timeout = _ref2.timeout, timeout = _ref$timeout === void 0 ? 1500 : _ref$timeout, copyOptions = _objectWithoutPropertiesLoose2(_ref2, _excluded);
  var onCopy = (0, import_react5.useCallback)(function() {
    var didCopy = (0, import_copy_to_clipboard.default)(text, copyOptions);
    setHasCopied(didCopy);
  }, [text, copyOptions]);
  (0, import_react5.useEffect)(function() {
    var timeoutId = null;
    if (hasCopied) {
      timeoutId = window.setTimeout(function() {
        setHasCopied(false);
      }, timeout);
    }
    return function() {
      if (timeoutId) {
        window.clearTimeout(timeoutId);
      }
    };
  }, [timeout, hasCopied]);
  return {
    value: text,
    onCopy,
    hasCopied
  };
}
function useConst(init) {
  var ref = (0, import_react5.useRef)(null);
  if (ref.current === null) {
    ref.current = typeof init === "function" ? init() : init;
  }
  return ref.current;
}
function useControllableProp(prop3, state3) {
  var isControlled = prop3 !== void 0;
  var value = isControlled && typeof prop3 !== "undefined" ? prop3 : state3;
  return [isControlled, value];
}
function useControllableState(props) {
  var valueProp = props.value, defaultValue = props.defaultValue, onChange = props.onChange, _props$shouldUpdate = props.shouldUpdate, shouldUpdate = _props$shouldUpdate === void 0 ? function(prev2, next2) {
    return prev2 !== next2;
  } : _props$shouldUpdate;
  var onChangeProp = useCallbackRef(onChange);
  var shouldUpdateProp = useCallbackRef(shouldUpdate);
  var _React$useState = React6.useState(defaultValue), valueState = _React$useState[0], setValue = _React$useState[1];
  var isControlled = valueProp !== void 0;
  var value = isControlled ? valueProp : valueState;
  var updateValue = React6.useCallback(function(next2) {
    var nextValue = runIfFn(next2, value);
    if (!shouldUpdateProp(value, nextValue)) {
      return;
    }
    if (!isControlled) {
      setValue(nextValue);
    }
    onChangeProp(nextValue);
  }, [isControlled, onChangeProp, value, shouldUpdateProp]);
  return [value, updateValue];
}
function useDimensions(ref, observe) {
  var _React$useState = React6.useState(null), dimensions = _React$useState[0], setDimensions = _React$useState[1];
  var rafId = React6.useRef();
  useSafeLayoutEffect(function() {
    if (!ref.current)
      return void 0;
    var node3 = ref.current;
    function measure() {
      rafId.current = requestAnimationFrame(function() {
        var boxModel = getBox(node3);
        setDimensions(boxModel);
      });
    }
    measure();
    if (observe) {
      window.addEventListener("resize", measure);
      window.addEventListener("scroll", measure);
    }
    return function() {
      if (observe) {
        window.removeEventListener("resize", measure);
        window.removeEventListener("scroll", measure);
      }
      if (rafId.current) {
        cancelAnimationFrame(rafId.current);
      }
    };
  }, [observe]);
  return dimensions;
}
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var defaultIdContext = {
  current: 1
};
var IdContext = React6.createContext(defaultIdContext);
var IdProvider = React6.memo(function(_ref2) {
  var children = _ref2.children;
  return React6.createElement(IdContext.Provider, {
    value: {
      current: 1
    }
  }, children);
});
var genId = function genId2(context) {
  return context.current++;
};
function useId(idProp, prefix3) {
  var context = React6.useContext(IdContext);
  var _React$useState = React6.useState(context.current), id2 = _React$useState[0], setId = _React$useState[1];
  React6.useEffect(function() {
    setId(genId(context));
  }, [context]);
  return React6.useMemo(function() {
    return idProp || [prefix3, id2].filter(Boolean).join("-");
  }, [idProp, prefix3, id2]);
}
function useIds(idProp) {
  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    prefixes[_key - 1] = arguments[_key];
  }
  var id2 = useId(idProp);
  return React6.useMemo(function() {
    return prefixes.map(function(prefix3) {
      return prefix3 + "-" + id2;
    });
  }, [id2, prefixes]);
}
function useOptionalPart(partId) {
  var _React$useState2 = React6.useState(null), id2 = _React$useState2[0], setId = _React$useState2[1];
  var ref = React6.useCallback(function(node3) {
    setId(node3 ? partId : null);
  }, [partId]);
  return {
    ref,
    id: id2,
    isRendered: Boolean(id2)
  };
}
function useDisclosure(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, onCloseProp = _props.onClose, onOpenProp = _props.onOpen, isOpenProp = _props.isOpen, idProp = _props.id;
  var onOpenPropCallbackRef = useCallbackRef(onOpenProp);
  var onClosePropCallbackRef = useCallbackRef(onCloseProp);
  var _React$useState = React6.useState(props.defaultIsOpen || false), isOpenState = _React$useState[0], setIsOpen = _React$useState[1];
  var _useControllableProp = useControllableProp(isOpenProp, isOpenState), isControlled = _useControllableProp[0], isOpen = _useControllableProp[1];
  var id2 = useId(idProp, "disclosure");
  var onClose = React6.useCallback(function() {
    if (!isControlled) {
      setIsOpen(false);
    }
    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();
  }, [isControlled, onClosePropCallbackRef]);
  var onOpen = React6.useCallback(function() {
    if (!isControlled) {
      setIsOpen(true);
    }
    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();
  }, [isControlled, onOpenPropCallbackRef]);
  var onToggle = React6.useCallback(function() {
    var action = isOpen ? onClose : onOpen;
    action();
  }, [isOpen, onOpen, onClose]);
  return {
    isOpen: !!isOpen,
    onOpen,
    onClose,
    onToggle,
    isControlled,
    getButtonProps: function getButtonProps(props2) {
      if (props2 === void 0) {
        props2 = {};
      }
      return _extends3({}, props2, {
        "aria-expanded": "true",
        "aria-controls": id2,
        onClick: callAllHandlers(props2.onClick, onToggle)
      });
    },
    getDisclosureProps: function getDisclosureProps(props2) {
      if (props2 === void 0) {
        props2 = {};
      }
      return _extends3({}, props2, {
        hidden: !isOpen,
        id: id2
      });
    }
  };
}
function useEventCallback(callback) {
  var ref = React6.useRef(callback);
  useSafeLayoutEffect(function() {
    ref.current = callback;
  });
  return React6.useCallback(function(event) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return ref.current.apply(ref, [event].concat(args));
  }, []);
}
function useEventListenerMap() {
  var listeners = React6.useRef(/* @__PURE__ */ new Map());
  var currentListeners = listeners.current;
  var add6 = React6.useCallback(function(el, type, listener, options) {
    var pointerEventListener = wrapPointerEventHandler(listener, type === "pointerdown");
    listeners.current.set(listener, {
      __listener: pointerEventListener,
      type: getPointerEventName(type),
      el,
      options
    });
    el.addEventListener(type, pointerEventListener, options);
  }, []);
  var remove2 = React6.useCallback(function(el, type, listener, options) {
    var _listeners$current$ge = listeners.current.get(listener), pointerEventListener = _listeners$current$ge.__listener;
    el.removeEventListener(type, pointerEventListener, options);
    listeners.current["delete"](pointerEventListener);
  }, []);
  React6.useEffect(function() {
    return function() {
      currentListeners.forEach(function(value, key) {
        remove2(value.el, value.type, key, value.options);
      });
    };
  }, [remove2, currentListeners]);
  return {
    add: add6,
    remove: remove2
  };
}
var useUpdateEffect = function useUpdateEffect2(effect9, deps) {
  var mounted = React6.useRef(false);
  React6.useEffect(function() {
    if (mounted.current) {
      return effect9();
    }
    mounted.current = true;
    return void 0;
  }, deps);
  return mounted.current;
};
function useFocusEffect(ref, options) {
  var shouldFocus = options.shouldFocus, preventScroll = options.preventScroll;
  useUpdateEffect(function() {
    var node3 = ref.current;
    if (!node3 || !shouldFocus)
      return;
    if (!hasFocusWithin(node3)) {
      focus(node3, {
        preventScroll,
        nextTick: true
      });
    }
  }, [shouldFocus, ref, preventScroll]);
}
function preventReturnFocus(containerRef) {
  var el = containerRef.current;
  if (!el)
    return false;
  var activeElement = getActiveElement(el);
  if (!activeElement)
    return false;
  if (contains(el, activeElement))
    return false;
  if (isTabbable(activeElement))
    return true;
  return false;
}
function useFocusOnHide(containerRef, options) {
  var shouldFocusProp = options.shouldFocus, visible = options.visible, focusRef = options.focusRef;
  var shouldFocus = shouldFocusProp && !visible;
  useUpdateEffect(function() {
    if (!shouldFocus)
      return;
    if (preventReturnFocus(containerRef)) {
      return;
    }
    var el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;
    if (el) {
      focus(el, {
        nextTick: true
      });
    }
  }, [shouldFocus, containerRef, focusRef]);
}
function usePointerEvent(env3, eventName, handler, options) {
  return useEventListener(getPointerEventName(eventName), wrapPointerEventHandler(handler, eventName === "pointerdown"), env3, options);
}
function useFocusOnPointerDown(props) {
  var ref = props.ref, elements2 = props.elements, enabled = props.enabled;
  var isSafari = detectBrowser("Safari");
  var doc2 = function doc3() {
    return getOwnerDocument(ref.current);
  };
  usePointerEvent(doc2, "pointerdown", function(event) {
    if (!isSafari || !enabled)
      return;
    var target = event.target;
    var els = elements2 != null ? elements2 : [ref];
    var isValidTarget = els.some(function(elementOrRef) {
      var el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;
      return contains(el, target);
    });
    if (!isActiveElement(target) && isValidTarget) {
      event.preventDefault();
      focus(target);
    }
  });
}
var defaultOptions = {
  preventScroll: true,
  shouldFocus: false
};
function useFocusOnShow(target, options) {
  if (options === void 0) {
    options = defaultOptions;
  }
  var _options = options, focusRef = _options.focusRef, preventScroll = _options.preventScroll, shouldFocus = _options.shouldFocus, visible = _options.visible;
  var element = isRefObject(target) ? target.current : target;
  var autoFocus = shouldFocus && visible;
  var onFocus3 = (0, import_react5.useCallback)(function() {
    if (!element || !autoFocus)
      return;
    if (contains(element, document.activeElement))
      return;
    if (focusRef != null && focusRef.current) {
      focus(focusRef.current, {
        preventScroll,
        nextTick: true
      });
    } else {
      var tabbableEls = getAllFocusable(element);
      if (tabbableEls.length > 0) {
        focus(tabbableEls[0], {
          preventScroll,
          nextTick: true
        });
      }
    }
  }, [autoFocus, preventScroll, element, focusRef]);
  useUpdateEffect(function() {
    onFocus3();
  }, [onFocus3]);
  useEventListener("transitionend", onFocus3, element);
}
function useUnmountEffect(fn6, deps) {
  if (deps === void 0) {
    deps = [];
  }
  return React6.useEffect(function() {
    return function() {
      return fn6();
    };
  }, deps);
}
function useForceUpdate() {
  var unloadingRef = React6.useRef(false);
  var _React$useState = React6.useState(0), count = _React$useState[0], setCount = _React$useState[1];
  useUnmountEffect(function() {
    unloadingRef.current = true;
  });
  return React6.useCallback(function() {
    if (!unloadingRef.current) {
      setCount(count + 1);
    }
  }, [count]);
}
function useInterval(callback, delay) {
  var fn6 = useCallbackRef(callback);
  React6.useEffect(function() {
    var intervalId = null;
    var tick = function tick2() {
      return fn6();
    };
    if (delay !== null) {
      intervalId = window.setInterval(tick, delay);
    }
    return function() {
      if (intervalId) {
        window.clearInterval(intervalId);
      }
    };
  }, [delay, fn6]);
}
function useLatestRef(value) {
  var ref = React6.useRef(null);
  ref.current = value;
  return ref;
}
function assignRef2(ref, value) {
  if (ref == null)
    return;
  if (typeof ref === "function") {
    ref(value);
    return;
  }
  try {
    ref.current = value;
  } catch (error3) {
    throw new Error("Cannot assign value '" + value + "' to ref '" + ref + "'");
  }
}
function useMergeRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return React6.useMemo(function() {
    if (refs.every(function(ref) {
      return ref == null;
    })) {
      return null;
    }
    return function(node3) {
      refs.forEach(function(ref) {
        if (ref)
          assignRef2(ref, node3);
      });
    };
  }, refs);
}
function useMouseDownRef(shouldListen) {
  if (shouldListen === void 0) {
    shouldListen = true;
  }
  var mouseDownRef = import_react5.default.useRef();
  useEventListener("mousedown", function(event) {
    if (shouldListen) {
      mouseDownRef.current = event.target;
    }
  });
  return mouseDownRef;
}
function useOutsideClick(props) {
  var ref = props.ref, handler = props.handler, _props$enabled = props.enabled, enabled = _props$enabled === void 0 ? true : _props$enabled;
  var savedHandler = useCallbackRef(handler);
  var stateRef = (0, import_react5.useRef)({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false
  });
  var state3 = stateRef.current;
  (0, import_react5.useEffect)(function() {
    if (!enabled)
      return;
    var onPointerDown = function onPointerDown2(e) {
      if (isValidEvent(e, ref)) {
        state3.isPointerDown = true;
      }
    };
    var onMouseUp = function onMouseUp2(event) {
      if (state3.ignoreEmulatedMouseEvents) {
        state3.ignoreEmulatedMouseEvents = false;
        return;
      }
      if (state3.isPointerDown && handler && isValidEvent(event, ref)) {
        state3.isPointerDown = false;
        savedHandler(event);
      }
    };
    var onTouchEnd = function onTouchEnd2(event) {
      state3.ignoreEmulatedMouseEvents = true;
      if (handler && state3.isPointerDown && isValidEvent(event, ref)) {
        state3.isPointerDown = false;
        savedHandler(event);
      }
    };
    var doc2 = getOwnerDocument(ref.current);
    doc2.addEventListener("mousedown", onPointerDown, true);
    doc2.addEventListener("mouseup", onMouseUp, true);
    doc2.addEventListener("touchstart", onPointerDown, true);
    doc2.addEventListener("touchend", onTouchEnd, true);
    return function() {
      doc2.removeEventListener("mousedown", onPointerDown, true);
      doc2.removeEventListener("mouseup", onMouseUp, true);
      doc2.removeEventListener("touchstart", onPointerDown, true);
      doc2.removeEventListener("touchend", onTouchEnd, true);
    };
  }, [handler, ref, savedHandler, state3, enabled]);
}
function isValidEvent(event, ref) {
  var _ref$current;
  var target = event.target;
  if (event.button > 0)
    return false;
  if (target) {
    var doc2 = getOwnerDocument(target);
    if (!doc2.body.contains(target))
      return false;
  }
  return !((_ref$current = ref.current) != null && _ref$current.contains(target));
}
function usePanGesture(ref, props) {
  var onPan = props.onPan, onPanStart = props.onPanStart, onPanEnd = props.onPanEnd, onPanSessionStart = props.onPanSessionStart, onPanSessionEnd = props.onPanSessionEnd, threshold = props.threshold;
  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);
  var panSession = (0, import_react5.useRef)(null);
  var handlers = {
    onSessionStart: onPanSessionStart,
    onSessionEnd: onPanSessionEnd,
    onStart: onPanStart,
    onMove: onPan,
    onEnd: function onEnd(event, info) {
      panSession.current = null;
      onPanEnd == null ? void 0 : onPanEnd(event, info);
    }
  };
  (0, import_react5.useEffect)(function() {
    var _panSession$current;
    (_panSession$current = panSession.current) == null ? void 0 : _panSession$current.updateHandlers(handlers);
  });
  function onPointerDown(event) {
    panSession.current = new PanSession(event, handlers, threshold);
  }
  usePointerEvent(function() {
    return ref.current;
  }, "pointerdown", hasPanEvents ? onPointerDown : noop);
  useUnmountEffect(function() {
    var _panSession$current2;
    (_panSession$current2 = panSession.current) == null ? void 0 : _panSession$current2.end();
    panSession.current = null;
  });
}
function usePrevious(value) {
  var ref = (0, import_react5.useRef)();
  (0, import_react5.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref.current;
}
function isPrintableCharacter(event) {
  var key = event.key;
  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);
}
function useShortcut(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, _props$timeout = _props.timeout, timeout = _props$timeout === void 0 ? 300 : _props$timeout, _props$preventDefault = _props.preventDefault, preventDefault = _props$preventDefault === void 0 ? function() {
    return true;
  } : _props$preventDefault;
  var _React$useState = React6.useState([]), keys4 = _React$useState[0], setKeys = _React$useState[1];
  var timeoutRef = React6.useRef();
  var flush = function flush2() {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = null;
    }
  };
  var clearKeysAfterDelay = function clearKeysAfterDelay2() {
    flush();
    timeoutRef.current = setTimeout(function() {
      setKeys([]);
      timeoutRef.current = null;
    }, timeout);
  };
  React6.useEffect(function() {
    return flush;
  }, []);
  function onKeyDown(fn6) {
    return function(event) {
      if (event.key === "Backspace") {
        var keysCopy = [].concat(keys4);
        keysCopy.pop();
        setKeys(keysCopy);
        return;
      }
      if (isPrintableCharacter(event)) {
        var _keysCopy = keys4.concat(event.key);
        if (preventDefault(event)) {
          event.preventDefault();
          event.stopPropagation();
        }
        setKeys(_keysCopy);
        fn6(_keysCopy.join(""));
        clearKeysAfterDelay();
      }
    };
  }
  return onKeyDown;
}
function useTimeout(callback, delay) {
  var fn6 = useCallbackRef(callback);
  React6.useEffect(function() {
    if (delay == null)
      return void 0;
    var timeoutId = null;
    timeoutId = window.setTimeout(function() {
      fn6();
    }, delay);
    return function() {
      if (timeoutId) {
        window.clearTimeout(timeoutId);
      }
    };
  }, [delay, fn6]);
}
function useWhyDidYouUpdate(name, props) {
  var previousProps = React6.useRef();
  React6.useEffect(function() {
    if (previousProps.current) {
      var allKeys = Object.keys(_extends3({}, previousProps.current, props));
      var changesObj = {};
      allKeys.forEach(function(key) {
        if (previousProps.current[key] !== props[key]) {
          changesObj[key] = {
            from: previousProps.current[key],
            to: props[key]
          };
        }
      });
      if (Object.keys(changesObj).length) {
        console.log("[why-did-you-update]", name, changesObj);
      }
    }
    previousProps.current = props;
  });
}

// node_modules/.pnpm/@chakra-ui+portal@1.3.10_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/@chakra-ui/portal/dist/chakra-ui-portal.esm.js
var import_react_dom = __toESM(require_react_dom());
var _createContext$1 = createContext3({
  strict: false,
  name: "PortalManagerContext"
});
var PortalManagerContextProvider = _createContext$1[0];
var usePortalManager = _createContext$1[1];
function PortalManager(props) {
  var children = props.children, zIndex = props.zIndex;
  return React7.createElement(PortalManagerContextProvider, {
    value: {
      zIndex
    }
  }, children);
}
if (__DEV__) {
  PortalManager.displayName = "PortalManager";
}
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded2 = ["containerRef"];
var _createContext = createContext3({
  strict: false,
  name: "PortalContext"
});
var PortalContextProvider = _createContext[0];
var usePortalContext = _createContext[1];
var PORTAL_CLASSNAME = "chakra-portal";
var PORTAL_SELECTOR = ".chakra-portal";
var Container = function Container2(props) {
  return React7.createElement("div", {
    className: "chakra-portal-zIndex",
    style: {
      position: "absolute",
      zIndex: props.zIndex,
      top: 0,
      left: 0,
      right: 0
    }
  }, props.children);
};
var DefaultPortal = function DefaultPortal2(props) {
  var appendToParentPortal = props.appendToParentPortal, children = props.children;
  var tempNode = React7.useRef(null);
  var portal = React7.useRef(null);
  var forceUpdate = useForceUpdate();
  var parentPortal = usePortalContext();
  var manager2 = usePortalManager();
  useSafeLayoutEffect(function() {
    if (!tempNode.current)
      return;
    var doc2 = tempNode.current.ownerDocument;
    var host = appendToParentPortal ? parentPortal != null ? parentPortal : doc2.body : doc2.body;
    if (!host)
      return;
    portal.current = doc2.createElement("div");
    portal.current.className = PORTAL_CLASSNAME;
    host.appendChild(portal.current);
    forceUpdate();
    var portalNode = portal.current;
    return function() {
      if (host.contains(portalNode)) {
        host.removeChild(portalNode);
      }
    };
  }, []);
  var _children = manager2 != null && manager2.zIndex ? React7.createElement(Container, {
    zIndex: manager2 == null ? void 0 : manager2.zIndex
  }, children) : children;
  return portal.current ? (0, import_react_dom.createPortal)(React7.createElement(PortalContextProvider, {
    value: portal.current
  }, _children), portal.current) : React7.createElement("span", {
    ref: tempNode
  });
};
var ContainerPortal = function ContainerPortal2(props) {
  var children = props.children, containerRef = props.containerRef, appendToParentPortal = props.appendToParentPortal;
  var containerEl = containerRef.current;
  var host = containerEl != null ? containerEl : isBrowser2 ? document.body : void 0;
  var portal = React7.useMemo(function() {
    var node3 = containerEl == null ? void 0 : containerEl.ownerDocument.createElement("div");
    if (node3)
      node3.className = PORTAL_CLASSNAME;
    return node3;
  }, [containerEl]);
  var forceUpdate = useForceUpdate();
  useSafeLayoutEffect(function() {
    forceUpdate();
  }, []);
  useSafeLayoutEffect(function() {
    if (!portal || !host)
      return;
    host.appendChild(portal);
    return function() {
      host.removeChild(portal);
    };
  }, [portal, host]);
  if (host && portal) {
    return (0, import_react_dom.createPortal)(React7.createElement(PortalContextProvider, {
      value: appendToParentPortal ? portal : null
    }, children), portal);
  }
  return null;
};
function Portal(props) {
  var containerRef = props.containerRef, rest = _objectWithoutPropertiesLoose3(props, _excluded2);
  return containerRef ? React7.createElement(ContainerPortal, _extends4({
    containerRef
  }, rest)) : React7.createElement(DefaultPortal, rest);
}
Portal.defaultProps = {
  appendToParentPortal: true
};
Portal.className = PORTAL_CLASSNAME;
Portal.selector = PORTAL_SELECTOR;
if (__DEV__) {
  Portal.displayName = "Portal";
}

// node_modules/.pnpm/@chakra-ui+react-env@1.1.6_react@16.14.0/node_modules/@chakra-ui/react-env/dist/chakra-ui-react-env.esm.js
var import_react6 = __toESM(require_react());
var doc = {
  body: {
    classList: {
      add: function add() {
      },
      remove: function remove() {
      }
    }
  },
  addEventListener: function addEventListener() {
  },
  removeEventListener: function removeEventListener() {
  },
  activeElement: {
    blur: function blur() {
    },
    nodeName: ""
  },
  querySelector: function querySelector() {
    return null;
  },
  querySelectorAll: function querySelectorAll() {
    return [];
  },
  getElementById: function getElementById() {
    return null;
  },
  createEvent: function createEvent() {
    return {
      initEvent: function initEvent() {
      }
    };
  },
  createElement: function createElement6() {
    return {
      children: [],
      childNodes: [],
      style: {},
      setAttribute: function setAttribute() {
      },
      getElementsByTagName: function getElementsByTagName() {
        return [];
      }
    };
  }
};
var ssrDocument = doc;
var noop3 = function noop4() {
};
var win = {
  document: ssrDocument,
  navigator: {
    userAgent: ""
  },
  CustomEvent: function CustomEvent() {
    return this;
  },
  addEventListener: noop3,
  removeEventListener: noop3,
  getComputedStyle: function getComputedStyle2() {
    return {
      getPropertyValue: function getPropertyValue() {
        return "";
      }
    };
  },
  matchMedia: function matchMedia() {
    return {
      matches: false,
      addListener: noop3,
      removeListener: noop3
    };
  },
  requestAnimationFrame: function requestAnimationFrame2(callback) {
    if (typeof setTimeout === "undefined") {
      callback();
      return null;
    }
    return setTimeout(callback, 0);
  },
  cancelAnimationFrame: function cancelAnimationFrame2(id2) {
    if (typeof setTimeout === "undefined")
      return;
    clearTimeout(id2);
  },
  setTimeout: function setTimeout2() {
    return 0;
  },
  clearTimeout: noop3,
  setInterval: function setInterval() {
    return 0;
  },
  clearInterval: noop3
};
var ssrWindow = win;
var mockEnv = {
  window: ssrWindow,
  document: ssrDocument
};
var defaultEnv = isBrowser2 ? {
  window,
  document
} : mockEnv;
var EnvironmentContext = (0, import_react6.createContext)(defaultEnv);
if (__DEV__) {
  EnvironmentContext.displayName = "EnvironmentContext";
}
function useEnvironment() {
  return (0, import_react6.useContext)(EnvironmentContext);
}
function EnvironmentProvider(props) {
  var children = props.children, environmentProp = props.environment;
  var _useState = (0, import_react6.useState)(null), node3 = _useState[0], setNode = _useState[1];
  var context = (0, import_react6.useMemo)(function() {
    var _ref2;
    var doc2 = node3 == null ? void 0 : node3.ownerDocument;
    var win2 = node3 == null ? void 0 : node3.ownerDocument.defaultView;
    var nodeEnv = doc2 ? {
      document: doc2,
      window: win2
    } : void 0;
    var env3 = (_ref2 = environmentProp != null ? environmentProp : nodeEnv) != null ? _ref2 : defaultEnv;
    return env3;
  }, [node3, environmentProp]);
  var showEnvGetter = !node3 && !environmentProp;
  return import_react6.default.createElement(EnvironmentContext.Provider, {
    value: context
  }, children, showEnvGetter && import_react6.default.createElement("span", {
    ref: function ref(el) {
      if (el)
        setNode(el);
    }
  }));
}
if (__DEV__) {
  EnvironmentProvider.displayName = "EnvironmentProvider";
}

// node_modules/.pnpm/@chakra-ui+color-mode@1.4.8_react@16.14.0/node_modules/@chakra-ui/color-mode/dist/chakra-ui-color-mode.esm.js
var React9 = __toESM(require_react());
function _extends5() {
  _extends5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var classNames = {
  light: "chakra-ui-light",
  dark: "chakra-ui-dark"
};
var mockBody = {
  classList: {
    add: noop,
    remove: noop
  }
};
var getBody = function getBody2(document2) {
  return isBrowser2 ? document2.body : mockBody;
};
function syncBodyClassName(isDark5, document2) {
  var body = getBody(document2);
  body.classList.add(isDark5 ? classNames.dark : classNames.light);
  body.classList.remove(isDark5 ? classNames.light : classNames.dark);
}
function getMediaQuery(query) {
  var mediaQueryList = window.matchMedia == null ? void 0 : window.matchMedia(query);
  if (!mediaQueryList) {
    return void 0;
  }
  return !!mediaQueryList.media === mediaQueryList.matches;
}
var queries = {
  light: "(prefers-color-scheme: light)",
  dark: "(prefers-color-scheme: dark)"
};
function getColorScheme(fallback) {
  var _getMediaQuery;
  var isDark5 = (_getMediaQuery = getMediaQuery(queries.dark)) != null ? _getMediaQuery : fallback === "dark";
  return isDark5 ? "dark" : "light";
}
function addListener(fn6) {
  if (!("matchMedia" in window)) {
    return noop;
  }
  var mediaQueryList = window.matchMedia(queries.dark);
  var listener = function listener2() {
    fn6(mediaQueryList.matches ? "dark" : "light", true);
  };
  mediaQueryList.addEventListener("change", listener);
  return function() {
    mediaQueryList.removeEventListener("change", listener);
  };
}
var root = {
  get: function get2() {
    return document.documentElement.style.getPropertyValue("--chakra-ui-color-mode") || document.documentElement.dataset.theme;
  },
  set: function set(mode3) {
    if (isBrowser2) {
      document.documentElement.style.setProperty("--chakra-ui-color-mode", mode3);
      document.documentElement.setAttribute("data-theme", mode3);
    }
  }
};
var hasSupport = function hasSupport2() {
  return typeof Storage !== "undefined";
};
var storageKey = "chakra-ui-color-mode";
var localStorageManager = {
  get: function get3(init) {
    if (!hasSupport())
      return init;
    try {
      var _value = localStorage.getItem(storageKey);
      return _value != null ? _value : init;
    } catch (error3) {
      if (__DEV__) {
        console.log(error3);
      }
      return init;
    }
  },
  set: function set2(value) {
    if (!hasSupport())
      return;
    try {
      localStorage.setItem(storageKey, value);
    } catch (error3) {
      if (__DEV__) {
        console.log(error3);
      }
    }
  },
  type: "localStorage"
};
var ColorModeContext = React9.createContext({});
if (__DEV__) {
  ColorModeContext.displayName = "ColorModeContext";
}
var useColorMode = function useColorMode2() {
  var context = React9.useContext(ColorModeContext);
  if (context === void 0) {
    throw new Error("useColorMode must be used within a ColorModeProvider");
  }
  return context;
};
function ColorModeProvider(props) {
  var value = props.value, children = props.children, _props$options = props.options, useSystemColorMode = _props$options.useSystemColorMode, initialColorMode = _props$options.initialColorMode, _props$colorModeManag = props.colorModeManager, colorModeManager = _props$colorModeManag === void 0 ? localStorageManager : _props$colorModeManag;
  var defaultColorMode = initialColorMode === "dark" ? "dark" : "light";
  var _React$useState = React9.useState(colorModeManager.type === "cookie" ? colorModeManager.get(defaultColorMode) : defaultColorMode), colorMode = _React$useState[0], rawSetColorMode = _React$useState[1];
  var _useEnvironment = useEnvironment(), document2 = _useEnvironment.document;
  React9.useEffect(function() {
    if (isBrowser2 && colorModeManager.type === "localStorage") {
      var systemColorWithFallback = getColorScheme(defaultColorMode);
      if (useSystemColorMode) {
        return rawSetColorMode(systemColorWithFallback);
      }
      var rootGet = root.get();
      var colorManagerGet = colorModeManager.get();
      if (rootGet) {
        return rawSetColorMode(rootGet);
      }
      if (colorManagerGet) {
        return rawSetColorMode(colorManagerGet);
      }
      if (initialColorMode === "system") {
        return rawSetColorMode(systemColorWithFallback);
      }
      return rawSetColorMode(defaultColorMode);
    }
  }, [colorModeManager, useSystemColorMode, defaultColorMode, initialColorMode]);
  React9.useEffect(function() {
    var isDark5 = colorMode === "dark";
    syncBodyClassName(isDark5, document2);
    root.set(isDark5 ? "dark" : "light");
  }, [colorMode, document2]);
  var setColorMode = React9.useCallback(function(value2, isListenerEvent) {
    if (isListenerEvent === void 0) {
      isListenerEvent = false;
    }
    if (!isListenerEvent) {
      colorModeManager.set(value2);
    } else if (colorModeManager.get() && !useSystemColorMode)
      return;
    rawSetColorMode(value2);
  }, [colorModeManager, useSystemColorMode]);
  var toggleColorMode = React9.useCallback(function() {
    setColorMode(colorMode === "light" ? "dark" : "light");
  }, [colorMode, setColorMode]);
  React9.useEffect(function() {
    var shouldUseSystemListener = useSystemColorMode || initialColorMode === "system";
    var removeListener;
    if (shouldUseSystemListener) {
      removeListener = addListener(setColorMode);
    }
    return function() {
      if (removeListener && shouldUseSystemListener) {
        removeListener();
      }
    };
  }, [setColorMode, useSystemColorMode, initialColorMode]);
  var context = React9.useMemo(function() {
    return {
      colorMode: value != null ? value : colorMode,
      toggleColorMode: value ? noop : toggleColorMode,
      setColorMode: value ? noop : setColorMode
    };
  }, [colorMode, setColorMode, toggleColorMode, value]);
  return React9.createElement(ColorModeContext.Provider, {
    value: context
  }, children);
}
if (__DEV__) {
  ColorModeProvider.displayName = "ColorModeProvider";
}
var DarkMode = function DarkMode2(props) {
  var context = React9.useMemo(function() {
    return {
      colorMode: "dark",
      toggleColorMode: noop,
      setColorMode: noop
    };
  }, []);
  return React9.createElement(ColorModeContext.Provider, _extends5({
    value: context
  }, props));
};
if (__DEV__) {
  DarkMode.displayName = "DarkMode";
}
var LightMode = function LightMode2(props) {
  var context = React9.useMemo(function() {
    return {
      colorMode: "light",
      toggleColorMode: noop,
      setColorMode: noop
    };
  }, []);
  return React9.createElement(ColorModeContext.Provider, _extends5({
    value: context
  }, props));
};
if (__DEV__) {
  LightMode.displayName = "LightMode";
}

// node_modules/.pnpm/@chakra-ui+styled-system@1.19.0/node_modules/@chakra-ui/styled-system/dist/chakra-ui-styled-system.esm.js
function _extends6() {
  _extends6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
var tokenToCSSVar = function tokenToCSSVar2(scale3, value) {
  return function(theme3) {
    var valueStr = String(value);
    var key = scale3 ? scale3 + "." + valueStr : valueStr;
    return isObject(theme3.__cssMap) && key in theme3.__cssMap ? theme3.__cssMap[key].varRef : value;
  };
};
function createTransform(options) {
  var scale3 = options.scale, transform19 = options.transform, compose = options.compose;
  var fn6 = function fn7(value, theme3) {
    var _transform;
    var _value = tokenToCSSVar(scale3, value)(theme3);
    var result = (_transform = transform19 == null ? void 0 : transform19(_value, theme3)) != null ? _transform : _value;
    if (compose) {
      result = compose(result, theme3);
    }
    return result;
  };
  return fn6;
}
function toConfig(scale3, transform19) {
  return function(property) {
    var result = {
      property,
      scale: scale3
    };
    result.transform = createTransform({
      scale: scale3,
      transform: transform19
    });
    return result;
  };
}
var getRtl = function getRtl2(_ref2) {
  var rtl = _ref2.rtl, ltr = _ref2.ltr;
  return function(theme3) {
    return theme3.direction === "rtl" ? rtl : ltr;
  };
};
function logical(options) {
  var property = options.property, scale3 = options.scale, transform19 = options.transform;
  return {
    scale: scale3,
    property: getRtl(property),
    transform: scale3 ? createTransform({
      scale: scale3,
      compose: transform19
    }) : transform19
  };
}
var _spaceXTemplate;
var _spaceYTemplate;
var transformTemplate = ["rotate(var(--chakra-rotate, 0))", "scaleX(var(--chakra-scale-x, 1))", "scaleY(var(--chakra-scale-y, 1))", "skewX(var(--chakra-skew-x, 0))", "skewY(var(--chakra-skew-y, 0))"];
function getTransformTemplate() {
  return ["translateX(var(--chakra-translate-x, 0))", "translateY(var(--chakra-translate-y, 0))"].concat(transformTemplate).join(" ");
}
function getTransformGpuTemplate() {
  return ["translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)"].concat(transformTemplate).join(" ");
}
var filterTemplate = {
  "--chakra-blur": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-invert": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-sepia": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-drop-shadow": "var(--chakra-empty,/*!*/ /*!*/)",
  filter: ["var(--chakra-blur)", "var(--chakra-brightness)", "var(--chakra-contrast)", "var(--chakra-grayscale)", "var(--chakra-hue-rotate)", "var(--chakra-invert)", "var(--chakra-saturate)", "var(--chakra-sepia)", "var(--chakra-drop-shadow)"].join(" ")
};
var backdropFilterTemplate = {
  backdropFilter: ["var(--chakra-backdrop-blur)", "var(--chakra-backdrop-brightness)", "var(--chakra-backdrop-contrast)", "var(--chakra-backdrop-grayscale)", "var(--chakra-backdrop-hue-rotate)", "var(--chakra-backdrop-invert)", "var(--chakra-backdrop-opacity)", "var(--chakra-backdrop-saturate)", "var(--chakra-backdrop-sepia)"].join(" "),
  "--chakra-backdrop-blur": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-invert": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-opacity": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-sepia": "var(--chakra-empty,/*!*/ /*!*/)"
};
function getRingTemplate(value) {
  return {
    "--chakra-ring-offset-shadow": "var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)",
    "--chakra-ring-shadow": "var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)",
    "--chakra-ring-width": value,
    boxShadow: ["var(--chakra-ring-offset-shadow)", "var(--chakra-ring-shadow)", "var(--chakra-shadow, 0 0 #0000)"].join(", ")
  };
}
var flexDirectionTemplate = {
  "row-reverse": {
    space: "--chakra-space-x-reverse",
    divide: "--chakra-divide-x-reverse"
  },
  "column-reverse": {
    space: "--chakra-space-y-reverse",
    divide: "--chakra-divide-y-reverse"
  }
};
var owlSelector = "& > :not(style) ~ :not(style)";
var spaceXTemplate = (_spaceXTemplate = {}, _spaceXTemplate[owlSelector] = {
  marginInlineStart: "calc(var(--chakra-space-x) * calc(1 - var(--chakra-space-x-reverse)))",
  marginInlineEnd: "calc(var(--chakra-space-x) * var(--chakra-space-x-reverse))"
}, _spaceXTemplate);
var spaceYTemplate = (_spaceYTemplate = {}, _spaceYTemplate[owlSelector] = {
  marginTop: "calc(var(--chakra-space-y) * calc(1 - var(--chakra-space-y-reverse)))",
  marginBottom: "calc(var(--chakra-space-y) * var(--chakra-space-y-reverse))"
}, _spaceYTemplate);
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf5(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf2(subClass, superClass);
}
function _wrapRegExp() {
  _wrapRegExp = function(re, groups) {
    return new BabelRegExp(re, void 0, groups);
  };
  var _super = RegExp.prototype;
  var _groups = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(re, flags, groups) {
    var _this = new RegExp(re, flags);
    _groups.set(_this, groups || _groups.get(re));
    return _setPrototypeOf2(_this, BabelRegExp.prototype);
  }
  _inherits(BabelRegExp, RegExp);
  BabelRegExp.prototype.exec = function(str) {
    var result = _super.exec.call(this, str);
    if (result)
      result.groups = buildGroups(result, this);
    return result;
  };
  BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
    if (typeof substitution === "string") {
      var groups = _groups.get(this);
      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function(_, name) {
        return "$" + groups[name];
      }));
    } else if (typeof substitution === "function") {
      var _this = this;
      return _super[Symbol.replace].call(this, str, function() {
        var args = arguments;
        if (typeof args[args.length - 1] !== "object") {
          args = [].slice.call(args);
          args.push(buildGroups(args, _this));
        }
        return substitution.apply(this, args);
      });
    } else {
      return _super[Symbol.replace].call(this, str, substitution);
    }
  };
  function buildGroups(result, re) {
    var g = _groups.get(re);
    return Object.keys(g).reduce(function(groups, name) {
      groups[name] = result[g[name]];
      return groups;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _wrapRegExp.apply(this, arguments);
}
var directionMap = {
  "to-t": "to top",
  "to-tr": "to top right",
  "to-r": "to right",
  "to-br": "to bottom right",
  "to-b": "to bottom",
  "to-bl": "to bottom left",
  "to-l": "to left",
  "to-tl": "to top left"
};
var valueSet = new Set(Object.values(directionMap));
var globalSet = /* @__PURE__ */ new Set(["none", "-moz-initial", "inherit", "initial", "revert", "unset"]);
var trimSpace = function trimSpace2(str) {
  return str.trim();
};
function parseGradient(value, theme3) {
  var _regex$exec$groups, _regex$exec;
  if (value == null || globalSet.has(value))
    return value;
  var regex = _wrapRegExp(/(^[\x2DA-Za-z]+)\(((.*))\)/g, {
    type: 1,
    values: 2
  });
  var _ref2 = (_regex$exec$groups = (_regex$exec = regex.exec(value)) == null ? void 0 : _regex$exec.groups) != null ? _regex$exec$groups : {}, type = _ref2.type, values = _ref2.values;
  if (!type || !values)
    return value;
  var _type = type.includes("-gradient") ? type : type + "-gradient";
  var _values$split$map$fil = values.split(",").map(trimSpace).filter(Boolean), maybeDirection = _values$split$map$fil[0], stops = _values$split$map$fil.slice(1);
  if ((stops == null ? void 0 : stops.length) === 0)
    return value;
  var direction3 = maybeDirection in directionMap ? directionMap[maybeDirection] : maybeDirection;
  stops.unshift(direction3);
  var _values = stops.map(function(stop2) {
    if (valueSet.has(stop2))
      return stop2;
    var firstStop = stop2.indexOf(" ");
    var _ref22 = firstStop !== -1 ? [stop2.substr(0, firstStop), stop2.substr(firstStop + 1)] : [stop2], _color = _ref22[0], _stop = _ref22[1];
    var _stopOrFunc = isCSSFunction(_stop) ? _stop : _stop && _stop.split(" ");
    var key = "colors." + _color;
    var color4 = key in theme3.__cssMap ? theme3.__cssMap[key].varRef : _color;
    return _stopOrFunc ? [color4].concat(Array.isArray(_stopOrFunc) ? _stopOrFunc : [_stopOrFunc]).join(" ") : color4;
  });
  return _type + "(" + _values.join(", ") + ")";
}
var isCSSFunction = function isCSSFunction2(value) {
  return isString(value) && value.includes("(") && value.includes(")");
};
var gradientTransform = function gradientTransform2(value, theme3) {
  return parseGradient(value, theme3 != null ? theme3 : {});
};
var analyzeCSSValue2 = function analyzeCSSValue3(value) {
  var num = parseFloat(value.toString());
  var unit = value.toString().replace(String(num), "");
  return {
    unitless: !unit,
    value: num,
    unit
  };
};
var wrap = function wrap2(str) {
  return function(value) {
    return str + "(" + value + ")";
  };
};
var transformFunctions = {
  filter: function filter(value) {
    return value !== "auto" ? value : filterTemplate;
  },
  backdropFilter: function backdropFilter(value) {
    return value !== "auto" ? value : backdropFilterTemplate;
  },
  ring: function ring(value) {
    return getRingTemplate(transformFunctions.px(value));
  },
  bgClip: function bgClip(value) {
    return value === "text" ? {
      color: "transparent",
      backgroundClip: "text"
    } : {
      backgroundClip: value
    };
  },
  transform: function transform(value) {
    if (value === "auto")
      return getTransformTemplate();
    if (value === "auto-gpu")
      return getTransformGpuTemplate();
    return value;
  },
  px: function px2(value) {
    if (value == null)
      return value;
    var _analyzeCSSValue = analyzeCSSValue2(value), unitless = _analyzeCSSValue.unitless;
    return unitless || isNumber(value) ? value + "px" : value;
  },
  fraction: function fraction(value) {
    return !isNumber(value) || value > 1 ? value : value * 100 + "%";
  },
  "float": function float(value, theme3) {
    var map = {
      left: "right",
      right: "left"
    };
    return theme3.direction === "rtl" ? map[value] : value;
  },
  degree: function degree(value) {
    if (isCssVar(value) || value == null)
      return value;
    var unitless = isString(value) && !value.endsWith("deg");
    return isNumber(value) || unitless ? value + "deg" : value;
  },
  gradient: gradientTransform,
  blur: wrap("blur"),
  opacity: wrap("opacity"),
  brightness: wrap("brightness"),
  contrast: wrap("contrast"),
  dropShadow: wrap("drop-shadow"),
  grayscale: wrap("grayscale"),
  hueRotate: wrap("hue-rotate"),
  invert: wrap("invert"),
  saturate: wrap("saturate"),
  sepia: wrap("sepia"),
  bgImage: function bgImage(value) {
    if (value == null)
      return value;
    var prevent = isCSSFunction(value) || globalSet.has(value);
    return !prevent ? "url(" + value + ")" : value;
  },
  outline: function outline(value) {
    var isNoneOrZero = String(value) === "0" || String(value) === "none";
    return value !== null && isNoneOrZero ? {
      outline: "2px solid transparent",
      outlineOffset: "2px"
    } : {
      outline: value
    };
  },
  flexDirection: function flexDirection(value) {
    var _flexDirectionTemplat;
    var _ref2 = (_flexDirectionTemplat = flexDirectionTemplate[value]) != null ? _flexDirectionTemplat : {}, space3 = _ref2.space, divide5 = _ref2.divide;
    var result = {
      flexDirection: value
    };
    if (space3)
      result[space3] = 1;
    if (divide5)
      result[divide5] = 1;
    return result;
  }
};
var t = {
  borderWidths: toConfig("borderWidths"),
  borderStyles: toConfig("borderStyles"),
  colors: toConfig("colors"),
  borders: toConfig("borders"),
  radii: toConfig("radii", transformFunctions.px),
  space: toConfig("space", transformFunctions.px),
  spaceT: toConfig("space", transformFunctions.px),
  degreeT: function degreeT(property) {
    return {
      property,
      transform: transformFunctions.degree
    };
  },
  prop: function prop(property, scale3, transform19) {
    return _extends6({
      property,
      scale: scale3
    }, scale3 && {
      transform: createTransform({
        scale: scale3,
        transform: transform19
      })
    });
  },
  propT: function propT(property, transform19) {
    return {
      property,
      transform: transform19
    };
  },
  sizes: toConfig("sizes", transformFunctions.px),
  sizesT: toConfig("sizes", transformFunctions.fraction),
  shadows: toConfig("shadows"),
  logical,
  blur: toConfig("blur", transformFunctions.blur)
};
var background = {
  background: t.colors("background"),
  backgroundColor: t.colors("backgroundColor"),
  backgroundImage: t.propT("backgroundImage", transformFunctions.bgImage),
  backgroundSize: true,
  backgroundPosition: true,
  backgroundRepeat: true,
  backgroundAttachment: true,
  backgroundClip: {
    transform: transformFunctions.bgClip
  },
  bgSize: t.prop("backgroundSize"),
  bgPosition: t.prop("backgroundPosition"),
  bg: t.colors("background"),
  bgColor: t.colors("backgroundColor"),
  bgPos: t.prop("backgroundPosition"),
  bgRepeat: t.prop("backgroundRepeat"),
  bgAttachment: t.prop("backgroundAttachment"),
  bgGradient: t.propT("backgroundImage", transformFunctions.gradient),
  bgClip: {
    transform: transformFunctions.bgClip
  }
};
Object.assign(background, {
  bgImage: background.backgroundImage,
  bgImg: background.backgroundImage
});
var border = {
  border: t.borders("border"),
  borderWidth: t.borderWidths("borderWidth"),
  borderStyle: t.borderStyles("borderStyle"),
  borderColor: t.colors("borderColor"),
  borderRadius: t.radii("borderRadius"),
  borderTop: t.borders("borderTop"),
  borderBlockStart: t.borders("borderBlockStart"),
  borderTopLeftRadius: t.radii("borderTopLeftRadius"),
  borderStartStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderTopLeftRadius",
      rtl: "borderTopRightRadius"
    }
  }),
  borderEndStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderBottomLeftRadius",
      rtl: "borderBottomRightRadius"
    }
  }),
  borderTopRightRadius: t.radii("borderTopRightRadius"),
  borderStartEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderTopRightRadius",
      rtl: "borderTopLeftRadius"
    }
  }),
  borderEndEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderBottomRightRadius",
      rtl: "borderBottomLeftRadius"
    }
  }),
  borderRight: t.borders("borderRight"),
  borderInlineEnd: t.borders("borderInlineEnd"),
  borderBottom: t.borders("borderBottom"),
  borderBlockEnd: t.borders("borderBlockEnd"),
  borderBottomLeftRadius: t.radii("borderBottomLeftRadius"),
  borderBottomRightRadius: t.radii("borderBottomRightRadius"),
  borderLeft: t.borders("borderLeft"),
  borderInlineStart: {
    property: "borderInlineStart",
    scale: "borders"
  },
  borderInlineStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopLeftRadius", "borderBottomLeftRadius"],
      rtl: ["borderTopRightRadius", "borderBottomRightRadius"]
    }
  }),
  borderInlineEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopRightRadius", "borderBottomRightRadius"],
      rtl: ["borderTopLeftRadius", "borderBottomLeftRadius"]
    }
  }),
  borderX: t.borders(["borderLeft", "borderRight"]),
  borderInline: t.borders("borderInline"),
  borderY: t.borders(["borderTop", "borderBottom"]),
  borderBlock: t.borders("borderBlock"),
  borderTopWidth: t.borderWidths("borderTopWidth"),
  borderBlockStartWidth: t.borderWidths("borderBlockStartWidth"),
  borderTopColor: t.colors("borderTopColor"),
  borderBlockStartColor: t.colors("borderBlockStartColor"),
  borderTopStyle: t.borderStyles("borderTopStyle"),
  borderBlockStartStyle: t.borderStyles("borderBlockStartStyle"),
  borderBottomWidth: t.borderWidths("borderBottomWidth"),
  borderBlockEndWidth: t.borderWidths("borderBlockEndWidth"),
  borderBottomColor: t.colors("borderBottomColor"),
  borderBlockEndColor: t.colors("borderBlockEndColor"),
  borderBottomStyle: t.borderStyles("borderBottomStyle"),
  borderBlockEndStyle: t.borderStyles("borderBlockEndStyle"),
  borderLeftWidth: t.borderWidths("borderLeftWidth"),
  borderInlineStartWidth: t.borderWidths("borderInlineStartWidth"),
  borderLeftColor: t.colors("borderLeftColor"),
  borderInlineStartColor: t.colors("borderInlineStartColor"),
  borderLeftStyle: t.borderStyles("borderLeftStyle"),
  borderInlineStartStyle: t.borderStyles("borderInlineStartStyle"),
  borderRightWidth: t.borderWidths("borderRightWidth"),
  borderInlineEndWidth: t.borderWidths("borderInlineEndWidth"),
  borderRightColor: t.colors("borderRightColor"),
  borderInlineEndColor: t.colors("borderInlineEndColor"),
  borderRightStyle: t.borderStyles("borderRightStyle"),
  borderInlineEndStyle: t.borderStyles("borderInlineEndStyle"),
  borderTopRadius: t.radii(["borderTopLeftRadius", "borderTopRightRadius"]),
  borderBottomRadius: t.radii(["borderBottomLeftRadius", "borderBottomRightRadius"]),
  borderLeftRadius: t.radii(["borderTopLeftRadius", "borderBottomLeftRadius"]),
  borderRightRadius: t.radii(["borderTopRightRadius", "borderBottomRightRadius"])
};
Object.assign(border, {
  rounded: border.borderRadius,
  roundedTop: border.borderTopRadius,
  roundedTopLeft: border.borderTopLeftRadius,
  roundedTopRight: border.borderTopRightRadius,
  roundedTopStart: border.borderStartStartRadius,
  roundedTopEnd: border.borderStartEndRadius,
  roundedBottom: border.borderBottomRadius,
  roundedBottomLeft: border.borderBottomLeftRadius,
  roundedBottomRight: border.borderBottomRightRadius,
  roundedBottomStart: border.borderEndStartRadius,
  roundedBottomEnd: border.borderEndEndRadius,
  roundedLeft: border.borderLeftRadius,
  roundedRight: border.borderRightRadius,
  roundedStart: border.borderInlineStartRadius,
  roundedEnd: border.borderInlineEndRadius,
  borderStart: border.borderInlineStart,
  borderEnd: border.borderInlineEnd,
  borderTopStartRadius: border.borderStartStartRadius,
  borderTopEndRadius: border.borderStartEndRadius,
  borderBottomStartRadius: border.borderEndStartRadius,
  borderBottomEndRadius: border.borderEndEndRadius,
  borderStartRadius: border.borderInlineStartRadius,
  borderEndRadius: border.borderInlineEndRadius,
  borderStartWidth: border.borderInlineStartWidth,
  borderEndWidth: border.borderInlineEndWidth,
  borderStartColor: border.borderInlineStartColor,
  borderEndColor: border.borderInlineEndColor,
  borderStartStyle: border.borderInlineStartStyle,
  borderEndStyle: border.borderInlineEndStyle
});
var color = {
  color: t.colors("color"),
  textColor: t.colors("color"),
  fill: t.colors("fill"),
  stroke: t.colors("stroke")
};
var effect = {
  boxShadow: t.shadows("boxShadow"),
  mixBlendMode: true,
  blendMode: t.prop("mixBlendMode"),
  backgroundBlendMode: true,
  bgBlendMode: t.prop("backgroundBlendMode"),
  opacity: true
};
Object.assign(effect, {
  shadow: effect.boxShadow
});
var filter2 = {
  filter: {
    transform: transformFunctions.filter
  },
  blur: t.blur("--chakra-blur"),
  brightness: t.propT("--chakra-brightness", transformFunctions.brightness),
  contrast: t.propT("--chakra-contrast", transformFunctions.contrast),
  hueRotate: t.degreeT("--chakra-hue-rotate"),
  invert: t.propT("--chakra-invert", transformFunctions.invert),
  saturate: t.propT("--chakra-saturate", transformFunctions.saturate),
  dropShadow: t.propT("--chakra-drop-shadow", transformFunctions.dropShadow),
  backdropFilter: {
    transform: transformFunctions.backdropFilter
  },
  backdropBlur: t.blur("--chakra-backdrop-blur"),
  backdropBrightness: t.propT("--chakra-backdrop-brightness", transformFunctions.brightness),
  backdropContrast: t.propT("--chakra-backdrop-contrast", transformFunctions.contrast),
  backdropHueRotate: t.degreeT("--chakra-backdrop-hue-rotate"),
  backdropInvert: t.propT("--chakra-backdrop-invert", transformFunctions.invert),
  backdropSaturate: t.propT("--chakra-backdrop-saturate", transformFunctions.saturate)
};
var flexbox = {
  alignItems: true,
  alignContent: true,
  justifyItems: true,
  justifyContent: true,
  flexWrap: true,
  flexDirection: {
    transform: transformFunctions.flexDirection
  },
  experimental_spaceX: {
    "static": spaceXTemplate,
    transform: createTransform({
      scale: "space",
      transform: function transform2(value) {
        return value !== null ? {
          "--chakra-space-x": value
        } : null;
      }
    })
  },
  experimental_spaceY: {
    "static": spaceYTemplate,
    transform: createTransform({
      scale: "space",
      transform: function transform3(value) {
        return value != null ? {
          "--chakra-space-y": value
        } : null;
      }
    })
  },
  flex: true,
  flexFlow: true,
  flexGrow: true,
  flexShrink: true,
  flexBasis: t.sizes("flexBasis"),
  justifySelf: true,
  alignSelf: true,
  order: true,
  placeItems: true,
  placeContent: true,
  placeSelf: true,
  gap: t.space("gap"),
  rowGap: t.space("rowGap"),
  columnGap: t.space("columnGap")
};
Object.assign(flexbox, {
  flexDir: flexbox.flexDirection
});
var grid = {
  gridGap: t.space("gridGap"),
  gridColumnGap: t.space("gridColumnGap"),
  gridRowGap: t.space("gridRowGap"),
  gridColumn: true,
  gridRow: true,
  gridAutoFlow: true,
  gridAutoColumns: true,
  gridColumnStart: true,
  gridColumnEnd: true,
  gridRowStart: true,
  gridRowEnd: true,
  gridAutoRows: true,
  gridTemplate: true,
  gridTemplateColumns: true,
  gridTemplateRows: true,
  gridTemplateAreas: true,
  gridArea: true
};
var interactivity = {
  appearance: true,
  cursor: true,
  resize: true,
  userSelect: true,
  pointerEvents: true,
  outline: {
    transform: transformFunctions.outline
  },
  outlineOffset: true,
  outlineColor: t.colors("outlineColor")
};
var layout = {
  width: t.sizesT("width"),
  inlineSize: t.sizesT("inlineSize"),
  height: t.sizes("height"),
  blockSize: t.sizes("blockSize"),
  boxSize: t.sizes(["width", "height"]),
  minWidth: t.sizes("minWidth"),
  minInlineSize: t.sizes("minInlineSize"),
  minHeight: t.sizes("minHeight"),
  minBlockSize: t.sizes("minBlockSize"),
  maxWidth: t.sizes("maxWidth"),
  maxInlineSize: t.sizes("maxInlineSize"),
  maxHeight: t.sizes("maxHeight"),
  maxBlockSize: t.sizes("maxBlockSize"),
  d: t.prop("display"),
  overflow: true,
  overflowX: true,
  overflowY: true,
  overscrollBehavior: true,
  overscrollBehaviorX: true,
  overscrollBehaviorY: true,
  display: true,
  verticalAlign: true,
  boxSizing: true,
  boxDecorationBreak: true,
  "float": t.propT("float", transformFunctions["float"]),
  objectFit: true,
  objectPosition: true,
  visibility: true,
  isolation: true
};
Object.assign(layout, {
  w: layout.width,
  h: layout.height,
  minW: layout.minWidth,
  maxW: layout.maxWidth,
  minH: layout.minHeight,
  maxH: layout.maxHeight,
  overscroll: layout.overscrollBehavior,
  overscrollX: layout.overscrollBehaviorX,
  overscrollY: layout.overscrollBehaviorY
});
var list = {
  listStyleType: true,
  listStylePosition: true,
  listStylePos: t.prop("listStylePosition"),
  listStyleImage: true,
  listStyleImg: t.prop("listStyleImage")
};
var srOnly = {
  border: "0px",
  clip: "rect(0, 0, 0, 0)",
  width: "1px",
  height: "1px",
  margin: "-1px",
  padding: "0px",
  overflow: "hidden",
  whiteSpace: "nowrap",
  position: "absolute"
};
var srFocusable = {
  position: "static",
  width: "auto",
  height: "auto",
  clip: "auto",
  padding: "0",
  margin: "0",
  overflow: "visible",
  whiteSpace: "normal"
};
var getWithPriority = function getWithPriority2(theme3, key, styles3) {
  var result = {};
  var obj = memoizedGet(theme3, key, {});
  for (var prop3 in obj) {
    var isInStyles = prop3 in styles3 && styles3[prop3] != null;
    if (!isInStyles)
      result[prop3] = obj[prop3];
  }
  return result;
};
var others = {
  srOnly: {
    transform: function transform4(value) {
      if (value === true)
        return srOnly;
      if (value === "focusable")
        return srFocusable;
      return {};
    }
  },
  layerStyle: {
    processResult: true,
    transform: function transform5(value, theme3, styles3) {
      return getWithPriority(theme3, "layerStyles." + value, styles3);
    }
  },
  textStyle: {
    processResult: true,
    transform: function transform6(value, theme3, styles3) {
      return getWithPriority(theme3, "textStyles." + value, styles3);
    }
  },
  apply: {
    processResult: true,
    transform: function transform7(value, theme3, styles3) {
      return getWithPriority(theme3, value, styles3);
    }
  }
};
var position2 = {
  position: true,
  pos: t.prop("position"),
  zIndex: t.prop("zIndex", "zIndices"),
  inset: t.spaceT("inset"),
  insetX: t.spaceT(["left", "right"]),
  insetInline: t.spaceT("insetInline"),
  insetY: t.spaceT(["top", "bottom"]),
  insetBlock: t.spaceT("insetBlock"),
  top: t.spaceT("top"),
  insetBlockStart: t.spaceT("insetBlockStart"),
  bottom: t.spaceT("bottom"),
  insetBlockEnd: t.spaceT("insetBlockEnd"),
  left: t.spaceT("left"),
  insetInlineStart: t.logical({
    scale: "space",
    property: {
      ltr: "left",
      rtl: "right"
    }
  }),
  right: t.spaceT("right"),
  insetInlineEnd: t.logical({
    scale: "space",
    property: {
      ltr: "right",
      rtl: "left"
    }
  })
};
Object.assign(position2, {
  insetStart: position2.insetInlineStart,
  insetEnd: position2.insetInlineEnd
});
var ring2 = {
  ring: {
    transform: transformFunctions.ring
  },
  ringColor: t.colors("--chakra-ring-color"),
  ringOffset: t.prop("--chakra-ring-offset-width"),
  ringOffsetColor: t.colors("--chakra-ring-offset-color"),
  ringInset: t.prop("--chakra-ring-inset")
};
var space = {
  margin: t.spaceT("margin"),
  marginTop: t.spaceT("marginTop"),
  marginBlockStart: t.spaceT("marginBlockStart"),
  marginRight: t.spaceT("marginRight"),
  marginInlineEnd: t.spaceT("marginInlineEnd"),
  marginBottom: t.spaceT("marginBottom"),
  marginBlockEnd: t.spaceT("marginBlockEnd"),
  marginLeft: t.spaceT("marginLeft"),
  marginInlineStart: t.spaceT("marginInlineStart"),
  marginX: t.spaceT(["marginInlineStart", "marginInlineEnd"]),
  marginInline: t.spaceT("marginInline"),
  marginY: t.spaceT(["marginTop", "marginBottom"]),
  marginBlock: t.spaceT("marginBlock"),
  padding: t.space("padding"),
  paddingTop: t.space("paddingTop"),
  paddingBlockStart: t.space("paddingBlockStart"),
  paddingRight: t.space("paddingRight"),
  paddingBottom: t.space("paddingBottom"),
  paddingBlockEnd: t.space("paddingBlockEnd"),
  paddingLeft: t.space("paddingLeft"),
  paddingInlineStart: t.space("paddingInlineStart"),
  paddingInlineEnd: t.space("paddingInlineEnd"),
  paddingX: t.space(["paddingInlineStart", "paddingInlineEnd"]),
  paddingInline: t.space("paddingInline"),
  paddingY: t.space(["paddingTop", "paddingBottom"]),
  paddingBlock: t.space("paddingBlock")
};
Object.assign(space, {
  m: space.margin,
  mt: space.marginTop,
  mr: space.marginRight,
  me: space.marginInlineEnd,
  marginEnd: space.marginInlineEnd,
  mb: space.marginBottom,
  ml: space.marginLeft,
  ms: space.marginInlineStart,
  marginStart: space.marginInlineStart,
  mx: space.marginX,
  my: space.marginY,
  p: space.padding,
  pt: space.paddingTop,
  py: space.paddingY,
  px: space.paddingX,
  pb: space.paddingBottom,
  pl: space.paddingLeft,
  ps: space.paddingInlineStart,
  paddingStart: space.paddingInlineStart,
  pr: space.paddingRight,
  pe: space.paddingInlineEnd,
  paddingEnd: space.paddingInlineEnd
});
var textDecoration = {
  textDecorationColor: t.colors("textDecorationColor"),
  textDecoration: true,
  textDecor: {
    property: "textDecoration"
  },
  textDecorationLine: true,
  textDecorationStyle: true,
  textDecorationThickness: true,
  textUnderlineOffset: true,
  textShadow: t.shadows("textShadow")
};
var transform8 = {
  clipPath: true,
  transform: t.propT("transform", transformFunctions.transform),
  transformOrigin: true,
  translateX: t.spaceT("--chakra-translate-x"),
  translateY: t.spaceT("--chakra-translate-y"),
  skewX: t.degreeT("--chakra-skew-x"),
  skewY: t.degreeT("--chakra-skew-y"),
  scaleX: t.prop("--chakra-scale-x"),
  scaleY: t.prop("--chakra-scale-y"),
  scale: t.prop(["--chakra-scale-x", "--chakra-scale-y"]),
  rotate: t.degreeT("--chakra-rotate")
};
var transition = {
  transition: true,
  transitionDelay: true,
  animation: true,
  willChange: true,
  transitionDuration: t.prop("transitionDuration", "transition.duration"),
  transitionProperty: t.prop("transitionProperty", "transition.property"),
  transitionTimingFunction: t.prop("transitionTimingFunction", "transition.easing")
};
var typography = {
  fontFamily: t.prop("fontFamily", "fonts"),
  fontSize: t.prop("fontSize", "fontSizes", transformFunctions.px),
  fontWeight: t.prop("fontWeight", "fontWeights"),
  lineHeight: t.prop("lineHeight", "lineHeights"),
  letterSpacing: t.prop("letterSpacing", "letterSpacings"),
  textAlign: true,
  fontStyle: true,
  wordBreak: true,
  overflowWrap: true,
  textOverflow: true,
  textTransform: true,
  whiteSpace: true,
  noOfLines: {
    "static": {
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitBoxOrient: "vertical",
      WebkitLineClamp: "var(--chakra-line-clamp)"
    },
    property: "--chakra-line-clamp"
  },
  isTruncated: {
    transform: function transform9(value) {
      if (value === true) {
        return {
          overflow: "hidden",
          textOverflow: "ellipsis",
          whiteSpace: "nowrap"
        };
      }
    }
  }
};
var scroll = {
  scrollBehavior: true,
  scrollSnapAlign: true,
  scrollSnapStop: true,
  scrollSnapType: true,
  scrollMargin: t.spaceT("scrollMargin"),
  scrollMarginTop: t.spaceT("scrollMarginTop"),
  scrollMarginBottom: t.spaceT("scrollMarginBottom"),
  scrollMarginLeft: t.spaceT("scrollMarginLeft"),
  scrollMarginRight: t.spaceT("scrollMarginRight"),
  scrollMarginX: t.spaceT(["scrollMarginLeft", "scrollMarginRight"]),
  scrollMarginY: t.spaceT(["scrollMarginTop", "scrollMarginBottom"]),
  scrollPadding: t.spaceT("scrollPadding"),
  scrollPaddingTop: t.spaceT("scrollPaddingTop"),
  scrollPaddingBottom: t.spaceT("scrollPaddingBottom"),
  scrollPaddingLeft: t.spaceT("scrollPaddingLeft"),
  scrollPaddingRight: t.spaceT("scrollPaddingRight"),
  scrollPaddingX: t.spaceT(["scrollPaddingLeft", "scrollPaddingRight"]),
  scrollPaddingY: t.spaceT(["scrollPaddingTop", "scrollPaddingBottom"])
};
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _createForOfIteratorHelperLoose2(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray2(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var state = {
  hover: function hover(str, post) {
    return str + ":hover " + post + ", " + str + "[data-hover] " + post;
  },
  focus: function focus2(str, post) {
    return str + ":focus " + post + ", " + str + "[data-focus] " + post;
  },
  focusVisible: function focusVisible(str, post) {
    return str + ":focus-visible " + post;
  },
  focusWithin: function focusWithin(str, post) {
    return str + ":focus-within " + post;
  },
  active: function active(str, post) {
    return str + ":active " + post + ", " + str + "[data-active] " + post;
  },
  disabled: function disabled(str, post) {
    return str + ":disabled " + post + ", " + str + "[data-disabled] " + post;
  },
  invalid: function invalid(str, post) {
    return str + ":invalid " + post + ", " + str + "[data-invalid] " + post;
  },
  checked: function checked(str, post) {
    return str + ":checked " + post + ", " + str + "[data-checked] " + post;
  },
  indeterminate: function indeterminate(str, post) {
    return str + ":indeterminate " + post + ", " + str + "[aria-checked=mixed] " + post + ", " + str + "[data-indeterminate] " + post;
  },
  readOnly: function readOnly(str, post) {
    return str + ":read-only " + post + ", " + str + "[readonly] " + post + ", " + str + "[data-read-only] " + post;
  },
  expanded: function expanded(str, post) {
    return str + ":read-only " + post + ", " + str + "[aria-expanded=true] " + post + ", " + str + "[data-expanded] " + post;
  },
  placeholderShown: function placeholderShown(str, post) {
    return str + ":placeholder-shown " + post;
  }
};
var toGroup = function toGroup2(fn6) {
  return merge2(function(v) {
    return fn6(v, "&");
  }, "[role=group]", "[data-group]", ".group");
};
var toPeer = function toPeer2(fn6) {
  return merge2(function(v) {
    return fn6(v, "~ &");
  }, "[data-peer]", ".peer");
};
var merge2 = function merge3(fn6) {
  for (var _len = arguments.length, selectors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    selectors[_key - 1] = arguments[_key];
  }
  return selectors.map(fn6).join(", ");
};
var pseudoSelectors = {
  _hover: "&:hover, &[data-hover]",
  _active: "&:active, &[data-active]",
  _focus: "&:focus, &[data-focus]",
  _highlighted: "&[data-highlighted]",
  _focusWithin: "&:focus-within",
  _focusVisible: "&:focus-visible",
  _disabled: "&[disabled], &[aria-disabled=true], &[data-disabled]",
  _readOnly: "&[aria-readonly=true], &[readonly], &[data-readonly]",
  _before: "&::before",
  _after: "&::after",
  _empty: "&:empty",
  _expanded: "&[aria-expanded=true], &[data-expanded]",
  _checked: "&[aria-checked=true], &[data-checked]",
  _grabbed: "&[aria-grabbed=true], &[data-grabbed]",
  _pressed: "&[aria-pressed=true], &[data-pressed]",
  _invalid: "&[aria-invalid=true], &[data-invalid]",
  _valid: "&[data-valid], &[data-state=valid]",
  _loading: "&[data-loading], &[aria-busy=true]",
  _selected: "&[aria-selected=true], &[data-selected]",
  _hidden: "&[hidden], &[data-hidden]",
  _autofill: "&:-webkit-autofill",
  _even: "&:nth-of-type(even)",
  _odd: "&:nth-of-type(odd)",
  _first: "&:first-of-type",
  _last: "&:last-of-type",
  _notFirst: "&:not(:first-of-type)",
  _notLast: "&:not(:last-of-type)",
  _visited: "&:visited",
  _activeLink: "&[aria-current=page]",
  _activeStep: "&[aria-current=step]",
  _indeterminate: "&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",
  _groupHover: toGroup(state.hover),
  _peerHover: toPeer(state.hover),
  _groupFocus: toGroup(state.focus),
  _peerFocus: toPeer(state.focus),
  _groupFocusVisible: toGroup(state.focusVisible),
  _peerFocusVisible: toPeer(state.focusVisible),
  _groupActive: toGroup(state.active),
  _peerActive: toPeer(state.active),
  _groupDisabled: toGroup(state.disabled),
  _peerDisabled: toPeer(state.disabled),
  _groupInvalid: toGroup(state.invalid),
  _peerInvalid: toPeer(state.invalid),
  _groupChecked: toGroup(state.checked),
  _peerChecked: toPeer(state.checked),
  _groupFocusWithin: toGroup(state.focusWithin),
  _peerFocusWithin: toPeer(state.focusWithin),
  _peerPlaceholderShown: toPeer(state.placeholderShown),
  _placeholder: "&::placeholder",
  _placeholderShown: "&:placeholder-shown",
  _fullScreen: "&:fullscreen",
  _selection: "&::selection",
  _rtl: "[dir=rtl] &, &[dir=rtl]",
  _ltr: "[dir=ltr] &, &[dir=ltr]",
  _mediaDark: "@media (prefers-color-scheme: dark)",
  _mediaReduceMotion: "@media (prefers-reduced-motion: reduce)",
  _dark: ".chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]",
  _light: ".chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]"
};
var pseudoPropNames = objectKeys(pseudoSelectors);
var systemProps = (0, import_lodash.default)({}, background, border, color, flexbox, layout, filter2, ring2, interactivity, grid, others, position2, effect, space, scroll, typography, textDecoration, transform8, list, transition);
var layoutSystem = Object.assign({}, space, layout, flexbox, grid, position2);
var layoutPropNames = objectKeys(layoutSystem);
var propNames = [].concat(objectKeys(systemProps), pseudoPropNames);
var styleProps = _extends6({}, systemProps, pseudoSelectors);
var isStyleProp = function isStyleProp2(prop3) {
  return prop3 in styleProps;
};
var expandResponsive = function expandResponsive2(styles3) {
  return function(theme3) {
    if (!theme3.__breakpoints)
      return styles3;
    var _theme$__breakpoints = theme3.__breakpoints, isResponsive = _theme$__breakpoints.isResponsive, toArrayValue = _theme$__breakpoints.toArrayValue, medias = _theme$__breakpoints.media;
    var computedStyles = {};
    for (var key in styles3) {
      var value = runIfFn(styles3[key], theme3);
      if (value == null)
        continue;
      value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value;
      if (!Array.isArray(value)) {
        computedStyles[key] = value;
        continue;
      }
      var queries2 = value.slice(0, medias.length).length;
      for (var index2 = 0; index2 < queries2; index2 += 1) {
        var media = medias == null ? void 0 : medias[index2];
        if (!media) {
          computedStyles[key] = value[index2];
          continue;
        }
        computedStyles[media] = computedStyles[media] || {};
        if (value[index2] == null) {
          continue;
        }
        computedStyles[media][key] = value[index2];
      }
    }
    return computedStyles;
  };
};
var isCSSVariableTokenValue = function isCSSVariableTokenValue2(key, value) {
  return key.startsWith("--") && isString(value) && !isCssVar(value);
};
var resolveTokenValue = function resolveTokenValue2(theme3, value) {
  var _ref2, _getVar2;
  if (value == null)
    return value;
  var getVar = function getVar2(val) {
    var _theme$__cssMap, _theme$__cssMap$val;
    return (_theme$__cssMap = theme3.__cssMap) == null ? void 0 : (_theme$__cssMap$val = _theme$__cssMap[val]) == null ? void 0 : _theme$__cssMap$val.varRef;
  };
  var getValue2 = function getValue3(val) {
    var _getVar;
    return (_getVar = getVar(val)) != null ? _getVar : val;
  };
  var valueSplit = value.split(",").map(function(v) {
    return v.trim();
  });
  var tokenValue = valueSplit[0], fallbackValue = valueSplit[1];
  value = (_ref2 = (_getVar2 = getVar(tokenValue)) != null ? _getVar2 : getValue2(fallbackValue)) != null ? _ref2 : getValue2(value);
  return value;
};
function getCss(options) {
  var _options$configs = options.configs, configs = _options$configs === void 0 ? {} : _options$configs, _options$pseudos = options.pseudos, pseudos = _options$pseudos === void 0 ? {} : _options$pseudos, theme3 = options.theme;
  var css6 = function css7(stylesOrFn, nested) {
    if (nested === void 0) {
      nested = false;
    }
    var _styles = runIfFn(stylesOrFn, theme3);
    var styles3 = expandResponsive(_styles)(theme3);
    var computedStyles = {};
    for (var key in styles3) {
      var _config$transform, _config, _config2, _config3, _config4;
      var valueOrFn = styles3[key];
      var value = runIfFn(valueOrFn, theme3);
      if (key in pseudos) {
        key = pseudos[key];
      }
      if (isCSSVariableTokenValue(key, value)) {
        value = resolveTokenValue(theme3, value);
      }
      var config3 = configs[key];
      if (config3 === true) {
        config3 = {
          property: key
        };
      }
      if (isObject(value)) {
        var _computedStyles$key;
        computedStyles[key] = (_computedStyles$key = computedStyles[key]) != null ? _computedStyles$key : {};
        computedStyles[key] = (0, import_lodash.default)({}, computedStyles[key], css7(value, true));
        continue;
      }
      var rawValue = (_config$transform = (_config = config3) == null ? void 0 : _config.transform == null ? void 0 : _config.transform(value, theme3, _styles)) != null ? _config$transform : value;
      rawValue = (_config2 = config3) != null && _config2.processResult ? css7(rawValue, true) : rawValue;
      var configProperty = runIfFn((_config3 = config3) == null ? void 0 : _config3.property, theme3);
      if (!nested && (_config4 = config3) != null && _config4["static"]) {
        var staticStyles = runIfFn(config3["static"], theme3);
        computedStyles = (0, import_lodash.default)({}, computedStyles, staticStyles);
      }
      if (configProperty && Array.isArray(configProperty)) {
        for (var _iterator = _createForOfIteratorHelperLoose2(configProperty), _step; !(_step = _iterator()).done; ) {
          var property = _step.value;
          computedStyles[property] = rawValue;
        }
        continue;
      }
      if (configProperty) {
        if (configProperty === "&" && isObject(rawValue)) {
          computedStyles = (0, import_lodash.default)({}, computedStyles, rawValue);
        } else {
          computedStyles[configProperty] = rawValue;
        }
        continue;
      }
      if (isObject(rawValue)) {
        computedStyles = (0, import_lodash.default)({}, computedStyles, rawValue);
        continue;
      }
      computedStyles[key] = rawValue;
    }
    return computedStyles;
  };
  return css6;
}
var css2 = function css3(styles3) {
  return function(theme3) {
    var cssFn = getCss({
      theme: theme3,
      pseudos: pseudoSelectors,
      configs: systemProps
    });
    return cssFn(styles3);
  };
};
function resolveReference(operand) {
  if (isObject(operand) && operand.reference) {
    return operand.reference;
  }
  return String(operand);
}
var toExpression = function toExpression2(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }
  return operands.map(resolveReference).join(" " + operator + " ").replace(/calc/g, "");
};
var _add = function add2() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }
  return "calc(" + toExpression.apply(void 0, ["+"].concat(operands)) + ")";
};
var _subtract = function subtract2() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }
  return "calc(" + toExpression.apply(void 0, ["-"].concat(operands)) + ")";
};
var _multiply = function multiply() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }
  return "calc(" + toExpression.apply(void 0, ["*"].concat(operands)) + ")";
};
var _divide = function divide() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }
  return "calc(" + toExpression.apply(void 0, ["/"].concat(operands)) + ")";
};
var _negate = function negate(x) {
  var value = resolveReference(x);
  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }
  return _multiply(value, -1);
};
var calc = Object.assign(function(x) {
  return {
    add: function add6() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }
      return calc(_add.apply(void 0, [x].concat(operands)));
    },
    subtract: function subtract7() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }
      return calc(_subtract.apply(void 0, [x].concat(operands)));
    },
    multiply: function multiply5() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }
      return calc(_multiply.apply(void 0, [x].concat(operands)));
    },
    divide: function divide5() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }
      return calc(_divide.apply(void 0, [x].concat(operands)));
    },
    negate: function negate5() {
      return calc(_negate(x));
    },
    toString: function toString() {
      return x.toString();
    }
  };
}, {
  add: _add,
  subtract: _subtract,
  multiply: _multiply,
  divide: _divide,
  negate: _negate
});
function replaceWhiteSpace(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }
  return value.replace(/\s+/g, replaceValue);
}
function escape(value) {
  var valueStr = replaceWhiteSpace(value.toString());
  if (valueStr.includes("\\."))
    return value;
  var isDecimal3 = !Number.isInteger(parseFloat(value.toString()));
  return isDecimal3 ? valueStr.replace(".", "\\.") : value;
}
function addPrefix(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return [prefix3, escape(value)].filter(Boolean).join("-");
}
function toVarReference(name, fallback) {
  return "var(" + escape(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVarDefinition(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return "--" + addPrefix(value, prefix3);
}
function cssVar(name, fallback, cssVarPrefix) {
  var cssVariable = toVarDefinition(name, cssVarPrefix);
  return {
    variable: cssVariable,
    reference: toVarReference(cssVariable, fallback)
  };
}
function tokenToCssVar(token2, prefix3) {
  return cssVar(String(token2).replace(/\./g, "-"), void 0, prefix3);
}
function createThemeVars(flatTokens, options) {
  var cssVars2 = {};
  var cssMap = {};
  var _loop = function _loop2() {
    var _Object$entries$_i = _Object$entries[_i], token2 = _Object$entries$_i[0], tokenValue = _Object$entries$_i[1];
    var isSemantic = tokenValue.isSemantic, value = tokenValue.value;
    var _tokenToCssVar = tokenToCssVar(token2, options == null ? void 0 : options.cssVarPrefix), variable = _tokenToCssVar.variable, reference2 = _tokenToCssVar.reference;
    if (!isSemantic) {
      if (token2.startsWith("space")) {
        var keys4 = token2.split(".");
        var firstKey = keys4[0], referenceKeys = keys4.slice(1);
        var negativeLookupKey = firstKey + ".-" + referenceKeys.join(".");
        var negativeValue = calc.negate(value);
        var negatedReference = calc.negate(reference2);
        cssMap[negativeLookupKey] = {
          value: negativeValue,
          "var": variable,
          varRef: negatedReference
        };
      }
      cssVars2[variable] = value;
      cssMap[token2] = {
        value,
        "var": variable,
        varRef: reference2
      };
      return "continue";
    }
    var lookupToken = function lookupToken2(maybeToken) {
      var scale3 = String(token2).split(".")[0];
      var withScale = [scale3, maybeToken].join(".");
      var resolvedTokenValue = flatTokens[withScale];
      if (!resolvedTokenValue)
        return maybeToken;
      var _tokenToCssVar2 = tokenToCssVar(withScale, options == null ? void 0 : options.cssVarPrefix), reference3 = _tokenToCssVar2.reference;
      return reference3;
    };
    var normalizedValue = isObject(value) ? value : {
      "default": value
    };
    cssVars2 = (0, import_lodash.default)(cssVars2, Object.entries(normalizedValue).reduce(function(acc, _ref2) {
      var _pseudoSelectors$cond, _acc$conditionSelecto;
      var conditionAlias = _ref2[0], conditionValue = _ref2[1];
      var maybeReference = lookupToken(conditionValue);
      if (conditionAlias === "default") {
        acc[variable] = maybeReference;
        return acc;
      }
      var conditionSelector = (_pseudoSelectors$cond = pseudoSelectors == null ? void 0 : pseudoSelectors[conditionAlias]) != null ? _pseudoSelectors$cond : conditionAlias;
      acc[conditionSelector] = (_acc$conditionSelecto = {}, _acc$conditionSelecto[variable] = maybeReference, _acc$conditionSelecto);
      return acc;
    }, {}));
    cssMap[token2] = {
      value: reference2,
      "var": variable,
      varRef: reference2
    };
  };
  for (var _i = 0, _Object$entries = Object.entries(flatTokens); _i < _Object$entries.length; _i++) {
    var _ret = _loop();
    if (_ret === "continue")
      continue;
  }
  return {
    cssVars: cssVars2,
    cssMap
  };
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded3 = ["__cssMap", "__cssVars", "__breakpoints"];
var tokens = ["colors", "borders", "borderWidths", "borderStyles", "fonts", "fontSizes", "fontWeights", "letterSpacings", "lineHeights", "radii", "space", "shadows", "sizes", "zIndices", "transition", "blur"];
function extractTokens(theme3) {
  var _tokens = tokens;
  return pick(theme3, _tokens);
}
function extractSemanticTokens(theme3) {
  return theme3.semanticTokens;
}
function omitVars(rawTheme) {
  rawTheme.__cssMap;
  rawTheme.__cssVars;
  rawTheme.__breakpoints;
  var cleanTheme = _objectWithoutPropertiesLoose4(rawTheme, _excluded3);
  return cleanTheme;
}
function flattenTokens(_ref2) {
  var _flatten, _flatten2;
  var tokens3 = _ref2.tokens, semanticTokens2 = _ref2.semanticTokens;
  var tokenEntries = Object.entries((_flatten = flatten(tokens3)) != null ? _flatten : {}).map(function(_ref22) {
    var token2 = _ref22[0], value = _ref22[1];
    var enhancedToken = {
      isSemantic: false,
      value
    };
    return [token2, enhancedToken];
  });
  var semanticTokenEntries = Object.entries((_flatten2 = flatten(semanticTokens2, 1)) != null ? _flatten2 : {}).map(function(_ref3) {
    var token2 = _ref3[0], value = _ref3[1];
    var enhancedToken = {
      isSemantic: true,
      value
    };
    return [token2, enhancedToken];
  });
  return fromEntries([].concat(tokenEntries, semanticTokenEntries));
}
function toCSSVar(rawTheme) {
  var _theme$config;
  var theme3 = omitVars(rawTheme);
  var tokens3 = extractTokens(theme3);
  var semanticTokens2 = extractSemanticTokens(theme3);
  var flatTokens = flattenTokens({
    tokens: tokens3,
    semanticTokens: semanticTokens2
  });
  var cssVarPrefix = (_theme$config = theme3.config) == null ? void 0 : _theme$config.cssVarPrefix;
  var _createThemeVars = createThemeVars(flatTokens, {
    cssVarPrefix
  }), cssMap = _createThemeVars.cssMap, cssVars2 = _createThemeVars.cssVars;
  var defaultCssVars = {
    "--chakra-ring-inset": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-ring-offset-width": "0px",
    "--chakra-ring-offset-color": "#fff",
    "--chakra-ring-color": "rgba(66, 153, 225, 0.6)",
    "--chakra-ring-offset-shadow": "0 0 #0000",
    "--chakra-ring-shadow": "0 0 #0000",
    "--chakra-space-x-reverse": "0",
    "--chakra-space-y-reverse": "0"
  };
  Object.assign(theme3, {
    __cssVars: _extends6({}, defaultCssVars, cssVars2),
    __cssMap: cssMap,
    __breakpoints: analyzeBreakpoints(theme3.breakpoints)
  });
  return theme3;
}

// node_modules/.pnpm/@chakra-ui+system@1.12.1_dmuq4jdcsab5rfevz4weuyu33i/node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js
var React11 = __toESM(require_react());
var import_react13 = __toESM(require_react());
var import_react_fast_compare = __toESM(require_react_fast_compare());

// node_modules/.pnpm/@emotion+styled@11.9.3_btzndnqw434paze27u2t3ew2li/node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js
init_extends();
var import_react9 = __toESM(require_react());

// node_modules/.pnpm/@emotion+is-prop-valid@1.1.3/node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = emotion_memoize_browser_esm_default(function(prop3) {
  return reactPropsRegex.test(prop3) || prop3.charCodeAt(0) === 111 && prop3.charCodeAt(1) === 110 && prop3.charCodeAt(2) < 91;
});
var emotion_is_prop_valid_browser_esm_default = isPropValid;

// node_modules/.pnpm/@emotion+styled@11.9.3_btzndnqw434paze27u2t3ew2li/node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js
init_extends();
var React10 = __toESM(require_react());
var import_react7 = __toESM(require_react());
var testOmitPropsOnStringTag = emotion_is_prop_valid_browser_esm_default;
var testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
  return key !== "theme";
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag2) {
  return typeof tag2 === "string" && tag2.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps2(tag2, options, isReal) {
  var shouldForwardProp5;
  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp5 = tag2.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
      return tag2.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }
  if (typeof shouldForwardProp5 !== "function" && isReal) {
    shouldForwardProp5 = tag2.__emotion_forwardProp;
  }
  return shouldForwardProp5;
};
var useInsertionEffect7 = React10["useInsertionEffect"] ? React10["useInsertionEffect"] : function useInsertionEffect8(create) {
  create();
};
function useInsertionEffectMaybe2(create) {
  useInsertionEffect7(create);
}
var ILLEGAL_ESCAPE_SEQUENCE_ERROR2 = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
var Insertion5 = function Insertion6(_ref2) {
  var cache = _ref2.cache, serialized = _ref2.serialized, isStringTag = _ref2.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  var rules = useInsertionEffectMaybe2(function() {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var createStyled = function createStyled2(tag2, options) {
  if (true) {
    if (tag2 === void 0) {
      throw new Error("You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.");
    }
  }
  var isReal = tag2.__emotion_real === tag2;
  var baseTag = isReal && tag2.__emotion_base || tag2;
  var identifierName;
  var targetClassName;
  if (options !== void 0) {
    identifierName = options.label;
    targetClassName = options.target;
  }
  var shouldForwardProp5 = composeShouldForwardProps(tag2, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp5 || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp("as");
  return function() {
    var args = arguments;
    var styles3 = isReal && tag2.__emotion_styles !== void 0 ? tag2.__emotion_styles.slice(0) : [];
    if (identifierName !== void 0) {
      styles3.push("label:" + identifierName + ";");
    }
    if (args[0] == null || args[0].raw === void 0) {
      styles3.push.apply(styles3, args);
    } else {
      if (args[0][0] === void 0) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR2);
      }
      styles3.push(args[0][0]);
      var len = args.length;
      var i = 1;
      for (; i < len; i++) {
        if (args[0][i] === void 0) {
          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR2);
        }
        styles3.push(args[i], args[0][i]);
      }
    }
    var Styled = withEmotionCache(function(props, cache, ref) {
      var FinalTag = shouldUseAs && props.as || baseTag;
      var className = "";
      var classInterpolations = [];
      var mergedProps = props;
      if (props.theme == null) {
        mergedProps = {};
        for (var key in props) {
          mergedProps[key] = props[key];
        }
        mergedProps.theme = (0, import_react7.useContext)(ThemeContext);
      }
      if (typeof props.className === "string") {
        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }
      var serialized = serializeStyles(styles3.concat(classInterpolations), cache.registered, mergedProps);
      className += cache.key + "-" + serialized.name;
      if (targetClassName !== void 0) {
        className += " " + targetClassName;
      }
      var finalShouldForwardProp = shouldUseAs && shouldForwardProp5 === void 0 ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
      var newProps = {};
      for (var _key in props) {
        if (shouldUseAs && _key === "as")
          continue;
        if (finalShouldForwardProp(_key)) {
          newProps[_key] = props[_key];
        }
      }
      newProps.className = className;
      newProps.ref = ref;
      return (0, import_react7.createElement)(import_react7.Fragment, null, (0, import_react7.createElement)(Insertion5, {
        cache,
        serialized,
        isStringTag: typeof FinalTag === "string"
      }), (0, import_react7.createElement)(FinalTag, newProps));
    });
    Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
    Styled.defaultProps = tag2.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles3;
    Styled.__emotion_forwardProp = shouldForwardProp5;
    Object.defineProperty(Styled, "toString", {
      value: function value() {
        if (targetClassName === void 0 && true) {
          return "NO_COMPONENT_SELECTOR";
        }
        return "." + targetClassName;
      }
    });
    Styled.withComponent = function(nextTag, nextOptions) {
      return createStyled2(nextTag, _extends({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles3);
    };
    return Styled;
  };
};
var emotion_styled_base_browser_esm_default = createStyled;

// node_modules/.pnpm/@emotion+styled@11.9.3_btzndnqw434paze27u2t3ew2li/node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js
var tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var newStyled = emotion_styled_base_browser_esm_default.bind();
tags.forEach(function(tagName) {
  newStyled[tagName] = newStyled(tagName);
});
var emotion_styled_browser_esm_default = newStyled;

// node_modules/.pnpm/@chakra-ui+system@1.12.1_dmuq4jdcsab5rfevz4weuyu33i/node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js
function _extends7() {
  _extends7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
var ThemeProvider3 = function ThemeProvider4(props) {
  var cssVarsRoot = props.cssVarsRoot, theme3 = props.theme, children = props.children;
  var computedTheme = React11.useMemo(function() {
    return toCSSVar(theme3);
  }, [theme3]);
  return React11.createElement(ThemeProvider, {
    theme: computedTheme
  }, React11.createElement(CSSVars, {
    root: cssVarsRoot
  }), children);
};
var CSSVars = function CSSVars2(_ref2) {
  var _ref$root = _ref2.root, root2 = _ref$root === void 0 ? ":host, :root" : _ref$root;
  var selector2 = [root2, "[data-theme]"].join(",");
  return React11.createElement(Global, {
    styles: function styles3(theme3) {
      var _ref22;
      return _ref22 = {}, _ref22[selector2] = theme3.__cssVars, _ref22;
    }
  });
};
function useTheme2() {
  var theme3 = React11.useContext(ThemeContext);
  if (!theme3) {
    throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");
  }
  return theme3;
}
var _createContext2 = createContext3({
  name: "StylesContext",
  errorMessage: "useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "
});
var StylesProvider = _createContext2[0];
var useStyles = _createContext2[1];
var GlobalStyle = function GlobalStyle2() {
  var _useColorMode = useColorMode(), colorMode = _useColorMode.colorMode;
  return React11.createElement(Global, {
    styles: function styles3(theme3) {
      var styleObjectOrFn = memoizedGet(theme3, "styles.global");
      var globalStyles = runIfFn(styleObjectOrFn, {
        theme: theme3,
        colorMode
      });
      if (!globalStyles)
        return void 0;
      var styles4 = css2(globalStyles)(theme3);
      return styles4;
    }
  });
};
function omitThemingProps(props) {
  return omit(props, ["styleConfig", "size", "variant", "colorScheme"]);
}
function useChakra() {
  var colorModeResult = useColorMode();
  var theme3 = useTheme2();
  return _extends7({}, colorModeResult, {
    theme: theme3
  });
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var allPropNames = new Set([].concat(propNames, ["textStyle", "layerStyle", "apply", "isTruncated", "noOfLines", "focusBorderColor", "errorBorderColor", "as", "__css", "css", "sx"]));
var validHTMLProps = /* @__PURE__ */ new Set(["htmlWidth", "htmlHeight", "htmlSize"]);
var shouldForwardProp = function shouldForwardProp2(prop3) {
  return validHTMLProps.has(prop3) || !allPropNames.has(prop3);
};
var _excluded$1 = ["theme", "css", "__css", "sx"];
var _excluded22 = ["baseStyle"];
var toCSSObject = function toCSSObject2(_ref2) {
  var baseStyle44 = _ref2.baseStyle;
  return function(props) {
    props.theme;
    var cssProp = props.css, __css = props.__css, sx = props.sx, rest = _objectWithoutPropertiesLoose5(props, _excluded$1);
    var styleProps3 = objectFilter(rest, function(_, prop3) {
      return isStyleProp(prop3);
    });
    var finalBaseStyle = runIfFn(baseStyle44, props);
    var finalStyles = Object.assign({}, __css, finalBaseStyle, filterUndefined(styleProps3), sx);
    var computedCSS = css2(finalStyles)(props.theme);
    return cssProp ? [computedCSS, cssProp] : computedCSS;
  };
};
function styled(component, options) {
  var _ref2 = options != null ? options : {}, baseStyle44 = _ref2.baseStyle, styledOptions = _objectWithoutPropertiesLoose5(_ref2, _excluded22);
  if (!styledOptions.shouldForwardProp) {
    styledOptions.shouldForwardProp = shouldForwardProp;
  }
  var styleObject = toCSSObject({
    baseStyle: baseStyle44
  });
  return emotion_styled_browser_esm_default(component, styledOptions)(styleObject);
}
function forwardRef3(component) {
  return React11.forwardRef(component);
}
var _excluded4 = ["styleConfig"];
function useStyleConfig(themeKey, props, opts) {
  var _styleConfig$defaultP;
  if (props === void 0) {
    props = {};
  }
  if (opts === void 0) {
    opts = {};
  }
  var _props = props, styleConfigProp = _props.styleConfig, rest = _objectWithoutPropertiesLoose5(_props, _excluded4);
  var _useChakra = useChakra(), theme3 = _useChakra.theme, colorMode = _useChakra.colorMode;
  var themeStyleConfig = memoizedGet(theme3, "components." + themeKey);
  var styleConfig = styleConfigProp || themeStyleConfig;
  var mergedProps = (0, import_lodash.default)({
    theme: theme3,
    colorMode
  }, (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {}, filterUndefined(omit(rest, ["children"])));
  var stylesRef = (0, import_react13.useRef)({});
  if (styleConfig) {
    var _styleConfig$baseStyl, _styleConfig$variants, _styleConfig$variants2, _styleConfig$sizes$me, _styleConfig$sizes, _opts;
    var baseStyles = runIfFn((_styleConfig$baseStyl = styleConfig.baseStyle) != null ? _styleConfig$baseStyl : {}, mergedProps);
    var variants4 = runIfFn((_styleConfig$variants = (_styleConfig$variants2 = styleConfig.variants) == null ? void 0 : _styleConfig$variants2[mergedProps.variant]) != null ? _styleConfig$variants : {}, mergedProps);
    var sizes5 = runIfFn((_styleConfig$sizes$me = (_styleConfig$sizes = styleConfig.sizes) == null ? void 0 : _styleConfig$sizes[mergedProps.size]) != null ? _styleConfig$sizes$me : {}, mergedProps);
    var styles3 = (0, import_lodash.default)({}, baseStyles, sizes5, variants4);
    if ((_opts = opts) != null && _opts.isMultiPart && styleConfig.parts) {
      styleConfig.parts.forEach(function(part) {
        var _styles$part;
        styles3[part] = (_styles$part = styles3[part]) != null ? _styles$part : {};
      });
    }
    var isStyleEqual = (0, import_react_fast_compare.default)(stylesRef.current, styles3);
    if (!isStyleEqual) {
      stylesRef.current = styles3;
    }
  }
  return stylesRef.current;
}
function factory() {
  var cache = /* @__PURE__ */ new Map();
  return new Proxy(styled, {
    apply: function apply(target, thisArg, argArray) {
      return styled.apply(void 0, argArray);
    },
    get: function get5(_, element) {
      if (!cache.has(element)) {
        cache.set(element, styled(element));
      }
      return cache.get(element);
    }
  });
}
var chakra = factory();

// node_modules/.pnpm/@chakra-ui+provider@1.7.14_xwirldmzgxyrajfcsdlsznqsum/node_modules/@chakra-ui/provider/dist/chakra-ui-provider.esm.js
var React12 = __toESM(require_react());
var ChakraProvider = function ChakraProvider2(props) {
  var children = props.children, colorModeManager = props.colorModeManager, portalZIndex = props.portalZIndex, _props$resetCSS = props.resetCSS, resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS, _props$theme = props.theme, theme3 = _props$theme === void 0 ? {} : _props$theme, environment = props.environment, cssVarsRoot = props.cssVarsRoot;
  var _children = React12.createElement(EnvironmentProvider, {
    environment
  }, children);
  return React12.createElement(IdProvider, null, React12.createElement(ThemeProvider3, {
    theme: theme3,
    cssVarsRoot
  }, React12.createElement(ColorModeProvider, {
    colorModeManager,
    options: theme3.config
  }, resetCSS && React12.createElement(CSSReset$1, null), React12.createElement(GlobalStyle, null), portalZIndex ? React12.createElement(PortalManager, {
    zIndex: portalZIndex
  }, _children) : _children)));
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/spacing/dist/chakra-ui-theme-foundations-spacing.esm.js
var spacing = {
  px: "1px",
  0.5: "0.125rem",
  1: "0.25rem",
  1.5: "0.375rem",
  2: "0.5rem",
  2.5: "0.625rem",
  3: "0.75rem",
  3.5: "0.875rem",
  4: "1rem",
  5: "1.25rem",
  6: "1.5rem",
  7: "1.75rem",
  8: "2rem",
  9: "2.25rem",
  10: "2.5rem",
  12: "3rem",
  14: "3.5rem",
  16: "4rem",
  20: "5rem",
  24: "6rem",
  28: "7rem",
  32: "8rem",
  36: "9rem",
  40: "10rem",
  44: "11rem",
  48: "12rem",
  52: "13rem",
  56: "14rem",
  60: "15rem",
  64: "16rem",
  72: "18rem",
  80: "20rem",
  96: "24rem"
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/dist/sizes-501602a9.esm.js
function _extends8() {
  _extends8 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
var largeSizes = {
  max: "max-content",
  min: "min-content",
  full: "100%",
  "3xs": "14rem",
  "2xs": "16rem",
  xs: "20rem",
  sm: "24rem",
  md: "28rem",
  lg: "32rem",
  xl: "36rem",
  "2xl": "42rem",
  "3xl": "48rem",
  "4xl": "56rem",
  "5xl": "64rem",
  "6xl": "72rem",
  "7xl": "80rem",
  "8xl": "90rem"
};
var container = {
  sm: "640px",
  md: "768px",
  lg: "1024px",
  xl: "1280px"
};
var sizes = _extends8({}, spacing, largeSizes, {
  container
});

// node_modules/.pnpm/@chakra-ui+theme-tools@2.0.2_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js
init_public_api();

// node_modules/.pnpm/@chakra-ui+utils@2.0.2/node_modules/@chakra-ui/utils/dist/chakra-ui-utils.esm.js
var import_lodash2 = __toESM(require_lodash());
function getLastItem2(array) {
  var length2 = array == null ? 0 : array.length;
  return length2 ? array[length2 - 1] : void 0;
}
function isNumber2(value) {
  return typeof value === "number";
}
function isArray2(value) {
  return Array.isArray(value);
}
function isFunction2(value) {
  return typeof value === "function";
}
function isObject2(value) {
  var type = typeof value;
  return value != null && (type === "object" || type === "function") && !isArray2(value);
}
function isEmptyObject2(value) {
  return isObject2(value) && Object.keys(value).length === 0;
}
function isString2(value) {
  return Object.prototype.toString.call(value) === "[object String]";
}
function isCssVar2(value) {
  return /^var\(--.+\)$/.test(value);
}
var __DEV__2 = true;
function omit2(object2, keys4) {
  var result = {};
  Object.keys(object2).forEach(function(key) {
    if (keys4.includes(key))
      return;
    result[key] = object2[key];
  });
  return result;
}
function pick2(object2, keys4) {
  var result = {};
  keys4.forEach(function(key) {
    if (key in object2) {
      result[key] = object2[key];
    }
  });
  return result;
}
function get4(obj, path, fallback, index2) {
  var key = typeof path === "string" ? path.split(".") : [path];
  for (index2 = 0; index2 < key.length; index2 += 1) {
    if (!obj)
      break;
    obj = obj[key[index2]];
  }
  return obj === void 0 ? fallback : obj;
}
var memoize4 = function memoize5(fn6) {
  var cache = /* @__PURE__ */ new WeakMap();
  var memoizedFn = function memoizedFn2(obj, path, fallback, index2) {
    if (typeof obj === "undefined") {
      return fn6(obj, path, fallback);
    }
    if (!cache.has(obj)) {
      cache.set(obj, /* @__PURE__ */ new Map());
    }
    var map = cache.get(obj);
    if (map.has(path)) {
      return map.get(path);
    }
    var value = fn6(obj, path, fallback, index2);
    map.set(path, value);
    return value;
  };
  return memoizedFn;
};
var memoizedGet2 = memoize4(get4);
function objectFilter2(object2, fn6) {
  var result = {};
  Object.keys(object2).forEach(function(key) {
    var value = object2[key];
    var shouldPass = fn6(value, key, object2);
    if (shouldPass) {
      result[key] = value;
    }
  });
  return result;
}
var filterUndefined3 = function filterUndefined4(object2) {
  return objectFilter2(object2, function(val) {
    return val !== null && val !== void 0;
  });
};
var objectKeys3 = function objectKeys4(obj) {
  return Object.keys(obj);
};
var fromEntries3 = function fromEntries4(entries) {
  return entries.reduce(function(carry, _ref2) {
    var key = _ref2[0], value = _ref2[1];
    carry[key] = value;
    return carry;
  }, {});
};
function analyzeCSSValue4(value) {
  var num = parseFloat(value.toString());
  var unit = value.toString().replace(String(num), "");
  return {
    unitless: !unit,
    value: num,
    unit
  };
}
function px3(value) {
  if (value == null)
    return value;
  var _analyzeCSSValue = analyzeCSSValue4(value), unitless = _analyzeCSSValue.unitless;
  return unitless || isNumber2(value) ? value + "px" : value;
}
var sortByBreakpointValue3 = function sortByBreakpointValue4(a2, b2) {
  return parseInt(a2[1], 10) > parseInt(b2[1], 10) ? 1 : -1;
};
var sortBps3 = function sortBps4(breakpoints5) {
  return fromEntries3(Object.entries(breakpoints5).sort(sortByBreakpointValue3));
};
function normalize2(breakpoints5) {
  var sorted = sortBps3(breakpoints5);
  return Object.assign(Object.values(sorted), sorted);
}
function keys2(breakpoints5) {
  var value = Object.keys(sortBps3(breakpoints5));
  return new Set(value);
}
function subtract3(value) {
  var _px;
  if (!value)
    return value;
  value = (_px = px3(value)) != null ? _px : value;
  var factor = value.endsWith("px") ? -1 : -0.0635;
  return isNumber2(value) ? "" + (value + factor) : value.replace(/([0-9]+\.?[0-9]*)/, function(m2) {
    return "" + (parseFloat(m2) + factor);
  });
}
function toMediaQueryString(min2, max2) {
  var query = ["@media screen"];
  if (min2)
    query.push("and", "(min-width: " + px3(min2) + ")");
  if (max2)
    query.push("and", "(max-width: " + px3(max2) + ")");
  return query.join(" ");
}
function analyzeBreakpoints2(breakpoints5) {
  var _breakpoints$base;
  if (!breakpoints5)
    return null;
  breakpoints5.base = (_breakpoints$base = breakpoints5.base) != null ? _breakpoints$base : "0px";
  var normalized = normalize2(breakpoints5);
  var queries2 = Object.entries(breakpoints5).sort(sortByBreakpointValue3).map(function(_ref2, index2, entry) {
    var _entry;
    var breakpoint = _ref2[0], minW = _ref2[1];
    var _ref22 = (_entry = entry[index2 + 1]) != null ? _entry : [], maxW = _ref22[1];
    maxW = parseFloat(maxW) > 0 ? subtract3(maxW) : void 0;
    return {
      _minW: subtract3(minW),
      breakpoint,
      minW,
      maxW,
      maxWQuery: toMediaQueryString(null, maxW),
      minWQuery: toMediaQueryString(minW),
      minMaxQuery: toMediaQueryString(minW, maxW)
    };
  });
  var _keys = keys2(breakpoints5);
  var _keysArr = Array.from(_keys.values());
  return {
    keys: _keys,
    normalized,
    isResponsive: function isResponsive(test2) {
      var keys4 = Object.keys(test2);
      return keys4.length > 0 && keys4.every(function(key) {
        return _keys.has(key);
      });
    },
    asObject: sortBps3(breakpoints5),
    asArray: normalize2(breakpoints5),
    details: queries2,
    media: [null].concat(normalized.map(function(minW) {
      return toMediaQueryString(minW);
    }).slice(1)),
    toArrayValue: function toArrayValue(test2) {
      if (!isObject2(test2)) {
        throw new Error("toArrayValue: value must be an object");
      }
      var result = _keysArr.map(function(bp) {
        var _test$bp;
        return (_test$bp = test2[bp]) != null ? _test$bp : null;
      });
      while (getLastItem2(result) === null) {
        result.pop();
      }
      return result;
    },
    toObjectValue: function toObjectValue(test2) {
      if (!Array.isArray(test2)) {
        throw new Error("toObjectValue: value must be an array");
      }
      return test2.reduce(function(acc, value, index2) {
        var key = _keysArr[index2];
        if (key != null && value != null)
          acc[key] = value;
        return acc;
      }, {});
    }
  };
}
function getEventWindow2(event) {
  var _view;
  return (_view = event.view) != null ? _view : window;
}
function canUseDOM2() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
var isBrowser3 = canUseDOM2();
function addDomEvent2(target, eventName, handler, options) {
  target.addEventListener(eventName, handler, options);
  return function() {
    target.removeEventListener(eventName, handler, options);
  };
}
var focusableElList2 = ["input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])", "embed", "iframe", "object", "a[href]", "area[href]", "button:not([disabled])", "[tabindex]", "audio[controls]", "video[controls]", "*[tabindex]:not([aria-disabled])", "*[contenteditable]"];
var focusableElSelector2 = focusableElList2.join();
function runIfFn2(valueOrFn) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return isFunction2(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;
}
function once2(fn6) {
  var result;
  return function func2() {
    if (fn6) {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      result = fn6.apply(this, args);
      fn6 = null;
    }
    return result;
  };
}
var noop5 = function noop6() {
};
var warn2 = once2(function(options) {
  return function() {
    var condition = options.condition, message = options.message;
    if (condition && __DEV__2) {
      console.warn(message);
    }
  };
});
var error2 = once2(function(options) {
  return function() {
    var condition = options.condition, message = options.message;
    if (condition && __DEV__2) {
      console.error(message);
    }
  };
});
var pipe3 = function pipe4() {
  for (var _len6 = arguments.length, fns = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    fns[_key6] = arguments[_key6];
  }
  return function(v) {
    return fns.reduce(function(a2, b2) {
      return b2(a2);
    }, v);
  };
};
var distance1D3 = function distance1D4(a2, b2) {
  return Math.abs(a2 - b2);
};
var isPoint3 = function isPoint4(point) {
  return "x" in point && "y" in point;
};
function distance2(a2, b2) {
  if (isNumber2(a2) && isNumber2(b2)) {
    return distance1D3(a2, b2);
  }
  if (isPoint3(a2) && isPoint3(b2)) {
    var xDelta = distance1D3(a2.x, b2.x);
    var yDelta = distance1D3(a2.y, b2.y);
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));
  }
  return 0;
}
function flatten2(target, maxDepth2) {
  if (maxDepth2 === void 0) {
    maxDepth2 = Infinity;
  }
  if (!isObject2(target) && !Array.isArray(target) || !maxDepth2) {
    return target;
  }
  return Object.entries(target).reduce(function(result, _ref2) {
    var key = _ref2[0], value = _ref2[1];
    if (isObject2(value) || isArray2(value)) {
      Object.entries(flatten2(value, maxDepth2 - 1)).forEach(function(_ref22) {
        var childKey = _ref22[0], childValue = _ref22[1];
        result[key + "." + childKey] = childValue;
      });
    } else {
      result[key] = value;
    }
    return result;
  }, {});
}
var minSafeInteger2 = Number.MIN_SAFE_INTEGER || -9007199254740991;
var maxSafeInteger2 = Number.MAX_SAFE_INTEGER || 9007199254740991;
function _extends9() {
  _extends9 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends9.apply(this, arguments);
}
function isMouseEvent2(event) {
  var win2 = getEventWindow2(event);
  if (typeof win2.PointerEvent !== "undefined" && event instanceof win2.PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof win2.MouseEvent;
}
function isTouchEvent2(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}
function filterPrimaryPointer2(eventHandler) {
  return function(event) {
    var win2 = getEventWindow2(event);
    var isMouseEvent4 = event instanceof win2.MouseEvent;
    var isPrimaryPointer = !isMouseEvent4 || isMouseEvent4 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint2 = {
  pageX: 0,
  pageY: 0
};
function pointFromTouch2(e, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e.touches[0] || e.changedTouches[0];
  var point = primaryTouch || defaultPagePoint2;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse2(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo2(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent2(event) ? pointFromTouch2(event, pointType) : pointFromMouse2(event, pointType)
  };
}
var wrapPointerEventHandler3 = function wrapPointerEventHandler4(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function listener2(event) {
    return handler(event, extractEventInfo2(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer2(listener) : listener;
};
var supportsPointerEvents3 = function supportsPointerEvents4() {
  return isBrowser3 && window.onpointerdown === null;
};
var supportsTouchEvents3 = function supportsTouchEvents4() {
  return isBrowser3 && window.ontouchstart === null;
};
var supportsMouseEvents3 = function supportsMouseEvents4() {
  return isBrowser3 && window.onmousedown === null;
};
var mouseEventNames2 = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames2 = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName2(name) {
  if (supportsPointerEvents3()) {
    return name;
  }
  if (supportsTouchEvents3()) {
    return touchEventNames2[name];
  }
  if (supportsMouseEvents3()) {
    return mouseEventNames2[name];
  }
  return name;
}
function addPointerEvent2(target, eventName, handler, options) {
  return addDomEvent2(target, getPointerEventName2(eventName), wrapPointerEventHandler3(handler, eventName === "pointerdown"), options);
}
function isMultiTouchEvent2(event) {
  return isTouchEvent2(event) && event.touches.length > 1;
}
var PanSession2 = function() {
  function PanSession4(_event, handlers, threshold) {
    var _this = this;
    this.history = [];
    this.startEvent = null;
    this.lastEvent = null;
    this.lastEventInfo = null;
    this.handlers = {};
    this.removeListeners = noop5;
    this.threshold = 3;
    this.win = void 0;
    this.updatePoint = function() {
      if (!(_this.lastEvent && _this.lastEventInfo))
        return;
      var info = getPanInfo2(_this.lastEventInfo, _this.history);
      var isPanStarted = _this.startEvent !== null;
      var isDistancePastThreshold = distance2(info.offset, {
        x: 0,
        y: 0
      }) >= _this.threshold;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      var _getFrameData = getFrameData(), timestamp = _getFrameData.timestamp;
      _this.history.push(_extends9({}, info.point, {
        timestamp
      }));
      var _this$handlers = _this.handlers, onStart = _this$handlers.onStart, onMove = _this$handlers.onMove;
      if (!isPanStarted) {
        onStart == null ? void 0 : onStart(_this.lastEvent, info);
        _this.startEvent = _this.lastEvent;
      }
      onMove == null ? void 0 : onMove(_this.lastEvent, info);
    };
    this.onPointerMove = function(event, info) {
      _this.lastEvent = event;
      _this.lastEventInfo = info;
      if (isMouseEvent2(event) && event.buttons === 0) {
        _this.onPointerUp(event, info);
        return;
      }
      es_default.update(_this.updatePoint, true);
    };
    this.onPointerUp = function(event, info) {
      var panInfo = getPanInfo2(info, _this.history);
      var _this$handlers2 = _this.handlers, onEnd = _this$handlers2.onEnd, onSessionEnd = _this$handlers2.onSessionEnd;
      onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);
      _this.end();
      if (!onEnd || !_this.startEvent)
        return;
      onEnd == null ? void 0 : onEnd(event, panInfo);
    };
    this.win = getEventWindow2(_event);
    if (isMultiTouchEvent2(_event))
      return;
    this.handlers = handlers;
    if (threshold) {
      this.threshold = threshold;
    }
    _event.stopPropagation();
    _event.preventDefault();
    var _info = extractEventInfo2(_event);
    var _getFrameData2 = getFrameData(), _timestamp = _getFrameData2.timestamp;
    this.history = [_extends9({}, _info.point, {
      timestamp: _timestamp
    })];
    var onSessionStart = handlers.onSessionStart;
    onSessionStart == null ? void 0 : onSessionStart(_event, getPanInfo2(_info, this.history));
    this.removeListeners = pipe3(addPointerEvent2(this.win, "pointermove", this.onPointerMove), addPointerEvent2(this.win, "pointerup", this.onPointerUp), addPointerEvent2(this.win, "pointercancel", this.onPointerUp));
  }
  var _proto = PanSession4.prototype;
  _proto.updateHandlers = function updateHandlers(handlers) {
    this.handlers = handlers;
  };
  _proto.end = function end2() {
    var _this$removeListeners;
    (_this$removeListeners = this.removeListeners) == null ? void 0 : _this$removeListeners.call(this);
    cancelSync.update(this.updatePoint);
  };
  return PanSession4;
}();
function subtractPoint2(a2, b2) {
  return {
    x: a2.x - b2.x,
    y: a2.y - b2.y
  };
}
function startPanPoint2(history) {
  return history[0];
}
function lastPanPoint2(history) {
  return history[history.length - 1];
}
function getPanInfo2(info, history) {
  return {
    point: info.point,
    delta: subtractPoint2(info.point, lastPanPoint2(history)),
    offset: subtractPoint2(info.point, startPanPoint2(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function lastDevicePoint2(history) {
  return history[history.length - 1];
}
var toMilliseconds3 = function toMilliseconds4(seconds) {
  return seconds * 1e3;
};
function getVelocity2(history, timeDelta) {
  if (history.length < 2) {
    return {
      x: 0,
      y: 0
    };
  }
  var i = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint2(history);
  while (i >= 0) {
    timestampedPoint = history[i];
    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds3(timeDelta)) {
      break;
    }
    i--;
  }
  if (!timestampedPoint) {
    return {
      x: 0,
      y: 0
    };
  }
  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time === 0) {
    return {
      x: 0,
      y: 0
    };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time,
    y: (lastPoint.y - timestampedPoint.y) / time
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}
var breakpoints2 = Object.freeze(["base", "sm", "md", "lg", "xl", "2xl"]);

// node_modules/.pnpm/@chakra-ui+theme-tools@2.0.2_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js
var getColor = function getColor2(theme3, color4, fallback) {
  var hex2 = memoizedGet2(theme3, "colors." + color4, color4);
  var _TinyColor = new TinyColor(hex2), isValid = _TinyColor.isValid;
  return isValid ? hex2 : fallback;
};
var tone = function tone2(color4) {
  return function(theme3) {
    var hex2 = getColor(theme3, color4);
    var isDark5 = new TinyColor(hex2).isDark();
    return isDark5 ? "dark" : "light";
  };
};
var isDark = function isDark2(color4) {
  return function(theme3) {
    return tone(color4)(theme3) === "dark";
  };
};
var transparentize = function transparentize2(color4, opacity) {
  return function(theme3) {
    var raw = getColor(theme3, color4);
    return new TinyColor(raw).setAlpha(opacity).toRgbString();
  };
};
function generateStripe(size3, color4) {
  if (size3 === void 0) {
    size3 = "1rem";
  }
  if (color4 === void 0) {
    color4 = "rgba(255, 255, 255, 0.15)";
  }
  return {
    backgroundImage: "linear-gradient(\n    45deg,\n    " + color4 + " 25%,\n    transparent 25%,\n    transparent 50%,\n    " + color4 + " 50%,\n    " + color4 + " 75%,\n    transparent 75%,\n    transparent\n  )",
    backgroundSize: size3 + " " + size3
  };
}
function randomColor(opts) {
  var fallback = random().toHexString();
  if (!opts || isEmptyObject2(opts)) {
    return fallback;
  }
  if (opts.string && opts.colors) {
    return randomColorFromList(opts.string, opts.colors);
  }
  if (opts.string && !opts.colors) {
    return randomColorFromString(opts.string);
  }
  if (opts.colors && !opts.string) {
    return randomFromList(opts.colors);
  }
  return fallback;
}
function randomColorFromString(str) {
  var hash4 = 0;
  if (str.length === 0)
    return hash4.toString();
  for (var i = 0; i < str.length; i += 1) {
    hash4 = str.charCodeAt(i) + ((hash4 << 5) - hash4);
    hash4 = hash4 & hash4;
  }
  var color4 = "#";
  for (var j = 0; j < 3; j += 1) {
    var value = hash4 >> j * 8 & 255;
    color4 += ("00" + value.toString(16)).substr(-2);
  }
  return color4;
}
function randomColorFromList(str, list4) {
  var index2 = 0;
  if (str.length === 0)
    return list4[0];
  for (var i = 0; i < str.length; i += 1) {
    index2 = str.charCodeAt(i) + ((index2 << 5) - index2);
    index2 = index2 & index2;
  }
  index2 = (index2 % list4.length + list4.length) % list4.length;
  return list4[index2];
}
function randomFromList(list4) {
  return list4[Math.floor(Math.random() * list4.length)];
}
function mode(light, dark) {
  return function(props) {
    return props.colorMode === "dark" ? dark : light;
  };
}
function orient(options) {
  var orientation = options.orientation, vertical = options.vertical, horizontal = options.horizontal;
  if (!orientation)
    return {};
  return orientation === "vertical" ? vertical : horizontal;
}
function _extends10() {
  _extends10 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
var createBreakpoints = function createBreakpoints2(config3) {
  warn2({
    condition: true,
    message: ["[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon", "simply pass the breakpoints as an object. Remove the createBreakpoint(..) call"].join("")
  });
  return _extends10({
    base: "0em"
  }, config3);
};
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
var Anatomy = function() {
  function Anatomy3(name) {
    var _this = this;
    this.map = {};
    this.called = false;
    this.assert = function() {
      if (!_this.called) {
        _this.called = true;
        return;
      }
      throw new Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?");
    };
    this.parts = function() {
      _this.assert();
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      for (var _i = 0, _values = values; _i < _values.length; _i++) {
        var part = _values[_i];
        _this.map[part] = _this.toPart(part);
      }
      return _this;
    };
    this.extend = function() {
      for (var _len2 = arguments.length, parts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        parts[_key2] = arguments[_key2];
      }
      for (var _i2 = 0, _parts = parts; _i2 < _parts.length; _i2++) {
        var part = _parts[_i2];
        if (part in _this.map)
          continue;
        _this.map[part] = _this.toPart(part);
      }
      return _this;
    };
    this.toPart = function(part) {
      var el = ["container", "root"].includes(part != null ? part : "") ? [_this.name] : [_this.name, part];
      var attr = el.filter(Boolean).join("__");
      var className = "chakra-" + attr;
      var partObj = {
        className,
        selector: "." + className,
        toString: function toString() {
          return part;
        }
      };
      return partObj;
    };
    this.__type = {};
  }
  _createClass(Anatomy3, [{
    key: "selectors",
    get: function get5() {
      var value = fromEntries3(Object.entries(this.map).map(function(_ref2) {
        var key = _ref2[0], part = _ref2[1];
        return [key, part.selector];
      }));
      return value;
    }
  }, {
    key: "classNames",
    get: function get5() {
      var value = fromEntries3(Object.entries(this.map).map(function(_ref2) {
        var key = _ref2[0], part = _ref2[1];
        return [key, part.className];
      }));
      return value;
    }
  }, {
    key: "keys",
    get: function get5() {
      return Object.keys(this.map);
    }
  }]);
  return Anatomy3;
}();
function anatomy(name) {
  return new Anatomy(name);
}
function toRef(operand) {
  if (isObject2(operand) && operand.reference) {
    return operand.reference;
  }
  return String(operand);
}
var toExpr = function toExpr2(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }
  return operands.map(toRef).join(" " + operator + " ").replace(/calc/g, "");
};
var _add2 = function add3() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }
  return "calc(" + toExpr.apply(void 0, ["+"].concat(operands)) + ")";
};
var _subtract2 = function subtract4() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }
  return "calc(" + toExpr.apply(void 0, ["-"].concat(operands)) + ")";
};
var _multiply2 = function multiply2() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }
  return "calc(" + toExpr.apply(void 0, ["*"].concat(operands)) + ")";
};
var _divide2 = function divide2() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }
  return "calc(" + toExpr.apply(void 0, ["/"].concat(operands)) + ")";
};
var _negate2 = function negate2(x) {
  var value = toRef(x);
  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }
  return _multiply2(value, -1);
};
var calc2 = Object.assign(function(x) {
  return {
    add: function add6() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }
      return calc2(_add2.apply(void 0, [x].concat(operands)));
    },
    subtract: function subtract7() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }
      return calc2(_subtract2.apply(void 0, [x].concat(operands)));
    },
    multiply: function multiply5() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }
      return calc2(_multiply2.apply(void 0, [x].concat(operands)));
    },
    divide: function divide5() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }
      return calc2(_divide2.apply(void 0, [x].concat(operands)));
    },
    negate: function negate5() {
      return calc2(_negate2(x));
    },
    toString: function toString() {
      return x.toString();
    }
  };
}, {
  add: _add2,
  subtract: _subtract2,
  multiply: _multiply2,
  divide: _divide2,
  negate: _negate2
});
function isDecimal(value) {
  return !Number.isInteger(parseFloat(value.toString()));
}
function replaceWhiteSpace2(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }
  return value.replace(/\s+/g, replaceValue);
}
function escape2(value) {
  var valueStr = replaceWhiteSpace2(value.toString());
  if (valueStr.includes("\\."))
    return value;
  return isDecimal(value) ? valueStr.replace(".", "\\.") : value;
}
function addPrefix2(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return [prefix3, escape2(value)].filter(Boolean).join("-");
}
function toVarRef(name, fallback) {
  return "var(" + escape2(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVar(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return "--" + addPrefix2(value, prefix3);
}
function cssVar2(name, options) {
  var cssVariable = toVar(name, options == null ? void 0 : options.prefix);
  return {
    variable: cssVariable,
    reference: toVarRef(cssVariable, getFallback(options == null ? void 0 : options.fallback))
  };
}
function getFallback(fallback) {
  if (typeof fallback === "string")
    return fallback;
  return fallback == null ? void 0 : fallback.reference;
}

// node_modules/.pnpm/@chakra-ui+anatomy@2.0.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/anatomy/dist/chakra-ui-anatomy.esm.js
var accordionAnatomy = anatomy("accordion").parts("root", "container", "button", "panel").extend("icon");
var alertAnatomy = anatomy("alert").parts("title", "description", "container").extend("icon", "spinner");
var avatarAnatomy = anatomy("avatar").parts("label", "badge", "container").extend("excessLabel", "group");
var breadcrumbAnatomy = anatomy("breadcrumb").parts("link", "item", "container").extend("separator");
var buttonAnatomy = anatomy("button").parts();
var checkboxAnatomy = anatomy("checkbox").parts("control", "icon", "container").extend("label");
var circularProgressAnatomy = anatomy("progress").parts("track", "filledTrack").extend("label");
var drawerAnatomy = anatomy("drawer").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var editableAnatomy = anatomy("editable").parts("preview", "input", "textarea");
var formAnatomy = anatomy("form").parts("container", "requiredIndicator", "helperText");
var formErrorAnatomy = anatomy("formError").parts("text", "icon");
var inputAnatomy = anatomy("input").parts("addon", "field", "element");
var listAnatomy = anatomy("list").parts("container", "item", "icon");
var menuAnatomy = anatomy("menu").parts("button", "list", "item").extend("groupTitle", "command", "divider");
var modalAnatomy = anatomy("modal").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var numberInputAnatomy = anatomy("numberinput").parts("root", "field", "stepperGroup", "stepper");
var pinInputAnatomy = anatomy("pininput").parts("field");
var popoverAnatomy = anatomy("popover").parts("content", "header", "body", "footer").extend("popper", "arrow", "closeButton");
var progressAnatomy = anatomy("progress").parts("label", "filledTrack", "track");
var radioAnatomy = anatomy("radio").parts("container", "control", "label");
var selectAnatomy = anatomy("select").parts("field", "icon");
var sliderAnatomy = anatomy("slider").parts("container", "track", "thumb", "filledTrack");
var statAnatomy = anatomy("stat").parts("container", "label", "helpText", "number", "icon");
var switchAnatomy = anatomy("switch").parts("container", "track", "thumb");
var tableAnatomy = anatomy("table").parts("table", "thead", "tbody", "tr", "th", "td", "tfoot", "caption");
var tabsAnatomy = anatomy("tabs").parts("root", "tab", "tablist", "tabpanel", "tabpanels", "indicator");
var tagAnatomy = anatomy("tag").parts("container", "label", "closeButton");

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/typography/dist/chakra-ui-theme-foundations-typography.esm.js
var typography2 = {
  letterSpacings: {
    tighter: "-0.05em",
    tight: "-0.025em",
    normal: "0",
    wide: "0.025em",
    wider: "0.05em",
    widest: "0.1em"
  },
  lineHeights: {
    normal: "normal",
    none: 1,
    shorter: 1.25,
    "short": 1.375,
    base: 1.5,
    tall: 1.625,
    taller: "2",
    "3": ".75rem",
    "4": "1rem",
    "5": "1.25rem",
    "6": "1.5rem",
    "7": "1.75rem",
    "8": "2rem",
    "9": "2.25rem",
    "10": "2.5rem"
  },
  fontWeights: {
    hairline: 100,
    thin: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    black: 900
  },
  fonts: {
    heading: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'
  },
  fontSizes: {
    xs: "0.75rem",
    sm: "0.875rem",
    md: "1rem",
    lg: "1.125rem",
    xl: "1.25rem",
    "2xl": "1.5rem",
    "3xl": "1.875rem",
    "4xl": "2.25rem",
    "5xl": "3rem",
    "6xl": "3.75rem",
    "7xl": "4.5rem",
    "8xl": "6rem",
    "9xl": "8rem"
  }
};

// node_modules/.pnpm/@chakra-ui+hooks@2.0.2_react@16.14.0/node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js
var React14 = __toESM(require_react());
var import_react15 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+hooks@2.0.2_react@16.14.0/node_modules/@chakra-ui/hooks/dist/use-animation-state-5054a9f7.esm.js
var React13 = __toESM(require_react());
var import_react14 = __toESM(require_react());
var useSafeLayoutEffect2 = isBrowser3 ? React13.useLayoutEffect : React13.useEffect;

// node_modules/.pnpm/@chakra-ui+hooks@2.0.2_react@16.14.0/node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js
var import_copy_to_clipboard2 = __toESM(require_copy_to_clipboard());

// node_modules/.pnpm/@chakra-ui+color-mode@2.0.4_react@16.14.0/node_modules/@chakra-ui/color-mode/dist/chakra-ui-color-mode.esm.js
var React15 = __toESM(require_react());
function _extends11() {
  _extends11 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
var classNames2 = {
  light: "chakra-ui-light",
  dark: "chakra-ui-dark"
};
function getColorModeUtils(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$preventTrans = _options.preventTransition, preventTransition = _options$preventTrans === void 0 ? true : _options$preventTrans;
  var utils = {
    setDataset: function setDataset(value) {
      var cleanup = preventTransition ? utils.preventTransition() : void 0;
      document.documentElement.dataset.theme = value;
      document.documentElement.style.colorScheme = value;
      cleanup == null ? void 0 : cleanup();
    },
    setClassName: function setClassName(dark) {
      document.body.classList.add(dark ? classNames2.dark : classNames2.light);
      document.body.classList.remove(dark ? classNames2.light : classNames2.dark);
    },
    query: function query() {
      return window.matchMedia("(prefers-color-scheme: dark)");
    },
    getSystemTheme: function getSystemTheme(fallback) {
      var _utils$query$matches;
      var dark = (_utils$query$matches = utils.query().matches) != null ? _utils$query$matches : fallback === "dark";
      return dark ? "dark" : "light";
    },
    addListener: function addListener2(fn6) {
      var mql = utils.query();
      var listener = function listener2(e) {
        fn6(e.matches ? "dark" : "light");
      };
      mql.addEventListener("change", listener);
      return function() {
        return mql.removeEventListener("change", listener);
      };
    },
    preventTransition: function preventTransition2() {
      var css6 = document.createElement("style");
      css6.appendChild(document.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}"));
      document.head.appendChild(css6);
      return function() {
        (function() {
          return window.getComputedStyle(document.body);
        })();
        requestAnimationFrame(function() {
          requestAnimationFrame(function() {
            document.head.removeChild(css6);
          });
        });
      };
    }
  };
  return utils;
}
var STORAGE_KEY = "chakra-ui-color-mode";
function createLocalStorageManager(key) {
  return {
    ssr: false,
    type: "localStorage",
    get: function get5(init) {
      if (!isBrowser3)
        return init;
      var value;
      try {
        value = localStorage.getItem(key) || init;
      } catch (e) {
      }
      return value || init;
    },
    set: function set3(value) {
      try {
        localStorage.setItem(key, value);
      } catch (e) {
      }
    }
  };
}
var localStorageManager2 = createLocalStorageManager(STORAGE_KEY);
function parseCookie(cookie, key) {
  var match2 = cookie.match(new RegExp("(^| )" + key + "=([^;]+)"));
  return match2 == null ? void 0 : match2[2];
}
function createCookieStorageManager(key, cookie) {
  return {
    ssr: !!cookie,
    type: "cookie",
    get: function get5(init) {
      if (cookie)
        return parseCookie(cookie, key);
      if (!isBrowser3)
        return init;
      return parseCookie(document.cookie, key) || init;
    },
    set: function set3(value) {
      document.cookie = key + "=" + value + "; max-age=31536000; path=/";
    }
  };
}
var cookieStorageManager = createCookieStorageManager(STORAGE_KEY);
var cookieStorageManagerSSR = function cookieStorageManagerSSR2(cookie) {
  return createCookieStorageManager(STORAGE_KEY, cookie);
};
var ColorModeContext2 = React15.createContext({});
if (__DEV__2) {
  ColorModeContext2.displayName = "ColorModeContext";
}
function useColorMode3() {
  var context = React15.useContext(ColorModeContext2);
  if (context === void 0) {
    throw new Error("useColorMode must be used within a ColorModeProvider");
  }
  return context;
}
function getTheme3(manager2, fallback) {
  return manager2.type === "cookie" && manager2.ssr ? manager2.get(fallback) : fallback;
}
function ColorModeProvider2(props) {
  var value = props.value, children = props.children, _props$options = props.options;
  _props$options = _props$options === void 0 ? {} : _props$options;
  var useSystemColorMode = _props$options.useSystemColorMode, initialColorMode = _props$options.initialColorMode, disableTransitionOnChange = _props$options.disableTransitionOnChange, _props$colorModeManag = props.colorModeManager, colorModeManager = _props$colorModeManag === void 0 ? localStorageManager2 : _props$colorModeManag;
  var defaultColorMode = initialColorMode === "dark" ? "dark" : "light";
  var _React$useState = React15.useState(function() {
    return getTheme3(colorModeManager, defaultColorMode);
  }), colorMode = _React$useState[0], rawSetColorMode = _React$useState[1];
  var _React$useState2 = React15.useState(function() {
    return getTheme3(colorModeManager);
  }), resolvedColorMode = _React$useState2[0], setResolvedColorMode = _React$useState2[1];
  var _React$useMemo = React15.useMemo(function() {
    return getColorModeUtils({
      preventTransition: disableTransitionOnChange
    });
  }, [disableTransitionOnChange]), getSystemTheme = _React$useMemo.getSystemTheme, setClassName = _React$useMemo.setClassName, setDataset = _React$useMemo.setDataset, addListener2 = _React$useMemo.addListener;
  var resolvedValue = initialColorMode === "system" && !colorMode ? resolvedColorMode : colorMode;
  var setColorMode = React15.useCallback(function(value2) {
    var resolved = value2 === "system" ? getSystemTheme() : value2;
    rawSetColorMode(resolved);
    setClassName(resolved === "dark");
    setDataset(resolved);
    colorModeManager.set(resolved);
  }, [colorModeManager, getSystemTheme, setClassName, setDataset]);
  useSafeLayoutEffect2(function() {
    if (initialColorMode === "system") {
      setResolvedColorMode(getSystemTheme());
    }
  }, []);
  useSafeLayoutEffect2(function() {
    var managerValue = colorModeManager.get();
    if (managerValue) {
      setColorMode(managerValue);
      return;
    }
    if (initialColorMode === "system") {
      setColorMode("system");
      return;
    }
    setColorMode(defaultColorMode);
  }, [colorModeManager, defaultColorMode, initialColorMode, getSystemTheme]);
  var toggleColorMode = React15.useCallback(function() {
    setColorMode(resolvedValue === "dark" ? "light" : "dark");
  }, [resolvedValue, setColorMode]);
  React15.useEffect(function() {
    if (!useSystemColorMode)
      return;
    return addListener2(setColorMode);
  }, [useSystemColorMode, addListener2, setColorMode]);
  var context = React15.useMemo(function() {
    return {
      colorMode: value != null ? value : resolvedValue,
      toggleColorMode: value ? noop5 : toggleColorMode,
      setColorMode: value ? noop5 : setColorMode
    };
  }, [resolvedValue, toggleColorMode, setColorMode, value]);
  return React15.createElement(ColorModeContext2.Provider, {
    value: context
  }, children);
}
if (__DEV__2) {
  ColorModeProvider2.displayName = "ColorModeProvider";
}
var DarkMode3 = function DarkMode4(props) {
  var context = React15.useMemo(function() {
    return {
      colorMode: "dark",
      toggleColorMode: noop5,
      setColorMode: noop5
    };
  }, []);
  return React15.createElement(ColorModeContext2.Provider, _extends11({
    value: context
  }, props));
};
if (__DEV__2) {
  DarkMode3.displayName = "DarkMode";
}
var LightMode3 = function LightMode4(props) {
  var context = React15.useMemo(function() {
    return {
      colorMode: "light",
      toggleColorMode: noop5,
      setColorMode: noop5
    };
  }, []);
  return React15.createElement(ColorModeContext2.Provider, _extends11({
    value: context
  }, props));
};
if (__DEV__2) {
  LightMode3.displayName = "LightMode";
}
function useColorModeValue(light, dark) {
  var _useColorMode = useColorMode3(), colorMode = _useColorMode.colorMode;
  return colorMode === "dark" ? dark : light;
}
var VALID_VALUES = /* @__PURE__ */ new Set(["dark", "light", "system"]);
function normalize3(initialColorMode) {
  var value = initialColorMode;
  if (!VALID_VALUES.has(value))
    value = "light";
  return value;
}
function getScriptSrc(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, _props$initialColorMo = _props.initialColorMode, initialColorMode = _props$initialColorMo === void 0 ? "light" : _props$initialColorMo, _props$type = _props.type, type = _props$type === void 0 ? "localStorage" : _props$type, _props$storageKey = _props.storageKey, key = _props$storageKey === void 0 ? "chakra-ui-color-mode" : _props$storageKey;
  var init = normalize3(initialColorMode);
  var isCookie = type === "cookie";
  var cookieScript = '(function(){try{var a=function(o){var l="(prefers-color-scheme: dark)",v=window.matchMedia(l).matches?"dark":"light",e=o==="system"?v:o,d=document.documentElement,m=document.body,i="chakra-ui-light",n="chakra-ui-dark",s=e==="dark";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h="' + init + '",r="' + key + '",t=document.cookie.match(new RegExp("(^| )".concat(r,"=([^;]+)"))),c=t?t[2]:null;c?a(c):document.cookie="".concat(r,"=").concat(a(h),"; max-age=31536000; path=/")}catch(a){}})();\n  ';
  var localStorageScript = '(function(){try{var a=function(c){var v="(prefers-color-scheme: dark)",h=window.matchMedia(v).matches?"dark":"light",r=c==="system"?h:c,o=document.documentElement,s=document.body,l="chakra-ui-light",d="chakra-ui-dark",i=r==="dark";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m="' + init + '",e="' + key + '",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  ';
  var fn6 = isCookie ? cookieScript : localStorageScript;
  return ("!" + fn6).trim();
}
function ColorModeScript(props) {
  if (props === void 0) {
    props = {};
  }
  return React15.createElement("script", {
    id: "chakra-script",
    dangerouslySetInnerHTML: {
      __html: getScriptSrc(props)
    }
  });
}

// node_modules/.pnpm/@chakra-ui+styled-system@2.2.0/node_modules/@chakra-ui/styled-system/dist/chakra-ui-styled-system.esm.js
function _extends12() {
  _extends12 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
var isImportant = function isImportant2(value) {
  return /!(important)?$/.test(value);
};
var withoutImportant = function withoutImportant2(value) {
  return isString2(value) ? value.replace(/!(important)?$/, "").trim() : value;
};
var tokenToCSSVar3 = function tokenToCSSVar4(scale3, value) {
  return function(theme3) {
    var valueStr = String(value);
    var important = isImportant(valueStr);
    var valueWithoutImportant = withoutImportant(valueStr);
    var key = scale3 ? scale3 + "." + valueWithoutImportant : valueWithoutImportant;
    var transformed = isObject2(theme3.__cssMap) && key in theme3.__cssMap ? theme3.__cssMap[key].varRef : value;
    transformed = withoutImportant(transformed);
    return important ? transformed + " !important" : transformed;
  };
};
function createTransform2(options) {
  var scale3 = options.scale, transform19 = options.transform, compose = options.compose;
  var fn6 = function fn7(value, theme3) {
    var _transform;
    var _value = tokenToCSSVar3(scale3, value)(theme3);
    var result = (_transform = transform19 == null ? void 0 : transform19(_value, theme3)) != null ? _transform : _value;
    if (compose) {
      result = compose(result, theme3);
    }
    return result;
  };
  return fn6;
}
function toConfig2(scale3, transform19) {
  return function(property) {
    var result = {
      property,
      scale: scale3
    };
    result.transform = createTransform2({
      scale: scale3,
      transform: transform19
    });
    return result;
  };
}
var getRtl3 = function getRtl4(_ref2) {
  var rtl = _ref2.rtl, ltr = _ref2.ltr;
  return function(theme3) {
    return theme3.direction === "rtl" ? rtl : ltr;
  };
};
function logical2(options) {
  var property = options.property, scale3 = options.scale, transform19 = options.transform;
  return {
    scale: scale3,
    property: getRtl3(property),
    transform: scale3 ? createTransform2({
      scale: scale3,
      compose: transform19
    }) : transform19
  };
}
var _spaceXTemplate2;
var _spaceYTemplate2;
var transformTemplate2 = ["rotate(var(--chakra-rotate, 0))", "scaleX(var(--chakra-scale-x, 1))", "scaleY(var(--chakra-scale-y, 1))", "skewX(var(--chakra-skew-x, 0))", "skewY(var(--chakra-skew-y, 0))"];
function getTransformTemplate2() {
  return ["translateX(var(--chakra-translate-x, 0))", "translateY(var(--chakra-translate-y, 0))"].concat(transformTemplate2).join(" ");
}
function getTransformGpuTemplate2() {
  return ["translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)"].concat(transformTemplate2).join(" ");
}
var filterTemplate2 = {
  "--chakra-blur": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-invert": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-sepia": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-drop-shadow": "var(--chakra-empty,/*!*/ /*!*/)",
  filter: ["var(--chakra-blur)", "var(--chakra-brightness)", "var(--chakra-contrast)", "var(--chakra-grayscale)", "var(--chakra-hue-rotate)", "var(--chakra-invert)", "var(--chakra-saturate)", "var(--chakra-sepia)", "var(--chakra-drop-shadow)"].join(" ")
};
var backdropFilterTemplate2 = {
  backdropFilter: ["var(--chakra-backdrop-blur)", "var(--chakra-backdrop-brightness)", "var(--chakra-backdrop-contrast)", "var(--chakra-backdrop-grayscale)", "var(--chakra-backdrop-hue-rotate)", "var(--chakra-backdrop-invert)", "var(--chakra-backdrop-opacity)", "var(--chakra-backdrop-saturate)", "var(--chakra-backdrop-sepia)"].join(" "),
  "--chakra-backdrop-blur": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-invert": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-opacity": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-sepia": "var(--chakra-empty,/*!*/ /*!*/)"
};
function getRingTemplate2(value) {
  return {
    "--chakra-ring-offset-shadow": "var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)",
    "--chakra-ring-shadow": "var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)",
    "--chakra-ring-width": value,
    boxShadow: ["var(--chakra-ring-offset-shadow)", "var(--chakra-ring-shadow)", "var(--chakra-shadow, 0 0 #0000)"].join(", ")
  };
}
var flexDirectionTemplate2 = {
  "row-reverse": {
    space: "--chakra-space-x-reverse",
    divide: "--chakra-divide-x-reverse"
  },
  "column-reverse": {
    space: "--chakra-space-y-reverse",
    divide: "--chakra-divide-y-reverse"
  }
};
var owlSelector2 = "& > :not(style) ~ :not(style)";
var spaceXTemplate2 = (_spaceXTemplate2 = {}, _spaceXTemplate2[owlSelector2] = {
  marginInlineStart: "calc(var(--chakra-space-x) * calc(1 - var(--chakra-space-x-reverse)))",
  marginInlineEnd: "calc(var(--chakra-space-x) * var(--chakra-space-x-reverse))"
}, _spaceXTemplate2);
var spaceYTemplate2 = (_spaceYTemplate2 = {}, _spaceYTemplate2[owlSelector2] = {
  marginTop: "calc(var(--chakra-space-y) * calc(1 - var(--chakra-space-y-reverse)))",
  marginBottom: "calc(var(--chakra-space-y) * var(--chakra-space-y-reverse))"
}, _spaceYTemplate2);
function _setPrototypeOf3(o, p) {
  _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf5(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf3(o, p);
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf3(subClass, superClass);
}
function _wrapRegExp2() {
  _wrapRegExp2 = function(re, groups) {
    return new BabelRegExp(re, void 0, groups);
  };
  var _super = RegExp.prototype, _groups = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(re, flags, groups) {
    var _this = new RegExp(re, flags);
    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf3(_this, BabelRegExp.prototype);
  }
  function buildGroups(result, re) {
    var g = _groups.get(re);
    return Object.keys(g).reduce(function(groups, name) {
      return groups[name] = result[g[name]], groups;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _inherits2(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function(str) {
    var result = _super.exec.call(this, str);
    return result && (result.groups = buildGroups(result, this)), result;
  }, BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
    if (typeof substitution == "string") {
      var groups = _groups.get(this);
      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function(_, name) {
        return "$" + groups[name];
      }));
    }
    if (typeof substitution == "function") {
      var _this = this;
      return _super[Symbol.replace].call(this, str, function() {
        var args = arguments;
        return typeof args[args.length - 1] != "object" && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);
      });
    }
    return _super[Symbol.replace].call(this, str, substitution);
  }, _wrapRegExp2.apply(this, arguments);
}
var directionMap2 = {
  "to-t": "to top",
  "to-tr": "to top right",
  "to-r": "to right",
  "to-br": "to bottom right",
  "to-b": "to bottom",
  "to-bl": "to bottom left",
  "to-l": "to left",
  "to-tl": "to top left"
};
var valueSet2 = new Set(Object.values(directionMap2));
var globalSet2 = /* @__PURE__ */ new Set(["none", "-moz-initial", "inherit", "initial", "revert", "unset"]);
var trimSpace3 = function trimSpace4(str) {
  return str.trim();
};
function parseGradient2(value, theme3) {
  var _regex$exec$groups, _regex$exec;
  if (value == null || globalSet2.has(value))
    return value;
  var regex = _wrapRegExp2(/(^[a-z-A-Z]+)\(((.*))\)/g, {
    type: 1,
    values: 2
  });
  var _ref2 = (_regex$exec$groups = (_regex$exec = regex.exec(value)) == null ? void 0 : _regex$exec.groups) != null ? _regex$exec$groups : {}, type = _ref2.type, values = _ref2.values;
  if (!type || !values)
    return value;
  var _type = type.includes("-gradient") ? type : type + "-gradient";
  var _values$split$map$fil = values.split(",").map(trimSpace3).filter(Boolean), maybeDirection = _values$split$map$fil[0], stops = _values$split$map$fil.slice(1);
  if ((stops == null ? void 0 : stops.length) === 0)
    return value;
  var direction3 = maybeDirection in directionMap2 ? directionMap2[maybeDirection] : maybeDirection;
  stops.unshift(direction3);
  var _values = stops.map(function(stop2) {
    if (valueSet2.has(stop2))
      return stop2;
    var firstStop = stop2.indexOf(" ");
    var _ref22 = firstStop !== -1 ? [stop2.substr(0, firstStop), stop2.substr(firstStop + 1)] : [stop2], _color = _ref22[0], _stop = _ref22[1];
    var _stopOrFunc = isCSSFunction3(_stop) ? _stop : _stop && _stop.split(" ");
    var key = "colors." + _color;
    var color4 = key in theme3.__cssMap ? theme3.__cssMap[key].varRef : _color;
    return _stopOrFunc ? [color4].concat(Array.isArray(_stopOrFunc) ? _stopOrFunc : [_stopOrFunc]).join(" ") : color4;
  });
  return _type + "(" + _values.join(", ") + ")";
}
var isCSSFunction3 = function isCSSFunction4(value) {
  return isString2(value) && value.includes("(") && value.includes(")");
};
var gradientTransform3 = function gradientTransform4(value, theme3) {
  return parseGradient2(value, theme3 != null ? theme3 : {});
};
var analyzeCSSValue5 = function analyzeCSSValue6(value) {
  var num = parseFloat(value.toString());
  var unit = value.toString().replace(String(num), "");
  return {
    unitless: !unit,
    value: num,
    unit
  };
};
var wrap3 = function wrap4(str) {
  return function(value) {
    return str + "(" + value + ")";
  };
};
var transformFunctions2 = {
  filter: function filter3(value) {
    return value !== "auto" ? value : filterTemplate2;
  },
  backdropFilter: function backdropFilter2(value) {
    return value !== "auto" ? value : backdropFilterTemplate2;
  },
  ring: function ring3(value) {
    return getRingTemplate2(transformFunctions2.px(value));
  },
  bgClip: function bgClip2(value) {
    return value === "text" ? {
      color: "transparent",
      backgroundClip: "text"
    } : {
      backgroundClip: value
    };
  },
  transform: function transform10(value) {
    if (value === "auto")
      return getTransformTemplate2();
    if (value === "auto-gpu")
      return getTransformGpuTemplate2();
    return value;
  },
  px: function px4(value) {
    if (value == null)
      return value;
    var _analyzeCSSValue = analyzeCSSValue5(value), unitless = _analyzeCSSValue.unitless;
    return unitless || isNumber2(value) ? value + "px" : value;
  },
  fraction: function fraction2(value) {
    return !isNumber2(value) || value > 1 ? value : value * 100 + "%";
  },
  "float": function float2(value, theme3) {
    var map = {
      left: "right",
      right: "left"
    };
    return theme3.direction === "rtl" ? map[value] : value;
  },
  degree: function degree2(value) {
    if (isCssVar2(value) || value == null)
      return value;
    var unitless = isString2(value) && !value.endsWith("deg");
    return isNumber2(value) || unitless ? value + "deg" : value;
  },
  gradient: gradientTransform3,
  blur: wrap3("blur"),
  opacity: wrap3("opacity"),
  brightness: wrap3("brightness"),
  contrast: wrap3("contrast"),
  dropShadow: wrap3("drop-shadow"),
  grayscale: wrap3("grayscale"),
  hueRotate: wrap3("hue-rotate"),
  invert: wrap3("invert"),
  saturate: wrap3("saturate"),
  sepia: wrap3("sepia"),
  bgImage: function bgImage2(value) {
    if (value == null)
      return value;
    var prevent = isCSSFunction3(value) || globalSet2.has(value);
    return !prevent ? "url(" + value + ")" : value;
  },
  outline: function outline2(value) {
    var isNoneOrZero = String(value) === "0" || String(value) === "none";
    return value !== null && isNoneOrZero ? {
      outline: "2px solid transparent",
      outlineOffset: "2px"
    } : {
      outline: value
    };
  },
  flexDirection: function flexDirection2(value) {
    var _value;
    var _ref2 = (_value = flexDirectionTemplate2[value]) != null ? _value : {}, space3 = _ref2.space, divide5 = _ref2.divide;
    var result = {
      flexDirection: value
    };
    if (space3)
      result[space3] = 1;
    if (divide5)
      result[divide5] = 1;
    return result;
  }
};
var t2 = {
  borderWidths: toConfig2("borderWidths"),
  borderStyles: toConfig2("borderStyles"),
  colors: toConfig2("colors"),
  borders: toConfig2("borders"),
  radii: toConfig2("radii", transformFunctions2.px),
  space: toConfig2("space", transformFunctions2.px),
  spaceT: toConfig2("space", transformFunctions2.px),
  degreeT: function degreeT2(property) {
    return {
      property,
      transform: transformFunctions2.degree
    };
  },
  prop: function prop2(property, scale3, transform19) {
    return _extends12({
      property,
      scale: scale3
    }, scale3 && {
      transform: createTransform2({
        scale: scale3,
        transform: transform19
      })
    });
  },
  propT: function propT2(property, transform19) {
    return {
      property,
      transform: transform19
    };
  },
  sizes: toConfig2("sizes", transformFunctions2.px),
  sizesT: toConfig2("sizes", transformFunctions2.fraction),
  shadows: toConfig2("shadows"),
  logical: logical2,
  blur: toConfig2("blur", transformFunctions2.blur)
};
var background2 = {
  background: t2.colors("background"),
  backgroundColor: t2.colors("backgroundColor"),
  backgroundImage: t2.propT("backgroundImage", transformFunctions2.bgImage),
  backgroundSize: true,
  backgroundPosition: true,
  backgroundRepeat: true,
  backgroundAttachment: true,
  backgroundClip: {
    transform: transformFunctions2.bgClip
  },
  bgSize: t2.prop("backgroundSize"),
  bgPosition: t2.prop("backgroundPosition"),
  bg: t2.colors("background"),
  bgColor: t2.colors("backgroundColor"),
  bgPos: t2.prop("backgroundPosition"),
  bgRepeat: t2.prop("backgroundRepeat"),
  bgAttachment: t2.prop("backgroundAttachment"),
  bgGradient: t2.propT("backgroundImage", transformFunctions2.gradient),
  bgClip: {
    transform: transformFunctions2.bgClip
  }
};
Object.assign(background2, {
  bgImage: background2.backgroundImage,
  bgImg: background2.backgroundImage
});
var border2 = {
  border: t2.borders("border"),
  borderWidth: t2.borderWidths("borderWidth"),
  borderStyle: t2.borderStyles("borderStyle"),
  borderColor: t2.colors("borderColor"),
  borderRadius: t2.radii("borderRadius"),
  borderTop: t2.borders("borderTop"),
  borderBlockStart: t2.borders("borderBlockStart"),
  borderTopLeftRadius: t2.radii("borderTopLeftRadius"),
  borderStartStartRadius: t2.logical({
    scale: "radii",
    property: {
      ltr: "borderTopLeftRadius",
      rtl: "borderTopRightRadius"
    }
  }),
  borderEndStartRadius: t2.logical({
    scale: "radii",
    property: {
      ltr: "borderBottomLeftRadius",
      rtl: "borderBottomRightRadius"
    }
  }),
  borderTopRightRadius: t2.radii("borderTopRightRadius"),
  borderStartEndRadius: t2.logical({
    scale: "radii",
    property: {
      ltr: "borderTopRightRadius",
      rtl: "borderTopLeftRadius"
    }
  }),
  borderEndEndRadius: t2.logical({
    scale: "radii",
    property: {
      ltr: "borderBottomRightRadius",
      rtl: "borderBottomLeftRadius"
    }
  }),
  borderRight: t2.borders("borderRight"),
  borderInlineEnd: t2.borders("borderInlineEnd"),
  borderBottom: t2.borders("borderBottom"),
  borderBlockEnd: t2.borders("borderBlockEnd"),
  borderBottomLeftRadius: t2.radii("borderBottomLeftRadius"),
  borderBottomRightRadius: t2.radii("borderBottomRightRadius"),
  borderLeft: t2.borders("borderLeft"),
  borderInlineStart: {
    property: "borderInlineStart",
    scale: "borders"
  },
  borderInlineStartRadius: t2.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopLeftRadius", "borderBottomLeftRadius"],
      rtl: ["borderTopRightRadius", "borderBottomRightRadius"]
    }
  }),
  borderInlineEndRadius: t2.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopRightRadius", "borderBottomRightRadius"],
      rtl: ["borderTopLeftRadius", "borderBottomLeftRadius"]
    }
  }),
  borderX: t2.borders(["borderLeft", "borderRight"]),
  borderInline: t2.borders("borderInline"),
  borderY: t2.borders(["borderTop", "borderBottom"]),
  borderBlock: t2.borders("borderBlock"),
  borderTopWidth: t2.borderWidths("borderTopWidth"),
  borderBlockStartWidth: t2.borderWidths("borderBlockStartWidth"),
  borderTopColor: t2.colors("borderTopColor"),
  borderBlockStartColor: t2.colors("borderBlockStartColor"),
  borderTopStyle: t2.borderStyles("borderTopStyle"),
  borderBlockStartStyle: t2.borderStyles("borderBlockStartStyle"),
  borderBottomWidth: t2.borderWidths("borderBottomWidth"),
  borderBlockEndWidth: t2.borderWidths("borderBlockEndWidth"),
  borderBottomColor: t2.colors("borderBottomColor"),
  borderBlockEndColor: t2.colors("borderBlockEndColor"),
  borderBottomStyle: t2.borderStyles("borderBottomStyle"),
  borderBlockEndStyle: t2.borderStyles("borderBlockEndStyle"),
  borderLeftWidth: t2.borderWidths("borderLeftWidth"),
  borderInlineStartWidth: t2.borderWidths("borderInlineStartWidth"),
  borderLeftColor: t2.colors("borderLeftColor"),
  borderInlineStartColor: t2.colors("borderInlineStartColor"),
  borderLeftStyle: t2.borderStyles("borderLeftStyle"),
  borderInlineStartStyle: t2.borderStyles("borderInlineStartStyle"),
  borderRightWidth: t2.borderWidths("borderRightWidth"),
  borderInlineEndWidth: t2.borderWidths("borderInlineEndWidth"),
  borderRightColor: t2.colors("borderRightColor"),
  borderInlineEndColor: t2.colors("borderInlineEndColor"),
  borderRightStyle: t2.borderStyles("borderRightStyle"),
  borderInlineEndStyle: t2.borderStyles("borderInlineEndStyle"),
  borderTopRadius: t2.radii(["borderTopLeftRadius", "borderTopRightRadius"]),
  borderBottomRadius: t2.radii(["borderBottomLeftRadius", "borderBottomRightRadius"]),
  borderLeftRadius: t2.radii(["borderTopLeftRadius", "borderBottomLeftRadius"]),
  borderRightRadius: t2.radii(["borderTopRightRadius", "borderBottomRightRadius"])
};
Object.assign(border2, {
  rounded: border2.borderRadius,
  roundedTop: border2.borderTopRadius,
  roundedTopLeft: border2.borderTopLeftRadius,
  roundedTopRight: border2.borderTopRightRadius,
  roundedTopStart: border2.borderStartStartRadius,
  roundedTopEnd: border2.borderStartEndRadius,
  roundedBottom: border2.borderBottomRadius,
  roundedBottomLeft: border2.borderBottomLeftRadius,
  roundedBottomRight: border2.borderBottomRightRadius,
  roundedBottomStart: border2.borderEndStartRadius,
  roundedBottomEnd: border2.borderEndEndRadius,
  roundedLeft: border2.borderLeftRadius,
  roundedRight: border2.borderRightRadius,
  roundedStart: border2.borderInlineStartRadius,
  roundedEnd: border2.borderInlineEndRadius,
  borderStart: border2.borderInlineStart,
  borderEnd: border2.borderInlineEnd,
  borderTopStartRadius: border2.borderStartStartRadius,
  borderTopEndRadius: border2.borderStartEndRadius,
  borderBottomStartRadius: border2.borderEndStartRadius,
  borderBottomEndRadius: border2.borderEndEndRadius,
  borderStartRadius: border2.borderInlineStartRadius,
  borderEndRadius: border2.borderInlineEndRadius,
  borderStartWidth: border2.borderInlineStartWidth,
  borderEndWidth: border2.borderInlineEndWidth,
  borderStartColor: border2.borderInlineStartColor,
  borderEndColor: border2.borderInlineEndColor,
  borderStartStyle: border2.borderInlineStartStyle,
  borderEndStyle: border2.borderInlineEndStyle
});
var color2 = {
  color: t2.colors("color"),
  textColor: t2.colors("color"),
  fill: t2.colors("fill"),
  stroke: t2.colors("stroke")
};
var effect2 = {
  boxShadow: t2.shadows("boxShadow"),
  mixBlendMode: true,
  blendMode: t2.prop("mixBlendMode"),
  backgroundBlendMode: true,
  bgBlendMode: t2.prop("backgroundBlendMode"),
  opacity: true
};
Object.assign(effect2, {
  shadow: effect2.boxShadow
});
var filter4 = {
  filter: {
    transform: transformFunctions2.filter
  },
  blur: t2.blur("--chakra-blur"),
  brightness: t2.propT("--chakra-brightness", transformFunctions2.brightness),
  contrast: t2.propT("--chakra-contrast", transformFunctions2.contrast),
  hueRotate: t2.degreeT("--chakra-hue-rotate"),
  invert: t2.propT("--chakra-invert", transformFunctions2.invert),
  saturate: t2.propT("--chakra-saturate", transformFunctions2.saturate),
  dropShadow: t2.propT("--chakra-drop-shadow", transformFunctions2.dropShadow),
  backdropFilter: {
    transform: transformFunctions2.backdropFilter
  },
  backdropBlur: t2.blur("--chakra-backdrop-blur"),
  backdropBrightness: t2.propT("--chakra-backdrop-brightness", transformFunctions2.brightness),
  backdropContrast: t2.propT("--chakra-backdrop-contrast", transformFunctions2.contrast),
  backdropHueRotate: t2.degreeT("--chakra-backdrop-hue-rotate"),
  backdropInvert: t2.propT("--chakra-backdrop-invert", transformFunctions2.invert),
  backdropSaturate: t2.propT("--chakra-backdrop-saturate", transformFunctions2.saturate)
};
var flexbox2 = {
  alignItems: true,
  alignContent: true,
  justifyItems: true,
  justifyContent: true,
  flexWrap: true,
  flexDirection: {
    transform: transformFunctions2.flexDirection
  },
  experimental_spaceX: {
    "static": spaceXTemplate2,
    transform: createTransform2({
      scale: "space",
      transform: function transform11(value) {
        return value !== null ? {
          "--chakra-space-x": value
        } : null;
      }
    })
  },
  experimental_spaceY: {
    "static": spaceYTemplate2,
    transform: createTransform2({
      scale: "space",
      transform: function transform12(value) {
        return value != null ? {
          "--chakra-space-y": value
        } : null;
      }
    })
  },
  flex: true,
  flexFlow: true,
  flexGrow: true,
  flexShrink: true,
  flexBasis: t2.sizes("flexBasis"),
  justifySelf: true,
  alignSelf: true,
  order: true,
  placeItems: true,
  placeContent: true,
  placeSelf: true,
  gap: t2.space("gap"),
  rowGap: t2.space("rowGap"),
  columnGap: t2.space("columnGap")
};
Object.assign(flexbox2, {
  flexDir: flexbox2.flexDirection
});
var grid2 = {
  gridGap: t2.space("gridGap"),
  gridColumnGap: t2.space("gridColumnGap"),
  gridRowGap: t2.space("gridRowGap"),
  gridColumn: true,
  gridRow: true,
  gridAutoFlow: true,
  gridAutoColumns: true,
  gridColumnStart: true,
  gridColumnEnd: true,
  gridRowStart: true,
  gridRowEnd: true,
  gridAutoRows: true,
  gridTemplate: true,
  gridTemplateColumns: true,
  gridTemplateRows: true,
  gridTemplateAreas: true,
  gridArea: true
};
var interactivity2 = {
  appearance: true,
  cursor: true,
  resize: true,
  userSelect: true,
  pointerEvents: true,
  outline: {
    transform: transformFunctions2.outline
  },
  outlineOffset: true,
  outlineColor: t2.colors("outlineColor")
};
var layout2 = {
  width: t2.sizesT("width"),
  inlineSize: t2.sizesT("inlineSize"),
  height: t2.sizes("height"),
  blockSize: t2.sizes("blockSize"),
  boxSize: t2.sizes(["width", "height"]),
  minWidth: t2.sizes("minWidth"),
  minInlineSize: t2.sizes("minInlineSize"),
  minHeight: t2.sizes("minHeight"),
  minBlockSize: t2.sizes("minBlockSize"),
  maxWidth: t2.sizes("maxWidth"),
  maxInlineSize: t2.sizes("maxInlineSize"),
  maxHeight: t2.sizes("maxHeight"),
  maxBlockSize: t2.sizes("maxBlockSize"),
  overflow: true,
  overflowX: true,
  overflowY: true,
  overscrollBehavior: true,
  overscrollBehaviorX: true,
  overscrollBehaviorY: true,
  display: true,
  verticalAlign: true,
  boxSizing: true,
  boxDecorationBreak: true,
  "float": t2.propT("float", transformFunctions2["float"]),
  objectFit: true,
  objectPosition: true,
  visibility: true,
  isolation: true
};
Object.assign(layout2, {
  w: layout2.width,
  h: layout2.height,
  minW: layout2.minWidth,
  maxW: layout2.maxWidth,
  minH: layout2.minHeight,
  maxH: layout2.maxHeight,
  overscroll: layout2.overscrollBehavior,
  overscrollX: layout2.overscrollBehaviorX,
  overscrollY: layout2.overscrollBehaviorY
});
var list2 = {
  listStyleType: true,
  listStylePosition: true,
  listStylePos: t2.prop("listStylePosition"),
  listStyleImage: true,
  listStyleImg: t2.prop("listStyleImage")
};
var srOnly2 = {
  border: "0px",
  clip: "rect(0, 0, 0, 0)",
  width: "1px",
  height: "1px",
  margin: "-1px",
  padding: "0px",
  overflow: "hidden",
  whiteSpace: "nowrap",
  position: "absolute"
};
var srFocusable2 = {
  position: "static",
  width: "auto",
  height: "auto",
  clip: "auto",
  padding: "0",
  margin: "0",
  overflow: "visible",
  whiteSpace: "normal"
};
var getWithPriority3 = function getWithPriority4(theme3, key, styles3) {
  var result = {};
  var obj = memoizedGet2(theme3, key, {});
  for (var prop3 in obj) {
    var isInStyles = prop3 in styles3 && styles3[prop3] != null;
    if (!isInStyles)
      result[prop3] = obj[prop3];
  }
  return result;
};
var others2 = {
  srOnly: {
    transform: function transform13(value) {
      if (value === true)
        return srOnly2;
      if (value === "focusable")
        return srFocusable2;
      return {};
    }
  },
  layerStyle: {
    processResult: true,
    transform: function transform14(value, theme3, styles3) {
      return getWithPriority3(theme3, "layerStyles." + value, styles3);
    }
  },
  textStyle: {
    processResult: true,
    transform: function transform15(value, theme3, styles3) {
      return getWithPriority3(theme3, "textStyles." + value, styles3);
    }
  },
  apply: {
    processResult: true,
    transform: function transform16(value, theme3, styles3) {
      return getWithPriority3(theme3, value, styles3);
    }
  }
};
var position3 = {
  position: true,
  pos: t2.prop("position"),
  zIndex: t2.prop("zIndex", "zIndices"),
  inset: t2.spaceT("inset"),
  insetX: t2.spaceT(["left", "right"]),
  insetInline: t2.spaceT("insetInline"),
  insetY: t2.spaceT(["top", "bottom"]),
  insetBlock: t2.spaceT("insetBlock"),
  top: t2.spaceT("top"),
  insetBlockStart: t2.spaceT("insetBlockStart"),
  bottom: t2.spaceT("bottom"),
  insetBlockEnd: t2.spaceT("insetBlockEnd"),
  left: t2.spaceT("left"),
  insetInlineStart: t2.logical({
    scale: "space",
    property: {
      ltr: "left",
      rtl: "right"
    }
  }),
  right: t2.spaceT("right"),
  insetInlineEnd: t2.logical({
    scale: "space",
    property: {
      ltr: "right",
      rtl: "left"
    }
  })
};
Object.assign(position3, {
  insetStart: position3.insetInlineStart,
  insetEnd: position3.insetInlineEnd
});
var ring4 = {
  ring: {
    transform: transformFunctions2.ring
  },
  ringColor: t2.colors("--chakra-ring-color"),
  ringOffset: t2.prop("--chakra-ring-offset-width"),
  ringOffsetColor: t2.colors("--chakra-ring-offset-color"),
  ringInset: t2.prop("--chakra-ring-inset")
};
var space2 = {
  margin: t2.spaceT("margin"),
  marginTop: t2.spaceT("marginTop"),
  marginBlockStart: t2.spaceT("marginBlockStart"),
  marginRight: t2.spaceT("marginRight"),
  marginInlineEnd: t2.spaceT("marginInlineEnd"),
  marginBottom: t2.spaceT("marginBottom"),
  marginBlockEnd: t2.spaceT("marginBlockEnd"),
  marginLeft: t2.spaceT("marginLeft"),
  marginInlineStart: t2.spaceT("marginInlineStart"),
  marginX: t2.spaceT(["marginInlineStart", "marginInlineEnd"]),
  marginInline: t2.spaceT("marginInline"),
  marginY: t2.spaceT(["marginTop", "marginBottom"]),
  marginBlock: t2.spaceT("marginBlock"),
  padding: t2.space("padding"),
  paddingTop: t2.space("paddingTop"),
  paddingBlockStart: t2.space("paddingBlockStart"),
  paddingRight: t2.space("paddingRight"),
  paddingBottom: t2.space("paddingBottom"),
  paddingBlockEnd: t2.space("paddingBlockEnd"),
  paddingLeft: t2.space("paddingLeft"),
  paddingInlineStart: t2.space("paddingInlineStart"),
  paddingInlineEnd: t2.space("paddingInlineEnd"),
  paddingX: t2.space(["paddingInlineStart", "paddingInlineEnd"]),
  paddingInline: t2.space("paddingInline"),
  paddingY: t2.space(["paddingTop", "paddingBottom"]),
  paddingBlock: t2.space("paddingBlock")
};
Object.assign(space2, {
  m: space2.margin,
  mt: space2.marginTop,
  mr: space2.marginRight,
  me: space2.marginInlineEnd,
  marginEnd: space2.marginInlineEnd,
  mb: space2.marginBottom,
  ml: space2.marginLeft,
  ms: space2.marginInlineStart,
  marginStart: space2.marginInlineStart,
  mx: space2.marginX,
  my: space2.marginY,
  p: space2.padding,
  pt: space2.paddingTop,
  py: space2.paddingY,
  px: space2.paddingX,
  pb: space2.paddingBottom,
  pl: space2.paddingLeft,
  ps: space2.paddingInlineStart,
  paddingStart: space2.paddingInlineStart,
  pr: space2.paddingRight,
  pe: space2.paddingInlineEnd,
  paddingEnd: space2.paddingInlineEnd
});
var textDecoration2 = {
  textDecorationColor: t2.colors("textDecorationColor"),
  textDecoration: true,
  textDecor: {
    property: "textDecoration"
  },
  textDecorationLine: true,
  textDecorationStyle: true,
  textDecorationThickness: true,
  textUnderlineOffset: true,
  textShadow: t2.shadows("textShadow")
};
var transform17 = {
  clipPath: true,
  transform: t2.propT("transform", transformFunctions2.transform),
  transformOrigin: true,
  translateX: t2.spaceT("--chakra-translate-x"),
  translateY: t2.spaceT("--chakra-translate-y"),
  skewX: t2.degreeT("--chakra-skew-x"),
  skewY: t2.degreeT("--chakra-skew-y"),
  scaleX: t2.prop("--chakra-scale-x"),
  scaleY: t2.prop("--chakra-scale-y"),
  scale: t2.prop(["--chakra-scale-x", "--chakra-scale-y"]),
  rotate: t2.degreeT("--chakra-rotate")
};
var transition2 = {
  transition: true,
  transitionDelay: true,
  animation: true,
  willChange: true,
  transitionDuration: t2.prop("transitionDuration", "transition.duration"),
  transitionProperty: t2.prop("transitionProperty", "transition.property"),
  transitionTimingFunction: t2.prop("transitionTimingFunction", "transition.easing")
};
var typography3 = {
  fontFamily: t2.prop("fontFamily", "fonts"),
  fontSize: t2.prop("fontSize", "fontSizes", transformFunctions2.px),
  fontWeight: t2.prop("fontWeight", "fontWeights"),
  lineHeight: t2.prop("lineHeight", "lineHeights"),
  letterSpacing: t2.prop("letterSpacing", "letterSpacings"),
  textAlign: true,
  fontStyle: true,
  wordBreak: true,
  overflowWrap: true,
  textOverflow: true,
  textTransform: true,
  whiteSpace: true,
  noOfLines: {
    "static": {
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitBoxOrient: "vertical",
      WebkitLineClamp: "var(--chakra-line-clamp)"
    },
    property: "--chakra-line-clamp"
  }
};
var scroll2 = {
  scrollBehavior: true,
  scrollSnapAlign: true,
  scrollSnapStop: true,
  scrollSnapType: true,
  scrollMargin: t2.spaceT("scrollMargin"),
  scrollMarginTop: t2.spaceT("scrollMarginTop"),
  scrollMarginBottom: t2.spaceT("scrollMarginBottom"),
  scrollMarginLeft: t2.spaceT("scrollMarginLeft"),
  scrollMarginRight: t2.spaceT("scrollMarginRight"),
  scrollMarginX: t2.spaceT(["scrollMarginLeft", "scrollMarginRight"]),
  scrollMarginY: t2.spaceT(["scrollMarginTop", "scrollMarginBottom"]),
  scrollPadding: t2.spaceT("scrollPadding"),
  scrollPaddingTop: t2.spaceT("scrollPaddingTop"),
  scrollPaddingBottom: t2.spaceT("scrollPaddingBottom"),
  scrollPaddingLeft: t2.spaceT("scrollPaddingLeft"),
  scrollPaddingRight: t2.spaceT("scrollPaddingRight"),
  scrollPaddingX: t2.spaceT(["scrollPaddingLeft", "scrollPaddingRight"]),
  scrollPaddingY: t2.spaceT(["scrollPaddingTop", "scrollPaddingBottom"])
};
function resolveReference2(operand) {
  if (isObject2(operand) && operand.reference) {
    return operand.reference;
  }
  return String(operand);
}
var toExpression3 = function toExpression4(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }
  return operands.map(resolveReference2).join(" " + operator + " ").replace(/calc/g, "");
};
var _add3 = function add4() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }
  return "calc(" + toExpression3.apply(void 0, ["+"].concat(operands)) + ")";
};
var _subtract3 = function subtract5() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }
  return "calc(" + toExpression3.apply(void 0, ["-"].concat(operands)) + ")";
};
var _multiply3 = function multiply3() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }
  return "calc(" + toExpression3.apply(void 0, ["*"].concat(operands)) + ")";
};
var _divide3 = function divide3() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }
  return "calc(" + toExpression3.apply(void 0, ["/"].concat(operands)) + ")";
};
var _negate3 = function negate3(x) {
  var value = resolveReference2(x);
  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }
  return _multiply3(value, -1);
};
var calc3 = Object.assign(function(x) {
  return {
    add: function add6() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }
      return calc3(_add3.apply(void 0, [x].concat(operands)));
    },
    subtract: function subtract7() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }
      return calc3(_subtract3.apply(void 0, [x].concat(operands)));
    },
    multiply: function multiply5() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }
      return calc3(_multiply3.apply(void 0, [x].concat(operands)));
    },
    divide: function divide5() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }
      return calc3(_divide3.apply(void 0, [x].concat(operands)));
    },
    negate: function negate5() {
      return calc3(_negate3(x));
    },
    toString: function toString() {
      return x.toString();
    }
  };
}, {
  add: _add3,
  subtract: _subtract3,
  multiply: _multiply3,
  divide: _divide3,
  negate: _negate3
});
function replaceWhiteSpace3(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }
  return value.replace(/\s+/g, replaceValue);
}
function escape3(value) {
  var valueStr = replaceWhiteSpace3(value.toString());
  if (valueStr.includes("\\."))
    return value;
  var isDecimal3 = !Number.isInteger(parseFloat(value.toString()));
  return isDecimal3 ? valueStr.replace(".", "\\.") : value;
}
function addPrefix3(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return [prefix3, escape3(value)].filter(Boolean).join("-");
}
function toVarReference2(name, fallback) {
  return "var(" + escape3(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVarDefinition2(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return "--" + addPrefix3(value, prefix3);
}
function cssVar3(name, fallback, cssVarPrefix) {
  var cssVariable = toVarDefinition2(name, cssVarPrefix);
  return {
    variable: cssVariable,
    reference: toVarReference2(cssVariable, fallback)
  };
}
var state2 = {
  hover: function hover2(str, post) {
    return str + ":hover " + post + ", " + str + "[data-hover] " + post;
  },
  focus: function focus4(str, post) {
    return str + ":focus " + post + ", " + str + "[data-focus] " + post;
  },
  focusVisible: function focusVisible2(str, post) {
    return str + ":focus-visible " + post;
  },
  focusWithin: function focusWithin2(str, post) {
    return str + ":focus-within " + post;
  },
  active: function active2(str, post) {
    return str + ":active " + post + ", " + str + "[data-active] " + post;
  },
  disabled: function disabled2(str, post) {
    return str + ":disabled " + post + ", " + str + "[data-disabled] " + post;
  },
  invalid: function invalid2(str, post) {
    return str + ":invalid " + post + ", " + str + "[data-invalid] " + post;
  },
  checked: function checked2(str, post) {
    return str + ":checked " + post + ", " + str + "[data-checked] " + post;
  },
  indeterminate: function indeterminate2(str, post) {
    return str + ":indeterminate " + post + ", " + str + "[aria-checked=mixed] " + post + ", " + str + "[data-indeterminate] " + post;
  },
  readOnly: function readOnly2(str, post) {
    return str + ":read-only " + post + ", " + str + "[readonly] " + post + ", " + str + "[data-read-only] " + post;
  },
  expanded: function expanded2(str, post) {
    return str + ":read-only " + post + ", " + str + "[aria-expanded=true] " + post + ", " + str + "[data-expanded] " + post;
  },
  placeholderShown: function placeholderShown2(str, post) {
    return str + ":placeholder-shown " + post;
  }
};
var toGroup3 = function toGroup4(fn6) {
  return merge4(function(v) {
    return fn6(v, "&");
  }, "[role=group]", "[data-group]", ".group");
};
var toPeer3 = function toPeer4(fn6) {
  return merge4(function(v) {
    return fn6(v, "~ &");
  }, "[data-peer]", ".peer");
};
var merge4 = function merge5(fn6) {
  for (var _len = arguments.length, selectors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    selectors[_key - 1] = arguments[_key];
  }
  return selectors.map(fn6).join(", ");
};
var pseudoSelectors2 = {
  _hover: "&:hover, &[data-hover]",
  _active: "&:active, &[data-active]",
  _focus: "&:focus, &[data-focus]",
  _highlighted: "&[data-highlighted]",
  _focusWithin: "&:focus-within",
  _focusVisible: "&:focus-visible, &[data-focus-visible]",
  _disabled: "&[disabled], &[aria-disabled=true], &[data-disabled]",
  _readOnly: "&[aria-readonly=true], &[readonly], &[data-readonly]",
  _before: "&::before",
  _after: "&::after",
  _empty: "&:empty",
  _expanded: "&[aria-expanded=true], &[data-expanded]",
  _checked: "&[aria-checked=true], &[data-checked]",
  _grabbed: "&[aria-grabbed=true], &[data-grabbed]",
  _pressed: "&[aria-pressed=true], &[data-pressed]",
  _invalid: "&[aria-invalid=true], &[data-invalid]",
  _valid: "&[data-valid], &[data-state=valid]",
  _loading: "&[data-loading], &[aria-busy=true]",
  _selected: "&[aria-selected=true], &[data-selected]",
  _hidden: "&[hidden], &[data-hidden]",
  _autofill: "&:-webkit-autofill",
  _even: "&:nth-of-type(even)",
  _odd: "&:nth-of-type(odd)",
  _first: "&:first-of-type",
  _last: "&:last-of-type",
  _notFirst: "&:not(:first-of-type)",
  _notLast: "&:not(:last-of-type)",
  _visited: "&:visited",
  _activeLink: "&[aria-current=page]",
  _activeStep: "&[aria-current=step]",
  _indeterminate: "&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",
  _groupHover: toGroup3(state2.hover),
  _peerHover: toPeer3(state2.hover),
  _groupFocus: toGroup3(state2.focus),
  _peerFocus: toPeer3(state2.focus),
  _groupFocusVisible: toGroup3(state2.focusVisible),
  _peerFocusVisible: toPeer3(state2.focusVisible),
  _groupActive: toGroup3(state2.active),
  _peerActive: toPeer3(state2.active),
  _groupDisabled: toGroup3(state2.disabled),
  _peerDisabled: toPeer3(state2.disabled),
  _groupInvalid: toGroup3(state2.invalid),
  _peerInvalid: toPeer3(state2.invalid),
  _groupChecked: toGroup3(state2.checked),
  _peerChecked: toPeer3(state2.checked),
  _groupFocusWithin: toGroup3(state2.focusWithin),
  _peerFocusWithin: toPeer3(state2.focusWithin),
  _peerPlaceholderShown: toPeer3(state2.placeholderShown),
  _placeholder: "&::placeholder",
  _placeholderShown: "&:placeholder-shown",
  _fullScreen: "&:fullscreen",
  _selection: "&::selection",
  _rtl: "[dir=rtl] &, &[dir=rtl]",
  _ltr: "[dir=ltr] &, &[dir=ltr]",
  _mediaDark: "@media (prefers-color-scheme: dark)",
  _mediaReduceMotion: "@media (prefers-reduced-motion: reduce)",
  _dark: ".chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]",
  _light: ".chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]"
};
var pseudoPropNames2 = objectKeys3(pseudoSelectors2);
function tokenToCssVar2(token2, prefix3) {
  return cssVar3(String(token2).replace(/\./g, "-"), void 0, prefix3);
}
function createThemeVars2(flatTokens, options) {
  var cssVars2 = {};
  var cssMap = {};
  var _loop = function _loop2() {
    var _Object$entries$_i = _Object$entries[_i], token2 = _Object$entries$_i[0], tokenValue = _Object$entries$_i[1];
    var isSemantic = tokenValue.isSemantic, value = tokenValue.value;
    var _tokenToCssVar = tokenToCssVar2(token2, options == null ? void 0 : options.cssVarPrefix), variable = _tokenToCssVar.variable, reference2 = _tokenToCssVar.reference;
    if (!isSemantic) {
      if (token2.startsWith("space")) {
        var keys4 = token2.split(".");
        var firstKey = keys4[0], referenceKeys = keys4.slice(1);
        var negativeLookupKey = firstKey + ".-" + referenceKeys.join(".");
        var negativeValue = calc3.negate(value);
        var negatedReference = calc3.negate(reference2);
        cssMap[negativeLookupKey] = {
          value: negativeValue,
          "var": variable,
          varRef: negatedReference
        };
      }
      cssVars2[variable] = value;
      cssMap[token2] = {
        value,
        "var": variable,
        varRef: reference2
      };
      return "continue";
    }
    var lookupToken = function lookupToken2(maybeToken) {
      var scale3 = String(token2).split(".")[0];
      var withScale = [scale3, maybeToken].join(".");
      var resolvedTokenValue = flatTokens[withScale];
      if (!resolvedTokenValue)
        return maybeToken;
      var _tokenToCssVar2 = tokenToCssVar2(withScale, options == null ? void 0 : options.cssVarPrefix), reference3 = _tokenToCssVar2.reference;
      return reference3;
    };
    var normalizedValue = isObject2(value) ? value : {
      "default": value
    };
    cssVars2 = (0, import_lodash2.default)(cssVars2, Object.entries(normalizedValue).reduce(function(acc, _ref2) {
      var _conditionAlias, _acc$conditionSelecto;
      var conditionAlias = _ref2[0], conditionValue = _ref2[1];
      var maybeReference = lookupToken(conditionValue);
      if (conditionAlias === "default") {
        acc[variable] = maybeReference;
        return acc;
      }
      var conditionSelector = (_conditionAlias = pseudoSelectors2 == null ? void 0 : pseudoSelectors2[conditionAlias]) != null ? _conditionAlias : conditionAlias;
      acc[conditionSelector] = (_acc$conditionSelecto = {}, _acc$conditionSelecto[variable] = maybeReference, _acc$conditionSelecto);
      return acc;
    }, {}));
    cssMap[token2] = {
      value: reference2,
      "var": variable,
      varRef: reference2
    };
  };
  for (var _i = 0, _Object$entries = Object.entries(flatTokens); _i < _Object$entries.length; _i++) {
    var _ret = _loop();
    if (_ret === "continue")
      continue;
  }
  return {
    cssVars: cssVars2,
    cssMap
  };
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded5 = ["__cssMap", "__cssVars", "__breakpoints"];
var tokens2 = ["colors", "borders", "borderWidths", "borderStyles", "fonts", "fontSizes", "fontWeights", "letterSpacings", "lineHeights", "radii", "space", "shadows", "sizes", "zIndices", "transition", "blur"];
function extractTokens2(theme3) {
  var _tokens = tokens2;
  return pick2(theme3, _tokens);
}
function extractSemanticTokens2(theme3) {
  return theme3.semanticTokens;
}
function omitVars2(rawTheme) {
  rawTheme.__cssMap;
  rawTheme.__cssVars;
  rawTheme.__breakpoints;
  var cleanTheme = _objectWithoutPropertiesLoose6(rawTheme, _excluded5);
  return cleanTheme;
}
function flattenTokens2(_ref2) {
  var _flatten, _flatten2;
  var tokens3 = _ref2.tokens, semanticTokens2 = _ref2.semanticTokens;
  var tokenEntries = Object.entries((_flatten = flatten2(tokens3)) != null ? _flatten : {}).map(function(_ref22) {
    var token2 = _ref22[0], value = _ref22[1];
    var enhancedToken = {
      isSemantic: false,
      value
    };
    return [token2, enhancedToken];
  });
  var semanticTokenEntries = Object.entries((_flatten2 = flatten2(semanticTokens2, 1)) != null ? _flatten2 : {}).map(function(_ref3) {
    var token2 = _ref3[0], value = _ref3[1];
    var enhancedToken = {
      isSemantic: true,
      value
    };
    return [token2, enhancedToken];
  });
  return fromEntries3([].concat(tokenEntries, semanticTokenEntries));
}
function toCSSVar2(rawTheme) {
  var _theme$config;
  var theme3 = omitVars2(rawTheme);
  var tokens3 = extractTokens2(theme3);
  var semanticTokens2 = extractSemanticTokens2(theme3);
  var flatTokens = flattenTokens2({
    tokens: tokens3,
    semanticTokens: semanticTokens2
  });
  var cssVarPrefix = (_theme$config = theme3.config) == null ? void 0 : _theme$config.cssVarPrefix;
  var _createThemeVars = createThemeVars2(flatTokens, {
    cssVarPrefix
  }), cssMap = _createThemeVars.cssMap, cssVars2 = _createThemeVars.cssVars;
  var defaultCssVars = {
    "--chakra-ring-inset": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-ring-offset-width": "0px",
    "--chakra-ring-offset-color": "#fff",
    "--chakra-ring-color": "rgba(66, 153, 225, 0.6)",
    "--chakra-ring-offset-shadow": "0 0 #0000",
    "--chakra-ring-shadow": "0 0 #0000",
    "--chakra-space-x-reverse": "0",
    "--chakra-space-y-reverse": "0"
  };
  Object.assign(theme3, {
    __cssVars: _extends12({}, defaultCssVars, cssVars2),
    __cssMap: cssMap,
    __breakpoints: analyzeBreakpoints2(theme3.breakpoints)
  });
  return theme3;
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _createForOfIteratorHelperLoose3(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var systemProps2 = (0, import_lodash2.default)({}, background2, border2, color2, flexbox2, layout2, filter4, ring4, interactivity2, grid2, others2, position3, effect2, space2, scroll2, typography3, textDecoration2, transform17, list2, transition2);
var layoutSystem2 = Object.assign({}, space2, layout2, flexbox2, grid2, position3);
var layoutPropNames2 = objectKeys3(layoutSystem2);
var propNames2 = [].concat(objectKeys3(systemProps2), pseudoPropNames2);
var styleProps2 = _extends12({}, systemProps2, pseudoSelectors2);
var isStyleProp3 = function isStyleProp4(prop3) {
  return prop3 in styleProps2;
};
var expandResponsive3 = function expandResponsive4(styles3) {
  return function(theme3) {
    if (!theme3.__breakpoints)
      return styles3;
    var _theme$__breakpoints = theme3.__breakpoints, isResponsive = _theme$__breakpoints.isResponsive, toArrayValue = _theme$__breakpoints.toArrayValue, medias = _theme$__breakpoints.media;
    var computedStyles = {};
    for (var key in styles3) {
      var value = runIfFn2(styles3[key], theme3);
      if (value == null)
        continue;
      value = isObject2(value) && isResponsive(value) ? toArrayValue(value) : value;
      if (!Array.isArray(value)) {
        computedStyles[key] = value;
        continue;
      }
      var queries2 = value.slice(0, medias.length).length;
      for (var index2 = 0; index2 < queries2; index2 += 1) {
        var media = medias == null ? void 0 : medias[index2];
        if (!media) {
          computedStyles[key] = value[index2];
          continue;
        }
        computedStyles[media] = computedStyles[media] || {};
        if (value[index2] == null) {
          continue;
        }
        computedStyles[media][key] = value[index2];
      }
    }
    return computedStyles;
  };
};
var isCSSVariableTokenValue3 = function isCSSVariableTokenValue4(key, value) {
  return key.startsWith("--") && isString2(value) && !isCssVar2(value);
};
var resolveTokenValue3 = function resolveTokenValue4(theme3, value) {
  var _ref2, _getVar2;
  if (value == null)
    return value;
  var getVar = function getVar2(val) {
    var _theme$__cssMap, _theme$__cssMap$val;
    return (_theme$__cssMap = theme3.__cssMap) == null ? void 0 : (_theme$__cssMap$val = _theme$__cssMap[val]) == null ? void 0 : _theme$__cssMap$val.varRef;
  };
  var getValue2 = function getValue3(val) {
    var _getVar;
    return (_getVar = getVar(val)) != null ? _getVar : val;
  };
  var valueSplit = value.split(",").map(function(v) {
    return v.trim();
  });
  var tokenValue = valueSplit[0], fallbackValue = valueSplit[1];
  value = (_ref2 = (_getVar2 = getVar(tokenValue)) != null ? _getVar2 : getValue2(fallbackValue)) != null ? _ref2 : getValue2(value);
  return value;
};
function getCss2(options) {
  var _options$configs = options.configs, configs = _options$configs === void 0 ? {} : _options$configs, _options$pseudos = options.pseudos, pseudos = _options$pseudos === void 0 ? {} : _options$pseudos, theme3 = options.theme;
  var css6 = function css7(stylesOrFn, nested) {
    if (nested === void 0) {
      nested = false;
    }
    var _styles = runIfFn2(stylesOrFn, theme3);
    var styles3 = expandResponsive3(_styles)(theme3);
    var computedStyles = {};
    for (var key in styles3) {
      var _config$transform, _config, _config2, _config3, _config4;
      var valueOrFn = styles3[key];
      var value = runIfFn2(valueOrFn, theme3);
      if (key in pseudos) {
        key = pseudos[key];
      }
      if (isCSSVariableTokenValue3(key, value)) {
        value = resolveTokenValue3(theme3, value);
      }
      var config3 = configs[key];
      if (config3 === true) {
        config3 = {
          property: key
        };
      }
      if (isObject2(value)) {
        var _computedStyles$key;
        computedStyles[key] = (_computedStyles$key = computedStyles[key]) != null ? _computedStyles$key : {};
        computedStyles[key] = (0, import_lodash2.default)({}, computedStyles[key], css7(value, true));
        continue;
      }
      var rawValue = (_config$transform = (_config = config3) == null ? void 0 : _config.transform == null ? void 0 : _config.transform(value, theme3, _styles)) != null ? _config$transform : value;
      rawValue = (_config2 = config3) != null && _config2.processResult ? css7(rawValue, true) : rawValue;
      var configProperty = runIfFn2((_config3 = config3) == null ? void 0 : _config3.property, theme3);
      if (!nested && (_config4 = config3) != null && _config4["static"]) {
        var staticStyles = runIfFn2(config3["static"], theme3);
        computedStyles = (0, import_lodash2.default)({}, computedStyles, staticStyles);
      }
      if (configProperty && Array.isArray(configProperty)) {
        for (var _iterator = _createForOfIteratorHelperLoose3(configProperty), _step; !(_step = _iterator()).done; ) {
          var property = _step.value;
          computedStyles[property] = rawValue;
        }
        continue;
      }
      if (configProperty) {
        if (configProperty === "&" && isObject2(rawValue)) {
          computedStyles = (0, import_lodash2.default)({}, computedStyles, rawValue);
        } else {
          computedStyles[configProperty] = rawValue;
        }
        continue;
      }
      if (isObject2(rawValue)) {
        computedStyles = (0, import_lodash2.default)({}, computedStyles, rawValue);
        continue;
      }
      computedStyles[key] = rawValue;
    }
    return computedStyles;
  };
  return css6;
}
var css4 = function css5(styles3) {
  return function(theme3) {
    var cssFn = getCss2({
      theme: theme3,
      pseudos: pseudoSelectors2,
      configs: systemProps2
    });
    return cssFn(styles3);
  };
};
function normalize4(value, toArray4) {
  if (isArray2(value))
    return value;
  if (isObject2(value))
    return toArray4(value);
  if (value != null)
    return [value];
}
function getNextIndex(values, i) {
  for (var j = i + 1; j < values.length; j++) {
    if (values[j] != null)
      return j;
  }
  return -1;
}
function createResolver(theme3) {
  var breakpointUtil = theme3.__breakpoints;
  return function resolver(config3, prop3, value, props) {
    if (!breakpointUtil)
      return;
    var result = {};
    var normalized = normalize4(value, breakpointUtil.toArrayValue);
    if (!normalized)
      return result;
    var len = normalized.length;
    var isSingle = len === 1;
    var isMultipart = !!config3.parts;
    var _loop = function _loop2(i2) {
      var _config$prop;
      var key = breakpointUtil.details[i2];
      var nextKey = breakpointUtil.details[getNextIndex(normalized, i2)];
      var query = toMediaQueryString(key.minW, nextKey == null ? void 0 : nextKey._minW);
      var styles3 = runIfFn2((_config$prop = config3[prop3]) == null ? void 0 : _config$prop[normalized[i2]], props);
      if (!styles3)
        return "continue";
      if (isMultipart) {
        var _config$parts;
        (_config$parts = config3.parts) == null ? void 0 : _config$parts.forEach(function(part) {
          var _ref2, _mergeWith;
          (0, import_lodash2.default)(result, (_mergeWith = {}, _mergeWith[part] = isSingle ? styles3[part] : (_ref2 = {}, _ref2[query] = styles3[part], _ref2), _mergeWith));
        });
        return "continue";
      }
      if (!isMultipart) {
        if (isSingle)
          (0, import_lodash2.default)(result, styles3);
        else
          result[query] = styles3;
        return "continue";
      }
      result[query] = styles3;
    };
    for (var i = 0; i < len; i++) {
      var _ret = _loop(i);
      if (_ret === "continue")
        continue;
    }
    return result;
  };
}
function resolveStyleConfig(config3) {
  return function(props) {
    var _config$baseStyle;
    var variant = props.variant, size3 = props.size, theme3 = props.theme;
    var recipe = createResolver(theme3);
    return (0, import_lodash2.default)({}, runIfFn2((_config$baseStyle = config3.baseStyle) != null ? _config$baseStyle : {}, props), recipe(config3, "sizes", size3, props), recipe(config3, "variants", variant, props));
  };
}

// node_modules/.pnpm/@chakra-ui+system@2.1.3_dmuq4jdcsab5rfevz4weuyu33i/node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js
var React17 = __toESM(require_react());
var import_react18 = __toESM(require_react());
var import_react_fast_compare2 = __toESM(require_react_fast_compare());

// node_modules/.pnpm/@chakra-ui+react-utils@2.0.1_react@16.14.0/node_modules/@chakra-ui/react-utils/dist/chakra-ui-react-utils.esm.js
var React16 = __toESM(require_react());
function createContext9(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$strict = _options.strict, strict = _options$strict === void 0 ? true : _options$strict, _options$errorMessage = _options.errorMessage, errorMessage = _options$errorMessage === void 0 ? "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider" : _options$errorMessage, name = _options.name;
  var Context = React16.createContext(void 0);
  Context.displayName = name;
  function useContext31() {
    var context = React16.useContext(Context);
    if (!context && strict) {
      var error3 = new Error(errorMessage);
      error3.name = "ContextError";
      Error.captureStackTrace == null ? void 0 : Error.captureStackTrace(error3, useContext31);
      throw error3;
    }
    return context;
  }
  return [Context.Provider, useContext31, Context];
}

// node_modules/.pnpm/@chakra-ui+system@2.1.3_dmuq4jdcsab5rfevz4weuyu33i/node_modules/@chakra-ui/system/dist/chakra-ui-system.esm.js
function _extends13() {
  _extends13 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends13.apply(this, arguments);
}
var ThemeProvider5 = function ThemeProvider6(props) {
  var cssVarsRoot = props.cssVarsRoot, theme3 = props.theme, children = props.children;
  var computedTheme = React17.useMemo(function() {
    return toCSSVar2(theme3);
  }, [theme3]);
  return React17.createElement(ThemeProvider, {
    theme: computedTheme
  }, React17.createElement(CSSVars3, {
    root: cssVarsRoot
  }), children);
};
var CSSVars3 = function CSSVars4(_ref2) {
  var _ref$root = _ref2.root, root2 = _ref$root === void 0 ? ":host, :root" : _ref$root;
  var selector2 = [root2, "[data-theme]"].join(",");
  return React17.createElement(Global, {
    styles: function styles3(theme3) {
      var _ref22;
      return _ref22 = {}, _ref22[selector2] = theme3.__cssVars, _ref22;
    }
  });
};
function useTheme3() {
  var theme3 = React17.useContext(ThemeContext);
  if (!theme3) {
    throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");
  }
  return theme3;
}
var _createContext3 = createContext9({
  name: "StylesContext",
  errorMessage: "useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "
});
var StylesProvider2 = _createContext3[0];
var useStyles2 = _createContext3[1];
var createStylesContext = function createStylesContext2(componentName) {
  return createContext9({
    name: componentName + "StylesContext",
    errorMessage: 'useStyles: "styles" is undefined. Seems you forgot to wrap the components in "<' + componentName + ' />" '
  });
};
var GlobalStyle3 = function GlobalStyle4() {
  var _useColorMode = useColorMode3(), colorMode = _useColorMode.colorMode;
  return React17.createElement(Global, {
    styles: function styles3(theme3) {
      var styleObjectOrFn = memoizedGet2(theme3, "styles.global");
      var globalStyles = runIfFn2(styleObjectOrFn, {
        theme: theme3,
        colorMode
      });
      if (!globalStyles)
        return void 0;
      var styles4 = css4(globalStyles)(theme3);
      return styles4;
    }
  });
};
function omitThemingProps2(props) {
  return omit2(props, ["styleConfig", "size", "variant", "colorScheme"]);
}
function useChakra2() {
  var colorModeResult = useColorMode3();
  var theme3 = useTheme3();
  return _extends13({}, colorModeResult, {
    theme: theme3
  });
}
var resolveBreakpointValue = function resolveBreakpointValue2(theme3, tokenValue, fallbackValue) {
  var _ref2, _getValue;
  if (tokenValue === null)
    return tokenValue;
  var getValue2 = function getValue3(val) {
    var _theme$__breakpoints, _theme$__breakpoints$;
    return (_theme$__breakpoints = theme3.__breakpoints) == null ? void 0 : (_theme$__breakpoints$ = _theme$__breakpoints.asArray) == null ? void 0 : _theme$__breakpoints$[val];
  };
  return (_ref2 = (_getValue = getValue2(tokenValue)) != null ? _getValue : getValue2(fallbackValue)) != null ? _ref2 : fallbackValue;
};
var resolveTokenValue5 = function resolveTokenValue6(theme3, tokenValue, fallbackValue) {
  var _ref2, _getValue2;
  if (tokenValue == null)
    return tokenValue;
  var getValue2 = function getValue3(val) {
    var _theme$__cssMap, _theme$__cssMap$val;
    return (_theme$__cssMap = theme3.__cssMap) == null ? void 0 : (_theme$__cssMap$val = _theme$__cssMap[val]) == null ? void 0 : _theme$__cssMap$val.value;
  };
  return (_ref2 = (_getValue2 = getValue2(tokenValue)) != null ? _getValue2 : getValue2(fallbackValue)) != null ? _ref2 : fallbackValue;
};
function useToken(scale3, token2, fallback) {
  var theme3 = useTheme3();
  if (Array.isArray(token2)) {
    var fallbackArr = [];
    if (fallback) {
      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];
    }
    return token2.map(function(token3, index2) {
      var _fallbackArr$index2;
      if (scale3 === "breakpoints") {
        var _fallbackArr$index;
        return resolveBreakpointValue(theme3, token3, (_fallbackArr$index = fallbackArr[index2]) != null ? _fallbackArr$index : token3);
      }
      var path2 = scale3 + "." + token3;
      return resolveTokenValue5(theme3, path2, (_fallbackArr$index2 = fallbackArr[index2]) != null ? _fallbackArr$index2 : token3);
    });
  }
  if (scale3 === "breakpoints") {
    return resolveBreakpointValue(theme3, token2, fallback);
  }
  var path = scale3 + "." + token2;
  return resolveTokenValue5(theme3, path, fallback);
}
function useProps(themeKey, props) {
  var _theme$components, _styleConfig$defaultP;
  var _useChakra = useChakra2(), theme3 = _useChakra.theme, colorMode = _useChakra.colorMode;
  var styleConfig = props.styleConfig || ((_theme$components = theme3.components) == null ? void 0 : _theme$components[themeKey]);
  var defaultProps3 = (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {};
  var propsWithDefault = _extends13({}, defaultProps3, filterUndefined3(props));
  var stylesRef = (0, import_react18.useRef)({});
  var mergedProps = (0, import_lodash2.default)({}, propsWithDefault, {
    theme: theme3,
    colorMode
  });
  var memoizedStyles = (0, import_react18.useMemo)(function() {
    if (styleConfig) {
      var _styleConfig$baseStyl, _styleConfig$variants, _styleConfig$variants2, _styleConfig$sizes, _styleConfig$sizes2;
      var baseStyles = runIfFn2((_styleConfig$baseStyl = styleConfig.baseStyle) != null ? _styleConfig$baseStyl : {}, mergedProps);
      var variants4 = runIfFn2((_styleConfig$variants = (_styleConfig$variants2 = styleConfig.variants) == null ? void 0 : _styleConfig$variants2[mergedProps.variant]) != null ? _styleConfig$variants : {}, mergedProps);
      var sizes5 = runIfFn2((_styleConfig$sizes = (_styleConfig$sizes2 = styleConfig.sizes) == null ? void 0 : _styleConfig$sizes2[mergedProps.size]) != null ? _styleConfig$sizes : {}, mergedProps);
      var styles3 = (0, import_lodash2.default)(baseStyles, sizes5, variants4);
      if (styleConfig.parts) {
        styleConfig.parts.forEach(function(part) {
          var _styles$part;
          styles3[part] = (_styles$part = styles3[part]) != null ? _styles$part : {};
        });
      }
      var isStyleEqual = (0, import_react_fast_compare2.default)(stylesRef.current, styles3);
      if (!isStyleEqual) {
        stylesRef.current = styles3;
      }
    }
    return stylesRef.current;
  }, [styleConfig, mergedProps]);
  return {
    styles: memoizedStyles,
    props: omitThemingProps2(propsWithDefault)
  };
}
function _objectWithoutPropertiesLoose7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var allPropNames2 = new Set([].concat(propNames2, ["textStyle", "layerStyle", "apply", "noOfLines", "focusBorderColor", "errorBorderColor", "as", "__css", "css", "sx"]));
var validHTMLProps2 = /* @__PURE__ */ new Set(["htmlWidth", "htmlHeight", "htmlSize"]);
var shouldForwardProp3 = function shouldForwardProp4(prop3) {
  return validHTMLProps2.has(prop3) || !allPropNames2.has(prop3);
};
var _excluded$12 = ["theme", "css", "__css", "sx"];
var _excluded23 = ["baseStyle"];
var toCSSObject3 = function toCSSObject4(_ref2) {
  var baseStyle44 = _ref2.baseStyle;
  return function(props) {
    props.theme;
    var cssProp = props.css, __css = props.__css, sx = props.sx, rest = _objectWithoutPropertiesLoose7(props, _excluded$12);
    var styleProps3 = objectFilter2(rest, function(_, prop3) {
      return isStyleProp3(prop3);
    });
    var finalBaseStyle = runIfFn2(baseStyle44, props);
    var finalStyles = Object.assign({}, __css, finalBaseStyle, filterUndefined3(styleProps3), sx);
    var computedCSS = css4(finalStyles)(props.theme);
    return cssProp ? [computedCSS, cssProp] : computedCSS;
  };
};
function styled2(component, options) {
  var _ref2 = options != null ? options : {}, baseStyle44 = _ref2.baseStyle, styledOptions = _objectWithoutPropertiesLoose7(_ref2, _excluded23);
  if (!styledOptions.shouldForwardProp) {
    styledOptions.shouldForwardProp = shouldForwardProp3;
  }
  var styleObject = toCSSObject3({
    baseStyle: baseStyle44
  });
  return emotion_styled_browser_esm_default(component, styledOptions)(styleObject);
}
function forwardRef5(component) {
  return React17.forwardRef(component);
}
var _excluded6 = ["styleConfig"];
function useStyleConfigImpl(themeKey, props) {
  var _styleConfig$defaultP;
  if (props === void 0) {
    props = {};
  }
  var _props = props, styleConfigProp = _props.styleConfig, rest = _objectWithoutPropertiesLoose7(_props, _excluded6);
  var _useChakra = useChakra2(), theme3 = _useChakra.theme, colorMode = _useChakra.colorMode;
  var themeStyleConfig = memoizedGet2(theme3, "components." + themeKey);
  var styleConfig = styleConfigProp || themeStyleConfig;
  var mergedProps = (0, import_lodash2.default)({
    theme: theme3,
    colorMode
  }, (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {}, filterUndefined3(omit2(rest, ["children"])));
  var stylesRef = (0, import_react18.useRef)({});
  if (styleConfig) {
    var getStyles3 = resolveStyleConfig(styleConfig);
    var styles3 = getStyles3(mergedProps);
    var isStyleEqual = (0, import_react_fast_compare2.default)(stylesRef.current, styles3);
    if (!isStyleEqual) {
      stylesRef.current = styles3;
    }
  }
  return stylesRef.current;
}
function useStyleConfig2(themeKey, props) {
  if (props === void 0) {
    props = {};
  }
  return useStyleConfigImpl(themeKey, props);
}
function useMultiStyleConfig(themeKey, props) {
  if (props === void 0) {
    props = {};
  }
  return useStyleConfigImpl(themeKey, props);
}
function factory2() {
  var cache = /* @__PURE__ */ new Map();
  return new Proxy(styled2, {
    apply: function apply(target, thisArg, argArray) {
      return styled2.apply(void 0, argArray);
    },
    get: function get5(_, element) {
      if (!cache.has(element)) {
        cache.set(element, styled2(element));
      }
      return cache.get(element);
    }
  });
}
var chakra2 = factory2();

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/components/dist/chakra-ui-theme-components.esm.js
var baseStyleContainer$4 = {
  borderTopWidth: "1px",
  borderColor: "inherit",
  _last: {
    borderBottomWidth: "1px"
  }
};
var baseStyleButton$1 = {
  transitionProperty: "common",
  transitionDuration: "normal",
  fontSize: "1rem",
  _focusVisible: {
    boxShadow: "outline"
  },
  _hover: {
    bg: "blackAlpha.50"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed"
  },
  px: 4,
  py: 2
};
var baseStylePanel = {
  pt: 2,
  px: 4,
  pb: 5
};
var baseStyleIcon$5 = {
  fontSize: "1.25em"
};
var baseStyle$D = {
  root: {},
  container: baseStyleContainer$4,
  button: baseStyleButton$1,
  panel: baseStylePanel,
  icon: baseStyleIcon$5
};
var Accordion = {
  parts: accordionAnatomy.keys,
  baseStyle: baseStyle$D
};
var baseStyle$C = {
  container: {
    px: 4,
    py: 3
  },
  title: {
    fontWeight: "bold",
    lineHeight: 6,
    marginEnd: 2
  },
  description: {
    lineHeight: 6
  },
  icon: {
    flexShrink: 0,
    marginEnd: 3,
    w: 5,
    h: 6
  },
  spinner: {
    flexShrink: 0,
    marginEnd: 3,
    w: 5,
    h: 5
  }
};
function getBg(props) {
  var theme3 = props.theme, c2 = props.colorScheme;
  var lightBg = getColor(theme3, c2 + ".100", c2);
  var darkBg = transparentize(c2 + ".200", 0.16)(theme3);
  return mode(lightBg, darkBg)(props);
}
var variantSubtle$1 = function variantSubtle(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      bg: getBg(props)
    },
    icon: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    },
    spinner: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantLeftAccent = function variantLeftAccent2(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      paddingStart: 3,
      borderStartWidth: "4px",
      borderStartColor: mode(c2 + ".500", c2 + ".200")(props),
      bg: getBg(props)
    },
    icon: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    },
    spinner: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantTopAccent = function variantTopAccent2(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      pt: 2,
      borderTopWidth: "4px",
      borderTopColor: mode(c2 + ".500", c2 + ".200")(props),
      bg: getBg(props)
    },
    icon: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    },
    spinner: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantSolid$3 = function variantSolid(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      bg: mode(c2 + ".500", c2 + ".200")(props),
      color: mode("white", "gray.900")(props)
    }
  };
};
var variants$b = {
  subtle: variantSubtle$1,
  "left-accent": variantLeftAccent,
  "top-accent": variantTopAccent,
  solid: variantSolid$3
};
var defaultProps$n = {
  variant: "subtle",
  colorScheme: "blue"
};
var Alert = {
  parts: alertAnatomy.keys,
  baseStyle: baseStyle$C,
  variants: variants$b,
  defaultProps: defaultProps$n
};
var baseStyleBadge = function baseStyleBadge2(props) {
  return {
    transform: "translate(25%, 25%)",
    borderRadius: "full",
    border: "0.2em solid",
    borderColor: mode("white", "gray.800")(props)
  };
};
var baseStyleExcessLabel = function baseStyleExcessLabel2(props) {
  return {
    bg: mode("gray.200", "whiteAlpha.400")(props)
  };
};
var baseStyleContainer$3 = function baseStyleContainer(props) {
  var name = props.name, theme3 = props.theme;
  var bg = name ? randomColor({
    string: name
  }) : "gray.400";
  var isBgDark = isDark(bg)(theme3);
  var color4 = "white";
  if (!isBgDark)
    color4 = "gray.800";
  var borderColor = mode("white", "gray.800")(props);
  return {
    bg,
    color: color4,
    borderColor,
    verticalAlign: "top"
  };
};
var baseStyle$B = function baseStyle(props) {
  return {
    badge: baseStyleBadge(props),
    excessLabel: baseStyleExcessLabel(props),
    container: baseStyleContainer$3(props)
  };
};
function getSize$3(size3) {
  var themeSize = size3 !== "100%" ? sizes[size3] : void 0;
  return {
    container: {
      width: size3,
      height: size3,
      fontSize: "calc(" + (themeSize != null ? themeSize : size3) + " / 2.5)"
    },
    excessLabel: {
      width: size3,
      height: size3
    },
    label: {
      fontSize: "calc(" + (themeSize != null ? themeSize : size3) + " / 2.5)",
      lineHeight: size3 !== "100%" ? themeSize != null ? themeSize : size3 : void 0
    }
  };
}
var sizes$k = {
  "2xs": getSize$3(4),
  xs: getSize$3(6),
  sm: getSize$3(8),
  md: getSize$3(12),
  lg: getSize$3(16),
  xl: getSize$3(24),
  "2xl": getSize$3(32),
  full: getSize$3("100%")
};
var defaultProps$m = {
  size: "md"
};
var Avatar = {
  parts: avatarAnatomy.keys,
  baseStyle: baseStyle$B,
  sizes: sizes$k,
  defaultProps: defaultProps$m
};
var baseStyle$A = {
  px: 1,
  textTransform: "uppercase",
  fontSize: "xs",
  borderRadius: "sm",
  fontWeight: "bold"
};
var variantSolid$2 = function variantSolid2(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  var dark = transparentize(c2 + ".500", 0.6)(theme3);
  return {
    bg: mode(c2 + ".500", dark)(props),
    color: mode("white", "whiteAlpha.800")(props)
  };
};
var variantSubtle2 = function variantSubtle3(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  var darkBg = transparentize(c2 + ".200", 0.16)(theme3);
  return {
    bg: mode(c2 + ".100", darkBg)(props),
    color: mode(c2 + ".800", c2 + ".200")(props)
  };
};
var variantOutline$2 = function variantOutline(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  var darkColor = transparentize(c2 + ".200", 0.8)(theme3);
  var lightColor = getColor(theme3, c2 + ".500");
  var color4 = mode(lightColor, darkColor)(props);
  return {
    color: color4,
    boxShadow: "inset 0 0 0px 1px " + color4
  };
};
var variants$a = {
  solid: variantSolid$2,
  subtle: variantSubtle2,
  outline: variantOutline$2
};
var defaultProps$l = {
  variant: "subtle",
  colorScheme: "gray"
};
var Badge = {
  baseStyle: baseStyle$A,
  variants: variants$a,
  defaultProps: defaultProps$l
};
var baseStyleLink = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focusVisible: {
    boxShadow: "outline"
  }
};
var baseStyle$z = {
  link: baseStyleLink
};
var Breadcrumb = {
  parts: breadcrumbAnatomy.keys,
  baseStyle: baseStyle$z
};
var baseStyle$y = {
  lineHeight: "1.2",
  borderRadius: "md",
  fontWeight: "semibold",
  transitionProperty: "common",
  transitionDuration: "normal",
  _focusVisible: {
    boxShadow: "outline"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed",
    boxShadow: "none"
  },
  _hover: {
    _disabled: {
      bg: "initial"
    }
  }
};
var variantGhost = function variantGhost2(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  if (c2 === "gray") {
    return {
      color: mode("inherit", "whiteAlpha.900")(props),
      _hover: {
        bg: mode("gray.100", "whiteAlpha.200")(props)
      },
      _active: {
        bg: mode("gray.200", "whiteAlpha.300")(props)
      }
    };
  }
  var darkHoverBg = transparentize(c2 + ".200", 0.12)(theme3);
  var darkActiveBg = transparentize(c2 + ".200", 0.24)(theme3);
  return {
    color: mode(c2 + ".600", c2 + ".200")(props),
    bg: "transparent",
    _hover: {
      bg: mode(c2 + ".50", darkHoverBg)(props)
    },
    _active: {
      bg: mode(c2 + ".100", darkActiveBg)(props)
    }
  };
};
var variantOutline$1 = function variantOutline2(props) {
  var c2 = props.colorScheme;
  var borderColor = mode("gray.200", "whiteAlpha.300")(props);
  return _extends8({
    border: "1px solid",
    borderColor: c2 === "gray" ? borderColor : "currentColor",
    ".chakra-button__group[data-attached] > &:not(:last-of-type)": {
      marginEnd: "-1px"
    }
  }, variantGhost(props));
};
var accessibleColorMap = {
  yellow: {
    bg: "yellow.400",
    color: "black",
    hoverBg: "yellow.500",
    activeBg: "yellow.600"
  },
  cyan: {
    bg: "cyan.400",
    color: "black",
    hoverBg: "cyan.500",
    activeBg: "cyan.600"
  }
};
var variantSolid$1 = function variantSolid3(props) {
  var _accessibleColorMap$c;
  var c2 = props.colorScheme;
  if (c2 === "gray") {
    var _bg = mode("gray.100", "whiteAlpha.200")(props);
    return {
      bg: _bg,
      _hover: {
        bg: mode("gray.200", "whiteAlpha.300")(props),
        _disabled: {
          bg: _bg
        }
      },
      _active: {
        bg: mode("gray.300", "whiteAlpha.400")(props)
      }
    };
  }
  var _ref2 = (_accessibleColorMap$c = accessibleColorMap[c2]) != null ? _accessibleColorMap$c : {}, _ref$bg = _ref2.bg, bg = _ref$bg === void 0 ? c2 + ".500" : _ref$bg, _ref$color = _ref2.color, color4 = _ref$color === void 0 ? "white" : _ref$color, _ref$hoverBg = _ref2.hoverBg, hoverBg = _ref$hoverBg === void 0 ? c2 + ".600" : _ref$hoverBg, _ref$activeBg = _ref2.activeBg, activeBg = _ref$activeBg === void 0 ? c2 + ".700" : _ref$activeBg;
  var background3 = mode(bg, c2 + ".200")(props);
  return {
    bg: background3,
    color: mode(color4, "gray.800")(props),
    _hover: {
      bg: mode(hoverBg, c2 + ".300")(props),
      _disabled: {
        bg: background3
      }
    },
    _active: {
      bg: mode(activeBg, c2 + ".400")(props)
    }
  };
};
var variantLink = function variantLink2(props) {
  var c2 = props.colorScheme;
  return {
    padding: 0,
    height: "auto",
    lineHeight: "normal",
    verticalAlign: "baseline",
    color: mode(c2 + ".500", c2 + ".200")(props),
    _hover: {
      textDecoration: "underline",
      _disabled: {
        textDecoration: "none"
      }
    },
    _active: {
      color: mode(c2 + ".700", c2 + ".500")(props)
    }
  };
};
var variantUnstyled$2 = {
  bg: "none",
  color: "inherit",
  display: "inline",
  lineHeight: "inherit",
  m: 0,
  p: 0
};
var variants$9 = {
  ghost: variantGhost,
  outline: variantOutline$1,
  solid: variantSolid$1,
  link: variantLink,
  unstyled: variantUnstyled$2
};
var sizes$j = {
  lg: {
    h: 12,
    minW: 12,
    fontSize: "lg",
    px: 6
  },
  md: {
    h: 10,
    minW: 10,
    fontSize: "md",
    px: 4
  },
  sm: {
    h: 8,
    minW: 8,
    fontSize: "sm",
    px: 3
  },
  xs: {
    h: 6,
    minW: 6,
    fontSize: "xs",
    px: 2
  }
};
var defaultProps$k = {
  variant: "solid",
  size: "md",
  colorScheme: "gray"
};
var Button = {
  baseStyle: baseStyle$y,
  variants: variants$9,
  sizes: sizes$j,
  defaultProps: defaultProps$k
};
var baseStyleControl$1 = function baseStyleControl(props) {
  var c2 = props.colorScheme;
  return {
    w: "100%",
    transitionProperty: "box-shadow",
    transitionDuration: "normal",
    border: "2px solid",
    borderRadius: "sm",
    borderColor: "inherit",
    color: "white",
    _checked: {
      bg: mode(c2 + ".500", c2 + ".200")(props),
      borderColor: mode(c2 + ".500", c2 + ".200")(props),
      color: mode("white", "gray.900")(props),
      _hover: {
        bg: mode(c2 + ".600", c2 + ".300")(props),
        borderColor: mode(c2 + ".600", c2 + ".300")(props)
      },
      _disabled: {
        borderColor: mode("gray.200", "transparent")(props),
        bg: mode("gray.200", "whiteAlpha.300")(props),
        color: mode("gray.500", "whiteAlpha.500")(props)
      }
    },
    _indeterminate: {
      bg: mode(c2 + ".500", c2 + ".200")(props),
      borderColor: mode(c2 + ".500", c2 + ".200")(props),
      color: mode("white", "gray.900")(props)
    },
    _disabled: {
      bg: mode("gray.100", "whiteAlpha.100")(props),
      borderColor: mode("gray.100", "transparent")(props)
    },
    _focusVisible: {
      boxShadow: "outline"
    },
    _invalid: {
      borderColor: mode("red.500", "red.300")(props)
    }
  };
};
var baseStyleContainer$2 = {
  _disabled: {
    cursor: "not-allowed"
  }
};
var baseStyleLabel$3 = {
  userSelect: "none",
  _disabled: {
    opacity: 0.4
  }
};
var baseStyleIcon$4 = {
  transitionProperty: "transform",
  transitionDuration: "normal"
};
var baseStyle$x = function baseStyle2(props) {
  return {
    icon: baseStyleIcon$4,
    container: baseStyleContainer$2,
    control: baseStyleControl$1(props),
    label: baseStyleLabel$3
  };
};
var sizes$i = {
  sm: {
    control: {
      h: 3,
      w: 3
    },
    label: {
      fontSize: "sm"
    },
    icon: {
      fontSize: "0.45rem"
    }
  },
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    },
    icon: {
      fontSize: "0.625rem"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    },
    icon: {
      fontSize: "0.625rem"
    }
  }
};
var defaultProps$j = {
  size: "md",
  colorScheme: "blue"
};
var Checkbox = {
  parts: checkboxAnatomy.keys,
  baseStyle: baseStyle$x,
  sizes: sizes$i,
  defaultProps: defaultProps$j
};
var _lg$1;
var _md$1;
var _sm$1;
var $size$1 = cssVar2("close-button-size");
var baseStyle$w = function baseStyle3(props) {
  var hoverBg = mode("blackAlpha.100", "whiteAlpha.100")(props);
  var activeBg = mode("blackAlpha.200", "whiteAlpha.200")(props);
  return {
    w: [$size$1.reference],
    h: [$size$1.reference],
    borderRadius: "md",
    transitionProperty: "common",
    transitionDuration: "normal",
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed",
      boxShadow: "none"
    },
    _hover: {
      bg: hoverBg
    },
    _active: {
      bg: activeBg
    },
    _focusVisible: {
      boxShadow: "outline"
    }
  };
};
var sizes$h = {
  lg: (_lg$1 = {}, _lg$1[$size$1.variable] = "40px", _lg$1.fontSize = "16px", _lg$1),
  md: (_md$1 = {}, _md$1[$size$1.variable] = "32px", _md$1.fontSize = "12px", _md$1),
  sm: (_sm$1 = {}, _sm$1[$size$1.variable] = "24px", _sm$1.fontSize = "10px", _sm$1)
};
var defaultProps$i = {
  size: "md"
};
var CloseButton = {
  baseStyle: baseStyle$w,
  sizes: sizes$h,
  defaultProps: defaultProps$i
};
var variants$8 = Badge.variants;
var defaultProps$h = Badge.defaultProps;
var baseStyle$v = {
  fontFamily: "mono",
  fontSize: "sm",
  px: "0.2em",
  borderRadius: "sm"
};
var Code = {
  baseStyle: baseStyle$v,
  variants: variants$8,
  defaultProps: defaultProps$h
};
var baseStyle$u = {
  w: "100%",
  mx: "auto",
  maxW: "60ch",
  px: "1rem"
};
var Container3 = {
  baseStyle: baseStyle$u
};
var baseStyle$t = {
  opacity: 0.6,
  borderColor: "inherit"
};
var variantSolid4 = {
  borderStyle: "solid"
};
var variantDashed = {
  borderStyle: "dashed"
};
var variants$7 = {
  solid: variantSolid4,
  dashed: variantDashed
};
var defaultProps$g = {
  variant: "solid"
};
var Divider = {
  baseStyle: baseStyle$t,
  variants: variants$7,
  defaultProps: defaultProps$g
};
function getSize$2(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        h: "100vh"
      }
    };
  }
  return {
    dialog: {
      maxW: value
    }
  };
}
var baseStyleOverlay$1 = {
  bg: "blackAlpha.600",
  zIndex: "overlay"
};
var baseStyleDialogContainer$1 = {
  display: "flex",
  zIndex: "modal",
  justifyContent: "center"
};
var baseStyleDialog$1 = function baseStyleDialog(props) {
  var isFullHeight = props.isFullHeight;
  return _extends8({}, isFullHeight && {
    height: "100vh"
  }, {
    zIndex: "modal",
    maxH: "100vh",
    bg: mode("white", "gray.700")(props),
    color: "inherit",
    boxShadow: mode("lg", "dark-lg")(props)
  });
};
var baseStyleHeader$2 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$3 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$2 = {
  px: 6,
  py: 2,
  flex: 1,
  overflow: "auto"
};
var baseStyleFooter$2 = {
  px: 6,
  py: 4
};
var baseStyle$s = function baseStyle4(props) {
  return {
    overlay: baseStyleOverlay$1,
    dialogContainer: baseStyleDialogContainer$1,
    dialog: baseStyleDialog$1(props),
    header: baseStyleHeader$2,
    closeButton: baseStyleCloseButton$3,
    body: baseStyleBody$2,
    footer: baseStyleFooter$2
  };
};
var sizes$g = {
  xs: getSize$2("xs"),
  sm: getSize$2("md"),
  md: getSize$2("lg"),
  lg: getSize$2("2xl"),
  xl: getSize$2("4xl"),
  full: getSize$2("full")
};
var defaultProps$f = {
  size: "xs"
};
var Drawer = {
  parts: drawerAnatomy.keys,
  baseStyle: baseStyle$s,
  sizes: sizes$g,
  defaultProps: defaultProps$f
};
var baseStylePreview = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyleInput = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal",
  width: "full",
  _focusVisible: {
    boxShadow: "outline"
  },
  _placeholder: {
    opacity: 0.6
  }
};
var baseStyleTextarea = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal",
  width: "full",
  _focusVisible: {
    boxShadow: "outline"
  },
  _placeholder: {
    opacity: 0.6
  }
};
var baseStyle$r = {
  preview: baseStylePreview,
  input: baseStyleInput,
  textarea: baseStyleTextarea
};
var Editable = {
  parts: editableAnatomy.keys,
  baseStyle: baseStyle$r
};
var baseStyleRequiredIndicator = function baseStyleRequiredIndicator2(props) {
  return {
    marginStart: 1,
    color: mode("red.500", "red.300")(props)
  };
};
var baseStyleHelperText = function baseStyleHelperText2(props) {
  return {
    mt: 2,
    color: mode("gray.500", "whiteAlpha.600")(props),
    lineHeight: "normal",
    fontSize: "sm"
  };
};
var baseStyle$q = function baseStyle5(props) {
  return {
    container: {
      width: "100%",
      position: "relative"
    },
    requiredIndicator: baseStyleRequiredIndicator(props),
    helperText: baseStyleHelperText(props)
  };
};
var Form = {
  parts: formAnatomy.keys,
  baseStyle: baseStyle$q
};
var baseStyleText = function baseStyleText2(props) {
  return {
    color: mode("red.500", "red.300")(props),
    mt: 2,
    fontSize: "sm",
    lineHeight: "normal"
  };
};
var baseStyleIcon$3 = function baseStyleIcon(props) {
  return {
    marginEnd: "0.5em",
    color: mode("red.500", "red.300")(props)
  };
};
var baseStyle$p = function baseStyle6(props) {
  return {
    text: baseStyleText(props),
    icon: baseStyleIcon$3(props)
  };
};
var FormError = {
  parts: formErrorAnatomy.keys,
  baseStyle: baseStyle$p
};
var baseStyle$o = {
  fontSize: "md",
  marginEnd: 3,
  mb: 2,
  fontWeight: "medium",
  transitionProperty: "common",
  transitionDuration: "normal",
  opacity: 1,
  _disabled: {
    opacity: 0.4
  }
};
var FormLabel = {
  baseStyle: baseStyle$o
};
var baseStyle$n = {
  fontFamily: "heading",
  fontWeight: "bold"
};
var sizes$f = {
  "4xl": {
    fontSize: ["6xl", null, "7xl"],
    lineHeight: 1
  },
  "3xl": {
    fontSize: ["5xl", null, "6xl"],
    lineHeight: 1
  },
  "2xl": {
    fontSize: ["4xl", null, "5xl"],
    lineHeight: [1.2, null, 1]
  },
  xl: {
    fontSize: ["3xl", null, "4xl"],
    lineHeight: [1.33, null, 1.2]
  },
  lg: {
    fontSize: ["2xl", null, "3xl"],
    lineHeight: [1.33, null, 1.2]
  },
  md: {
    fontSize: "xl",
    lineHeight: 1.2
  },
  sm: {
    fontSize: "md",
    lineHeight: 1.2
  },
  xs: {
    fontSize: "sm",
    lineHeight: 1.2
  }
};
var defaultProps$e = {
  size: "xl"
};
var Heading = {
  baseStyle: baseStyle$n,
  sizes: sizes$f,
  defaultProps: defaultProps$e
};
var baseStyle$m = {
  field: {
    width: "100%",
    minWidth: 0,
    outline: 0,
    position: "relative",
    appearance: "none",
    transitionProperty: "common",
    transitionDuration: "normal"
  }
};
var size = {
  lg: {
    fontSize: "lg",
    px: 4,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    px: 4,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    px: 3,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    px: 2,
    h: 6,
    borderRadius: "sm"
  }
};
var sizes$e = {
  lg: {
    field: size.lg,
    addon: size.lg
  },
  md: {
    field: size.md,
    addon: size.md
  },
  sm: {
    field: size.sm,
    addon: size.sm
  },
  xs: {
    field: size.xs,
    addon: size.xs
  }
};
function getDefaults(props) {
  var fc = props.focusBorderColor, ec = props.errorBorderColor;
  return {
    focusBorderColor: fc || mode("blue.500", "blue.300")(props),
    errorBorderColor: ec || mode("red.500", "red.300")(props)
  };
}
var variantOutline3 = function variantOutline4(props) {
  var theme3 = props.theme;
  var _getDefaults = getDefaults(props), fc = _getDefaults.focusBorderColor, ec = _getDefaults.errorBorderColor;
  return {
    field: {
      border: "1px solid",
      borderColor: "inherit",
      bg: "inherit",
      _hover: {
        borderColor: mode("gray.300", "whiteAlpha.400")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: getColor(theme3, ec),
        boxShadow: "0 0 0 1px " + getColor(theme3, ec)
      },
      _focusVisible: {
        zIndex: 1,
        borderColor: getColor(theme3, fc),
        boxShadow: "0 0 0 1px " + getColor(theme3, fc)
      }
    },
    addon: {
      border: "1px solid",
      borderColor: mode("inherit", "whiteAlpha.50")(props),
      bg: mode("gray.100", "whiteAlpha.300")(props)
    }
  };
};
var variantFilled = function variantFilled2(props) {
  var theme3 = props.theme;
  var _getDefaults2 = getDefaults(props), fc = _getDefaults2.focusBorderColor, ec = _getDefaults2.errorBorderColor;
  return {
    field: {
      border: "2px solid",
      borderColor: "transparent",
      bg: mode("gray.100", "whiteAlpha.50")(props),
      _hover: {
        bg: mode("gray.200", "whiteAlpha.100")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: getColor(theme3, ec)
      },
      _focusVisible: {
        bg: "transparent",
        borderColor: getColor(theme3, fc)
      }
    },
    addon: {
      border: "2px solid",
      borderColor: "transparent",
      bg: mode("gray.100", "whiteAlpha.50")(props)
    }
  };
};
var variantFlushed = function variantFlushed2(props) {
  var theme3 = props.theme;
  var _getDefaults3 = getDefaults(props), fc = _getDefaults3.focusBorderColor, ec = _getDefaults3.errorBorderColor;
  return {
    field: {
      borderBottom: "1px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent",
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _invalid: {
        borderColor: getColor(theme3, ec),
        boxShadow: "0px 1px 0px 0px " + getColor(theme3, ec)
      },
      _focusVisible: {
        borderColor: getColor(theme3, fc),
        boxShadow: "0px 1px 0px 0px " + getColor(theme3, fc)
      }
    },
    addon: {
      borderBottom: "2px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent"
    }
  };
};
var variantUnstyled$1 = {
  field: {
    bg: "transparent",
    px: 0,
    height: "auto"
  },
  addon: {
    bg: "transparent",
    px: 0,
    height: "auto"
  }
};
var variants$6 = {
  outline: variantOutline3,
  filled: variantFilled,
  flushed: variantFlushed,
  unstyled: variantUnstyled$1
};
var defaultProps$d = {
  size: "md",
  variant: "outline"
};
var Input = {
  parts: inputAnatomy.keys,
  baseStyle: baseStyle$m,
  sizes: sizes$e,
  variants: variants$6,
  defaultProps: defaultProps$d
};
var baseStyle$l = function baseStyle7(props) {
  return {
    bg: mode("gray.100", "whiteAlpha")(props),
    borderRadius: "md",
    borderWidth: "1px",
    borderBottomWidth: "3px",
    fontSize: "0.8em",
    fontWeight: "bold",
    lineHeight: "normal",
    px: "0.4em",
    whiteSpace: "nowrap"
  };
};
var Kbd = {
  baseStyle: baseStyle$l
};
var baseStyle$k = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focusVisible: {
    boxShadow: "outline"
  }
};
var Link = {
  baseStyle: baseStyle$k
};
var baseStyleIcon$2 = {
  marginEnd: "0.5rem",
  display: "inline",
  verticalAlign: "text-bottom"
};
var baseStyle$j = {
  container: {},
  item: {},
  icon: baseStyleIcon$2
};
var List = {
  parts: listAnatomy.keys,
  baseStyle: baseStyle$j
};
var baseStyleList = function baseStyleList2(props) {
  return {
    bg: mode("#fff", "gray.700")(props),
    boxShadow: mode("sm", "dark-lg")(props),
    color: "inherit",
    minW: "3xs",
    py: "2",
    zIndex: 1,
    borderRadius: "md",
    borderWidth: "1px"
  };
};
var baseStyleItem = function baseStyleItem2(props) {
  return {
    py: "0.4rem",
    px: "0.8rem",
    transitionProperty: "background",
    transitionDuration: "ultra-fast",
    transitionTimingFunction: "ease-in",
    _focus: {
      bg: mode("gray.100", "whiteAlpha.100")(props)
    },
    _active: {
      bg: mode("gray.200", "whiteAlpha.200")(props)
    },
    _expanded: {
      bg: mode("gray.100", "whiteAlpha.100")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};
var baseStyleGroupTitle = {
  mx: 4,
  my: 2,
  fontWeight: "semibold",
  fontSize: "sm"
};
var baseStyleCommand = {
  opacity: 0.6
};
var baseStyleDivider = {
  border: 0,
  borderBottom: "1px solid",
  borderColor: "inherit",
  my: "0.5rem",
  opacity: 0.6
};
var baseStyleButton = {
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyle$i = function baseStyle8(props) {
  return {
    button: baseStyleButton,
    list: baseStyleList(props),
    item: baseStyleItem(props),
    groupTitle: baseStyleGroupTitle,
    command: baseStyleCommand,
    divider: baseStyleDivider
  };
};
var Menu = {
  parts: menuAnatomy.keys,
  baseStyle: baseStyle$i
};
var baseStyleOverlay = {
  bg: "blackAlpha.600",
  zIndex: "modal"
};
var baseStyleDialogContainer = function baseStyleDialogContainer2(props) {
  var isCentered = props.isCentered, scrollBehavior = props.scrollBehavior;
  return {
    display: "flex",
    zIndex: "modal",
    justifyContent: "center",
    alignItems: isCentered ? "center" : "flex-start",
    overflow: scrollBehavior === "inside" ? "hidden" : "auto"
  };
};
var baseStyleDialog2 = function baseStyleDialog3(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    borderRadius: "md",
    bg: mode("white", "gray.700")(props),
    color: "inherit",
    my: "3.75rem",
    zIndex: "modal",
    maxH: scrollBehavior === "inside" ? "calc(100% - 7.5rem)" : void 0,
    boxShadow: mode("lg", "dark-lg")(props)
  };
};
var baseStyleHeader$1 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$2 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$1 = function baseStyleBody(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    px: 6,
    py: 2,
    flex: 1,
    overflow: scrollBehavior === "inside" ? "auto" : void 0
  };
};
var baseStyleFooter$1 = {
  px: 6,
  py: 4
};
var baseStyle$h = function baseStyle9(props) {
  return {
    overlay: baseStyleOverlay,
    dialogContainer: baseStyleDialogContainer(props),
    dialog: baseStyleDialog2(props),
    header: baseStyleHeader$1,
    closeButton: baseStyleCloseButton$2,
    body: baseStyleBody$1(props),
    footer: baseStyleFooter$1
  };
};
function getSize$1(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        minH: "100vh",
        "@supports(min-height: -webkit-fill-available)": {
          minH: "-webkit-fill-available"
        },
        my: 0
      }
    };
  }
  return {
    dialog: {
      maxW: value
    }
  };
}
var sizes$d = {
  xs: getSize$1("xs"),
  sm: getSize$1("sm"),
  md: getSize$1("md"),
  lg: getSize$1("lg"),
  xl: getSize$1("xl"),
  "2xl": getSize$1("2xl"),
  "3xl": getSize$1("3xl"),
  "4xl": getSize$1("4xl"),
  "5xl": getSize$1("5xl"),
  "6xl": getSize$1("6xl"),
  full: getSize$1("full")
};
var defaultProps$c = {
  size: "md"
};
var Modal = {
  parts: modalAnatomy.keys,
  baseStyle: baseStyle$h,
  sizes: sizes$d,
  defaultProps: defaultProps$c
};
var _baseStyleRoot;
var _Input$baseStyle$fiel;
var _Input$baseStyle;
var variants$5 = Input.variants;
var defaultProps$b = Input.defaultProps;
var $stepperWidth = cssVar2("number-input-stepper-width");
var $inputPadding = cssVar2("number-input-input-padding");
var inputPaddingValue = calc2($stepperWidth).add("0.5rem").toString();
var baseStyleRoot$1 = (_baseStyleRoot = {}, _baseStyleRoot[$stepperWidth.variable] = "24px", _baseStyleRoot[$inputPadding.variable] = inputPaddingValue, _baseStyleRoot);
var baseStyleField$1 = (_Input$baseStyle$fiel = (_Input$baseStyle = Input.baseStyle) == null ? void 0 : _Input$baseStyle.field) != null ? _Input$baseStyle$fiel : {};
var baseStyleStepperGroup = {
  width: [$stepperWidth.reference]
};
var baseStyleStepper = function baseStyleStepper2(props) {
  return {
    borderStart: "1px solid",
    borderStartColor: mode("inherit", "whiteAlpha.300")(props),
    color: mode("inherit", "whiteAlpha.800")(props),
    _active: {
      bg: mode("gray.200", "whiteAlpha.300")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};
var baseStyle$g = function baseStyle10(props) {
  return {
    root: baseStyleRoot$1,
    field: baseStyleField$1,
    stepperGroup: baseStyleStepperGroup,
    stepper: baseStyleStepper(props)
  };
};
function getSize(size3) {
  var _sizeStyle$field$font, _sizeStyle$field;
  var sizeStyle = Input.sizes[size3];
  var radius = {
    lg: "md",
    md: "md",
    sm: "sm",
    xs: "sm"
  };
  var _fontSize = (_sizeStyle$field$font = (_sizeStyle$field = sizeStyle.field) == null ? void 0 : _sizeStyle$field.fontSize) != null ? _sizeStyle$field$font : "md";
  var fontSize = typography2.fontSizes[_fontSize];
  return {
    field: _extends8({}, sizeStyle.field, {
      paddingInlineEnd: $inputPadding.reference,
      verticalAlign: "top"
    }),
    stepper: {
      fontSize: calc2(fontSize).multiply(0.75).toString(),
      _first: {
        borderTopEndRadius: radius[size3]
      },
      _last: {
        borderBottomEndRadius: radius[size3],
        mt: "-1px",
        borderTopWidth: 1
      }
    }
  };
}
var sizes$c = {
  xs: getSize("xs"),
  sm: getSize("sm"),
  md: getSize("md"),
  lg: getSize("lg")
};
var NumberInput = {
  parts: numberInputAnatomy.keys,
  baseStyle: baseStyle$g,
  sizes: sizes$c,
  variants: variants$5,
  defaultProps: defaultProps$b
};
var _Input$variants$unsty$1;
var baseStyle$f = _extends8({}, Input.baseStyle.field, {
  textAlign: "center"
});
var sizes$b = {
  lg: {
    fontSize: "lg",
    w: 12,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    w: 10,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    w: 8,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    w: 6,
    h: 6,
    borderRadius: "sm"
  }
};
var variants$4 = {
  outline: function outline3(props) {
    var _Input$variants$outli;
    return (_Input$variants$outli = Input.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed(props) {
    var _Input$variants$flush;
    return (_Input$variants$flush = Input.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled(props) {
    var _Input$variants$fille;
    return (_Input$variants$fille = Input.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty$1 = Input.variants.unstyled.field) != null ? _Input$variants$unsty$1 : {}
};
var defaultProps$a = Input.defaultProps;
var PinInput = {
  baseStyle: baseStyle$f,
  sizes: sizes$b,
  variants: variants$4,
  defaultProps: defaultProps$a
};
var $popperBg = cssVar2("popper-bg");
var $arrowBg$1 = cssVar2("popper-arrow-bg");
var $arrowShadowColor = cssVar2("popper-arrow-shadow-color");
var baseStylePopper = {
  zIndex: 10
};
var baseStyleContent = function baseStyleContent2(props) {
  var _ref2;
  var bg = mode("white", "gray.700")(props);
  var shadowColor = mode("gray.200", "whiteAlpha.300")(props);
  return _ref2 = {}, _ref2[$popperBg.variable] = "colors." + bg, _ref2.bg = $popperBg.reference, _ref2[$arrowBg$1.variable] = $popperBg.reference, _ref2[$arrowShadowColor.variable] = "colors." + shadowColor, _ref2.width = "xs", _ref2.border = "1px solid", _ref2.borderColor = "inherit", _ref2.borderRadius = "md", _ref2.boxShadow = "sm", _ref2.zIndex = "inherit", _ref2._focusVisible = {
    outline: 0,
    boxShadow: "outline"
  }, _ref2;
};
var baseStyleHeader = {
  px: 3,
  py: 2,
  borderBottomWidth: "1px"
};
var baseStyleBody2 = {
  px: 3,
  py: 2
};
var baseStyleFooter = {
  px: 3,
  py: 2,
  borderTopWidth: "1px"
};
var baseStyleCloseButton$1 = {
  position: "absolute",
  borderRadius: "md",
  top: 1,
  insetEnd: 2,
  padding: 2
};
var baseStyle$e = function baseStyle11(props) {
  return {
    popper: baseStylePopper,
    content: baseStyleContent(props),
    header: baseStyleHeader,
    body: baseStyleBody2,
    footer: baseStyleFooter,
    arrow: {},
    closeButton: baseStyleCloseButton$1
  };
};
var Popover = {
  parts: popoverAnatomy.keys,
  baseStyle: baseStyle$e
};
function filledStyle(props) {
  var c2 = props.colorScheme, t3 = props.theme, isIndeterminate = props.isIndeterminate, hasStripe = props.hasStripe;
  var stripeStyle = mode(generateStripe(), generateStripe("1rem", "rgba(0,0,0,0.1)"))(props);
  var bgColor = mode(c2 + ".500", c2 + ".200")(props);
  var gradient = "linear-gradient(\n    to right,\n    transparent 0%,\n    " + getColor(t3, bgColor) + " 50%,\n    transparent 100%\n  )";
  var addStripe = !isIndeterminate && hasStripe;
  return _extends8({}, addStripe && stripeStyle, isIndeterminate ? {
    bgImage: gradient
  } : {
    bgColor
  });
}
var baseStyleLabel$2 = {
  lineHeight: "1",
  fontSize: "0.25em",
  fontWeight: "bold",
  color: "white"
};
var baseStyleTrack$2 = function baseStyleTrack(props) {
  return {
    bg: mode("gray.100", "whiteAlpha.300")(props)
  };
};
var baseStyleFilledTrack$1 = function baseStyleFilledTrack(props) {
  return _extends8({
    transitionProperty: "common",
    transitionDuration: "slow"
  }, filledStyle(props));
};
var baseStyle$d = function baseStyle12(props) {
  return {
    label: baseStyleLabel$2,
    filledTrack: baseStyleFilledTrack$1(props),
    track: baseStyleTrack$2(props)
  };
};
var sizes$a = {
  xs: {
    track: {
      h: "0.25rem"
    }
  },
  sm: {
    track: {
      h: "0.5rem"
    }
  },
  md: {
    track: {
      h: "0.75rem"
    }
  },
  lg: {
    track: {
      h: "1rem"
    }
  }
};
var defaultProps$9 = {
  size: "md",
  colorScheme: "blue"
};
var Progress = {
  parts: progressAnatomy.keys,
  sizes: sizes$a,
  baseStyle: baseStyle$d,
  defaultProps: defaultProps$9
};
var baseStyleControl2 = function baseStyleControl3(props) {
  var _Checkbox$baseStyle = Checkbox.baseStyle(props), _Checkbox$baseStyle$c = _Checkbox$baseStyle.control, control = _Checkbox$baseStyle$c === void 0 ? {} : _Checkbox$baseStyle$c;
  return _extends8({}, control, {
    borderRadius: "full",
    _checked: _extends8({}, control["_checked"], {
      _before: {
        content: '""',
        display: "inline-block",
        pos: "relative",
        w: "50%",
        h: "50%",
        borderRadius: "50%",
        bg: "currentColor"
      }
    })
  });
};
var baseStyle$c = function baseStyle13(props) {
  return {
    label: Checkbox.baseStyle(props).label,
    container: Checkbox.baseStyle(props).container,
    control: baseStyleControl2(props)
  };
};
var sizes$9 = {
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    }
  },
  sm: {
    control: {
      width: 3,
      height: 3
    },
    label: {
      fontSize: "sm"
    }
  }
};
var defaultProps$8 = {
  size: "md",
  colorScheme: "blue"
};
var Radio = {
  parts: radioAnatomy.keys,
  baseStyle: baseStyle$c,
  sizes: sizes$9,
  defaultProps: defaultProps$8
};
var baseStyleField = function baseStyleField2(props) {
  return _extends8({}, Input.baseStyle.field, {
    bg: mode("white", "gray.700")(props),
    appearance: "none",
    paddingBottom: "1px",
    lineHeight: "normal",
    "> option, > optgroup": {
      bg: mode("white", "gray.700")(props)
    }
  });
};
var baseStyleIcon$1 = {
  width: "1.5rem",
  height: "100%",
  insetEnd: "0.5rem",
  position: "relative",
  color: "currentColor",
  fontSize: "1.25rem",
  _disabled: {
    opacity: 0.5
  }
};
var baseStyle$b = function baseStyle14(props) {
  return {
    field: baseStyleField(props),
    icon: baseStyleIcon$1
  };
};
var iconSpacing = {
  paddingInlineEnd: "2rem"
};
var sizes$8 = (0, import_lodash2.default)({}, Input.sizes, {
  lg: {
    field: iconSpacing
  },
  md: {
    field: iconSpacing
  },
  sm: {
    field: iconSpacing
  },
  xs: {
    field: iconSpacing,
    icon: {
      insetEnd: "0.25rem"
    }
  }
});
var Select = {
  parts: selectAnatomy.keys,
  baseStyle: baseStyle$b,
  sizes: sizes$8,
  variants: Input.variants,
  defaultProps: Input.defaultProps
};
var fade = function fade2(startColor, endColor) {
  return keyframes({
    from: {
      borderColor: startColor,
      background: startColor
    },
    to: {
      borderColor: endColor,
      background: endColor
    }
  });
};
var baseStyle$a = function baseStyle15(props) {
  var defaultStartColor = mode("gray.100", "gray.800")(props);
  var defaultEndColor = mode("gray.400", "gray.600")(props);
  var _props$startColor = props.startColor, startColor = _props$startColor === void 0 ? defaultStartColor : _props$startColor, _props$endColor = props.endColor, endColor = _props$endColor === void 0 ? defaultEndColor : _props$endColor, speed = props.speed, theme3 = props.theme;
  var start2 = getColor(theme3, startColor);
  var end2 = getColor(theme3, endColor);
  return {
    opacity: 0.7,
    borderRadius: "2px",
    borderColor: start2,
    background: end2,
    animation: speed + "s linear infinite alternate " + fade(start2, end2)
  };
};
var Skeleton = {
  baseStyle: baseStyle$a
};
var baseStyle$9 = function baseStyle16(props) {
  return {
    borderRadius: "md",
    fontWeight: "semibold",
    _focusVisible: {
      boxShadow: "outline",
      padding: "1rem",
      position: "fixed",
      top: "1.5rem",
      insetStart: "1.5rem",
      bg: mode("white", "gray.700")(props)
    }
  };
};
var SkipLink = {
  baseStyle: baseStyle$9
};
function thumbOrientation(props) {
  return orient({
    orientation: props.orientation,
    vertical: {
      left: "50%",
      transform: "translateX(-50%)",
      _active: {
        transform: "translateX(-50%) scale(1.15)"
      }
    },
    horizontal: {
      top: "50%",
      transform: "translateY(-50%)",
      _active: {
        transform: "translateY(-50%) scale(1.15)"
      }
    }
  });
}
var baseStyleContainer$1 = function baseStyleContainer2(props) {
  var orientation = props.orientation;
  return _extends8({
    display: "inline-block",
    position: "relative",
    cursor: "pointer",
    _disabled: {
      opacity: 0.6,
      cursor: "default",
      pointerEvents: "none"
    }
  }, orient({
    orientation,
    vertical: {
      h: "100%"
    },
    horizontal: {
      w: "100%"
    }
  }));
};
var baseStyleTrack$1 = function baseStyleTrack2(props) {
  return {
    overflow: "hidden",
    borderRadius: "sm",
    bg: mode("gray.200", "whiteAlpha.200")(props),
    _disabled: {
      bg: mode("gray.300", "whiteAlpha.300")(props)
    }
  };
};
var baseStyleThumb$1 = function baseStyleThumb(props) {
  return _extends8({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    outline: 0,
    zIndex: 1,
    borderRadius: "full",
    bg: "white",
    boxShadow: "base",
    border: "1px solid",
    borderColor: "transparent",
    transitionProperty: "transform",
    transitionDuration: "normal",
    _focusVisible: {
      boxShadow: "outline"
    },
    _disabled: {
      bg: "gray.300"
    }
  }, thumbOrientation(props));
};
var baseStyleFilledTrack2 = function baseStyleFilledTrack3(props) {
  var c2 = props.colorScheme;
  return {
    width: "inherit",
    height: "inherit",
    bg: mode(c2 + ".500", c2 + ".200")(props)
  };
};
var baseStyle$8 = function baseStyle17(props) {
  return {
    container: baseStyleContainer$1(props),
    track: baseStyleTrack$1(props),
    thumb: baseStyleThumb$1(props),
    filledTrack: baseStyleFilledTrack2(props)
  };
};
var sizeLg = function sizeLg2(props) {
  return {
    thumb: {
      w: "16px",
      h: "16px"
    },
    track: orient({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};
var sizeMd = function sizeMd2(props) {
  return {
    thumb: {
      w: "14px",
      h: "14px"
    },
    track: orient({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};
var sizeSm = function sizeSm2(props) {
  return {
    thumb: {
      w: "10px",
      h: "10px"
    },
    track: orient({
      orientation: props.orientation,
      horizontal: {
        h: "2px"
      },
      vertical: {
        w: "2px"
      }
    })
  };
};
var sizes$7 = {
  lg: sizeLg,
  md: sizeMd,
  sm: sizeSm
};
var defaultProps$7 = {
  size: "md",
  colorScheme: "blue"
};
var Slider = {
  parts: sliderAnatomy.keys,
  sizes: sizes$7,
  baseStyle: baseStyle$8,
  defaultProps: defaultProps$7
};
var _xs;
var _sm;
var _md;
var _lg;
var _xl;
var $size = cssVar2("spinner-size");
var baseStyle$7 = {
  width: [$size.reference],
  height: [$size.reference]
};
var sizes$6 = {
  xs: (_xs = {}, _xs[$size.variable] = "0.75rem", _xs),
  sm: (_sm = {}, _sm[$size.variable] = "1rem", _sm),
  md: (_md = {}, _md[$size.variable] = "1.5rem", _md),
  lg: (_lg = {}, _lg[$size.variable] = "2rem", _lg),
  xl: (_xl = {}, _xl[$size.variable] = "3rem", _xl)
};
var defaultProps$6 = {
  size: "md"
};
var Spinner = {
  baseStyle: baseStyle$7,
  sizes: sizes$6,
  defaultProps: defaultProps$6
};
var baseStyleLabel$1 = {
  fontWeight: "medium"
};
var baseStyleHelpText = {
  opacity: 0.8,
  marginBottom: 2
};
var baseStyleNumber = {
  verticalAlign: "baseline",
  fontWeight: "semibold"
};
var baseStyleIcon2 = {
  marginEnd: 1,
  w: "14px",
  h: "14px",
  verticalAlign: "middle"
};
var baseStyle$6 = {
  container: {},
  label: baseStyleLabel$1,
  helpText: baseStyleHelpText,
  number: baseStyleNumber,
  icon: baseStyleIcon2
};
var sizes$5 = {
  md: {
    label: {
      fontSize: "sm"
    },
    helpText: {
      fontSize: "sm"
    },
    number: {
      fontSize: "2xl"
    }
  }
};
var defaultProps$5 = {
  size: "md"
};
var Stat = {
  parts: statAnatomy.keys,
  baseStyle: baseStyle$6,
  sizes: sizes$5,
  defaultProps: defaultProps$5
};
var _container2;
var _container3;
var _container4;
var $width = cssVar2("switch-track-width");
var $height = cssVar2("switch-track-height");
var $diff = cssVar2("switch-track-diff");
var diffValue = calc2.subtract($width, $height);
var $translateX = cssVar2("switch-thumb-x");
var baseStyleTrack3 = function baseStyleTrack4(props) {
  var c2 = props.colorScheme;
  return {
    borderRadius: "full",
    p: "2px",
    width: [$width.reference],
    height: [$height.reference],
    transitionProperty: "common",
    transitionDuration: "fast",
    bg: mode("gray.300", "whiteAlpha.400")(props),
    _focusVisible: {
      boxShadow: "outline"
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    },
    _checked: {
      bg: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var baseStyleThumb2 = {
  bg: "white",
  transitionProperty: "transform",
  transitionDuration: "normal",
  borderRadius: "inherit",
  width: [$height.reference],
  height: [$height.reference],
  _checked: {
    transform: "translateX(" + $translateX.reference + ")"
  }
};
var baseStyle$5 = function baseStyle18(props) {
  var _rtl, _container;
  return {
    container: (_container = {}, _container[$diff.variable] = diffValue, _container[$translateX.variable] = $diff.reference, _container._rtl = (_rtl = {}, _rtl[$translateX.variable] = calc2($diff).negate().toString(), _rtl), _container),
    track: baseStyleTrack3(props),
    thumb: baseStyleThumb2
  };
};
var sizes$4 = {
  sm: {
    container: (_container2 = {}, _container2[$width.variable] = "1.375rem", _container2[$height.variable] = "0.75rem", _container2)
  },
  md: {
    container: (_container3 = {}, _container3[$width.variable] = "1.875rem", _container3[$height.variable] = "1rem", _container3)
  },
  lg: {
    container: (_container4 = {}, _container4[$width.variable] = "2.875rem", _container4[$height.variable] = "1.5rem", _container4)
  }
};
var defaultProps$4 = {
  size: "md",
  colorScheme: "blue"
};
var Switch = {
  parts: switchAnatomy.keys,
  baseStyle: baseStyle$5,
  sizes: sizes$4,
  defaultProps: defaultProps$4
};
var baseStyle$4 = {
  table: {
    fontVariantNumeric: "lining-nums tabular-nums",
    borderCollapse: "collapse",
    width: "full"
  },
  th: {
    fontFamily: "heading",
    fontWeight: "bold",
    textTransform: "uppercase",
    letterSpacing: "wider",
    textAlign: "start"
  },
  td: {
    textAlign: "start"
  },
  caption: {
    mt: 4,
    fontFamily: "heading",
    textAlign: "center",
    fontWeight: "medium"
  }
};
var numericStyles = {
  "&[data-is-numeric=true]": {
    textAlign: "end"
  }
};
var variantSimple = function variantSimple2(props) {
  var c2 = props.colorScheme;
  return {
    th: _extends8({
      color: mode("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    td: _extends8({
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    caption: {
      color: mode("gray.600", "gray.100")(props)
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};
var variantStripe = function variantStripe2(props) {
  var c2 = props.colorScheme;
  return {
    th: _extends8({
      color: mode("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    td: _extends8({
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    caption: {
      color: mode("gray.600", "gray.100")(props)
    },
    tbody: {
      tr: {
        "&:nth-of-type(odd)": {
          "th, td": {
            borderBottomWidth: "1px",
            borderColor: mode(c2 + ".100", c2 + ".700")(props)
          },
          td: {
            background: mode(c2 + ".100", c2 + ".700")(props)
          }
        }
      }
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};
var variants$3 = {
  simple: variantSimple,
  striped: variantStripe,
  unstyled: {}
};
var sizes$3 = {
  sm: {
    th: {
      px: "4",
      py: "1",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "4",
      py: "2",
      fontSize: "sm",
      lineHeight: "4"
    },
    caption: {
      px: "4",
      py: "2",
      fontSize: "xs"
    }
  },
  md: {
    th: {
      px: "6",
      py: "3",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "6",
      py: "4",
      lineHeight: "5"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "sm"
    }
  },
  lg: {
    th: {
      px: "8",
      py: "4",
      lineHeight: "5",
      fontSize: "sm"
    },
    td: {
      px: "8",
      py: "5",
      lineHeight: "6"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "md"
    }
  }
};
var defaultProps$3 = {
  variant: "simple",
  size: "md",
  colorScheme: "gray"
};
var Table = {
  parts: tableAnatomy.keys,
  baseStyle: baseStyle$4,
  variants: variants$3,
  sizes: sizes$3,
  defaultProps: defaultProps$3
};
var baseStyleRoot = function baseStyleRoot2(props) {
  var orientation = props.orientation;
  return {
    display: orientation === "vertical" ? "flex" : "block"
  };
};
var baseStyleTab = function baseStyleTab2(props) {
  var isFitted = props.isFitted;
  return {
    flex: isFitted ? 1 : void 0,
    transitionProperty: "common",
    transitionDuration: "normal",
    _focusVisible: {
      zIndex: 1,
      boxShadow: "outline"
    },
    _disabled: {
      cursor: "not-allowed",
      opacity: 0.4
    }
  };
};
var baseStyleTablist = function baseStyleTablist2(props) {
  var _props$align = props.align, align = _props$align === void 0 ? "start" : _props$align, orientation = props.orientation;
  var alignments = {
    end: "flex-end",
    center: "center",
    start: "flex-start"
  };
  return {
    justifyContent: alignments[align],
    flexDirection: orientation === "vertical" ? "column" : "row"
  };
};
var baseStyleTabpanel = {
  p: 4
};
var baseStyle$3 = function baseStyle19(props) {
  return {
    root: baseStyleRoot(props),
    tab: baseStyleTab(props),
    tablist: baseStyleTablist(props),
    tabpanel: baseStyleTabpanel
  };
};
var sizes$2 = {
  sm: {
    tab: {
      py: 1,
      px: 4,
      fontSize: "sm"
    }
  },
  md: {
    tab: {
      fontSize: "md",
      py: 2,
      px: 4
    }
  },
  lg: {
    tab: {
      fontSize: "lg",
      py: 3,
      px: 4
    }
  }
};
var variantLine = function variantLine2(props) {
  var _tablist, _tab;
  var c2 = props.colorScheme, orientation = props.orientation;
  var isVertical = orientation === "vertical";
  var borderProp = orientation === "vertical" ? "borderStart" : "borderBottom";
  var marginProp = isVertical ? "marginStart" : "marginBottom";
  return {
    tablist: (_tablist = {}, _tablist[borderProp] = "2px solid", _tablist.borderColor = "inherit", _tablist),
    tab: (_tab = {}, _tab[borderProp] = "2px solid", _tab.borderColor = "transparent", _tab[marginProp] = "-2px", _tab._selected = {
      color: mode(c2 + ".600", c2 + ".300")(props),
      borderColor: "currentColor"
    }, _tab._active = {
      bg: mode("gray.200", "whiteAlpha.300")(props)
    }, _tab._disabled = {
      _active: {
        bg: "none"
      }
    }, _tab)
  };
};
var variantEnclosed = function variantEnclosed2(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      borderTopRadius: "md",
      border: "1px solid",
      borderColor: "transparent",
      mb: "-1px",
      _selected: {
        color: mode(c2 + ".600", c2 + ".300")(props),
        borderColor: "inherit",
        borderBottomColor: mode("white", "gray.800")(props)
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};
var variantEnclosedColored = function variantEnclosedColored2(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      border: "1px solid",
      borderColor: "inherit",
      bg: mode("gray.50", "whiteAlpha.50")(props),
      mb: "-1px",
      _notLast: {
        marginEnd: "-1px"
      },
      _selected: {
        bg: mode("#fff", "gray.800")(props),
        color: mode(c2 + ".600", c2 + ".300")(props),
        borderColor: "inherit",
        borderTopColor: "currentColor",
        borderBottomColor: "transparent"
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};
var variantSoftRounded = function variantSoftRounded2(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: "gray.600",
      _selected: {
        color: getColor(theme3, c2 + ".700"),
        bg: getColor(theme3, c2 + ".100")
      }
    }
  };
};
var variantSolidRounded = function variantSolidRounded2(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: mode("gray.600", "inherit")(props),
      _selected: {
        color: mode("#fff", "gray.800")(props),
        bg: mode(c2 + ".600", c2 + ".300")(props)
      }
    }
  };
};
var variantUnstyled = {};
var variants$2 = {
  line: variantLine,
  enclosed: variantEnclosed,
  "enclosed-colored": variantEnclosedColored,
  "soft-rounded": variantSoftRounded,
  "solid-rounded": variantSolidRounded,
  unstyled: variantUnstyled
};
var defaultProps$2 = {
  size: "md",
  variant: "line",
  colorScheme: "blue"
};
var Tabs = {
  parts: tabsAnatomy.keys,
  baseStyle: baseStyle$3,
  sizes: sizes$2,
  variants: variants$2,
  defaultProps: defaultProps$2
};
var baseStyleContainer3 = {
  fontWeight: "medium",
  lineHeight: 1.2,
  outline: 0,
  borderRadius: "md",
  _focusVisible: {
    boxShadow: "outline"
  }
};
var baseStyleLabel = {
  lineHeight: 1.2,
  overflow: "visible"
};
var baseStyleCloseButton = {
  fontSize: "18px",
  w: "1.25rem",
  h: "1.25rem",
  transitionProperty: "common",
  transitionDuration: "normal",
  borderRadius: "full",
  marginStart: "0.375rem",
  marginEnd: "-1",
  opacity: 0.5,
  _disabled: {
    opacity: 0.4
  },
  _focusVisible: {
    boxShadow: "outline",
    bg: "rgba(0, 0, 0, 0.14)"
  },
  _hover: {
    opacity: 0.8
  },
  _active: {
    opacity: 1
  }
};
var baseStyle$2 = {
  container: baseStyleContainer3,
  label: baseStyleLabel,
  closeButton: baseStyleCloseButton
};
var sizes$1 = {
  sm: {
    container: {
      minH: "1.25rem",
      minW: "1.25rem",
      fontSize: "xs",
      px: 2
    },
    closeButton: {
      marginEnd: "-2px",
      marginStart: "0.35rem"
    }
  },
  md: {
    container: {
      minH: "1.5rem",
      minW: "1.5rem",
      fontSize: "sm",
      px: 2
    }
  },
  lg: {
    container: {
      minH: 8,
      minW: 8,
      fontSize: "md",
      px: 3
    }
  }
};
var variants$1 = {
  subtle: function subtle(props) {
    return {
      container: Badge.variants.subtle(props)
    };
  },
  solid: function solid(props) {
    return {
      container: Badge.variants.solid(props)
    };
  },
  outline: function outline4(props) {
    return {
      container: Badge.variants.outline(props)
    };
  }
};
var defaultProps$1 = {
  size: "md",
  variant: "subtle",
  colorScheme: "gray"
};
var Tag = {
  parts: tagAnatomy.keys,
  variants: variants$1,
  baseStyle: baseStyle$2,
  sizes: sizes$1,
  defaultProps: defaultProps$1
};
var _Input$variants$unsty;
var _Input$sizes$xs$field;
var _Input$sizes$sm$field;
var _Input$sizes$md$field;
var _Input$sizes$lg$field;
var baseStyle$1 = _extends8({}, Input.baseStyle.field, {
  paddingY: "8px",
  minHeight: "80px",
  lineHeight: "short",
  verticalAlign: "top"
});
var variants = {
  outline: function outline5(props) {
    var _Input$variants$outli;
    return (_Input$variants$outli = Input.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed2(props) {
    var _Input$variants$flush;
    return (_Input$variants$flush = Input.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled2(props) {
    var _Input$variants$fille;
    return (_Input$variants$fille = Input.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty = Input.variants.unstyled.field) != null ? _Input$variants$unsty : {}
};
var sizes2 = {
  xs: (_Input$sizes$xs$field = Input.sizes.xs.field) != null ? _Input$sizes$xs$field : {},
  sm: (_Input$sizes$sm$field = Input.sizes.sm.field) != null ? _Input$sizes$sm$field : {},
  md: (_Input$sizes$md$field = Input.sizes.md.field) != null ? _Input$sizes$md$field : {},
  lg: (_Input$sizes$lg$field = Input.sizes.lg.field) != null ? _Input$sizes$lg$field : {}
};
var defaultProps = {
  size: "md",
  variant: "outline"
};
var Textarea = {
  baseStyle: baseStyle$1,
  sizes: sizes2,
  variants,
  defaultProps
};
var $bg = cssVar2("tooltip-bg");
var $arrowBg = cssVar2("popper-arrow-bg");
var baseStyle20 = function baseStyle21(props) {
  var _ref2;
  var bg = mode("gray.700", "gray.300")(props);
  return _ref2 = {}, _ref2[$bg.variable] = "colors." + bg, _ref2.px = "8px", _ref2.py = "2px", _ref2.bg = [$bg.reference], _ref2[$arrowBg.variable] = [$bg.reference], _ref2.color = mode("whiteAlpha.900", "gray.900")(props), _ref2.borderRadius = "sm", _ref2.fontWeight = "medium", _ref2.fontSize = "sm", _ref2.boxShadow = "md", _ref2.maxW = "320px", _ref2.zIndex = "tooltip", _ref2;
};
var Tooltip = {
  baseStyle: baseStyle20
};
var components = {
  Accordion,
  Alert,
  Avatar,
  Badge,
  Breadcrumb,
  Button,
  Checkbox,
  CloseButton,
  Code,
  Container: Container3,
  Divider,
  Drawer,
  Editable,
  Form,
  FormError,
  FormLabel,
  Heading,
  Input,
  Kbd,
  Link,
  List,
  Menu,
  Modal,
  NumberInput,
  PinInput,
  Popover,
  Progress,
  Radio,
  Select,
  Skeleton,
  SkipLink,
  Slider,
  Spinner,
  Stat,
  Switch,
  Table,
  Tabs,
  Tag,
  Textarea,
  Tooltip
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/borders/dist/chakra-ui-theme-foundations-borders.esm.js
var borders = {
  none: 0,
  "1px": "1px solid",
  "2px": "2px solid",
  "4px": "4px solid",
  "8px": "8px solid"
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/breakpoints/dist/chakra-ui-theme-foundations-breakpoints.esm.js
var breakpoints3 = createBreakpoints({
  sm: "30em",
  md: "48em",
  lg: "62em",
  xl: "80em",
  "2xl": "96em"
});

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/colors/dist/chakra-ui-theme-foundations-colors.esm.js
var colors = {
  transparent: "transparent",
  current: "currentColor",
  black: "#000000",
  white: "#FFFFFF",
  whiteAlpha: {
    50: "rgba(255, 255, 255, 0.04)",
    100: "rgba(255, 255, 255, 0.06)",
    200: "rgba(255, 255, 255, 0.08)",
    300: "rgba(255, 255, 255, 0.16)",
    400: "rgba(255, 255, 255, 0.24)",
    500: "rgba(255, 255, 255, 0.36)",
    600: "rgba(255, 255, 255, 0.48)",
    700: "rgba(255, 255, 255, 0.64)",
    800: "rgba(255, 255, 255, 0.80)",
    900: "rgba(255, 255, 255, 0.92)"
  },
  blackAlpha: {
    50: "rgba(0, 0, 0, 0.04)",
    100: "rgba(0, 0, 0, 0.06)",
    200: "rgba(0, 0, 0, 0.08)",
    300: "rgba(0, 0, 0, 0.16)",
    400: "rgba(0, 0, 0, 0.24)",
    500: "rgba(0, 0, 0, 0.36)",
    600: "rgba(0, 0, 0, 0.48)",
    700: "rgba(0, 0, 0, 0.64)",
    800: "rgba(0, 0, 0, 0.80)",
    900: "rgba(0, 0, 0, 0.92)"
  },
  gray: {
    50: "#F7FAFC",
    100: "#EDF2F7",
    200: "#E2E8F0",
    300: "#CBD5E0",
    400: "#A0AEC0",
    500: "#718096",
    600: "#4A5568",
    700: "#2D3748",
    800: "#1A202C",
    900: "#171923"
  },
  red: {
    50: "#FFF5F5",
    100: "#FED7D7",
    200: "#FEB2B2",
    300: "#FC8181",
    400: "#F56565",
    500: "#E53E3E",
    600: "#C53030",
    700: "#9B2C2C",
    800: "#822727",
    900: "#63171B"
  },
  orange: {
    50: "#FFFAF0",
    100: "#FEEBC8",
    200: "#FBD38D",
    300: "#F6AD55",
    400: "#ED8936",
    500: "#DD6B20",
    600: "#C05621",
    700: "#9C4221",
    800: "#7B341E",
    900: "#652B19"
  },
  yellow: {
    50: "#FFFFF0",
    100: "#FEFCBF",
    200: "#FAF089",
    300: "#F6E05E",
    400: "#ECC94B",
    500: "#D69E2E",
    600: "#B7791F",
    700: "#975A16",
    800: "#744210",
    900: "#5F370E"
  },
  green: {
    50: "#F0FFF4",
    100: "#C6F6D5",
    200: "#9AE6B4",
    300: "#68D391",
    400: "#48BB78",
    500: "#38A169",
    600: "#2F855A",
    700: "#276749",
    800: "#22543D",
    900: "#1C4532"
  },
  teal: {
    50: "#E6FFFA",
    100: "#B2F5EA",
    200: "#81E6D9",
    300: "#4FD1C5",
    400: "#38B2AC",
    500: "#319795",
    600: "#2C7A7B",
    700: "#285E61",
    800: "#234E52",
    900: "#1D4044"
  },
  blue: {
    50: "#ebf8ff",
    100: "#bee3f8",
    200: "#90cdf4",
    300: "#63b3ed",
    400: "#4299e1",
    500: "#3182ce",
    600: "#2b6cb0",
    700: "#2c5282",
    800: "#2a4365",
    900: "#1A365D"
  },
  cyan: {
    50: "#EDFDFD",
    100: "#C4F1F9",
    200: "#9DECF9",
    300: "#76E4F7",
    400: "#0BC5EA",
    500: "#00B5D8",
    600: "#00A3C4",
    700: "#0987A0",
    800: "#086F83",
    900: "#065666"
  },
  purple: {
    50: "#FAF5FF",
    100: "#E9D8FD",
    200: "#D6BCFA",
    300: "#B794F4",
    400: "#9F7AEA",
    500: "#805AD5",
    600: "#6B46C1",
    700: "#553C9A",
    800: "#44337A",
    900: "#322659"
  },
  pink: {
    50: "#FFF5F7",
    100: "#FED7E2",
    200: "#FBB6CE",
    300: "#F687B3",
    400: "#ED64A6",
    500: "#D53F8C",
    600: "#B83280",
    700: "#97266D",
    800: "#702459",
    900: "#521B41"
  },
  linkedin: {
    50: "#E8F4F9",
    100: "#CFEDFB",
    200: "#9BDAF3",
    300: "#68C7EC",
    400: "#34B3E4",
    500: "#00A0DC",
    600: "#008CC9",
    700: "#0077B5",
    800: "#005E93",
    900: "#004471"
  },
  facebook: {
    50: "#E8F4F9",
    100: "#D9DEE9",
    200: "#B7C2DA",
    300: "#6482C0",
    400: "#4267B2",
    500: "#385898",
    600: "#314E89",
    700: "#29487D",
    800: "#223B67",
    900: "#1E355B"
  },
  messenger: {
    50: "#D0E6FF",
    100: "#B9DAFF",
    200: "#A2CDFF",
    300: "#7AB8FF",
    400: "#2E90FF",
    500: "#0078FF",
    600: "#0063D1",
    700: "#0052AC",
    800: "#003C7E",
    900: "#002C5C"
  },
  whatsapp: {
    50: "#dffeec",
    100: "#b9f5d0",
    200: "#90edb3",
    300: "#65e495",
    400: "#3cdd78",
    500: "#22c35e",
    600: "#179848",
    700: "#0c6c33",
    800: "#01421c",
    900: "#001803"
  },
  twitter: {
    50: "#E5F4FD",
    100: "#C8E9FB",
    200: "#A8DCFA",
    300: "#83CDF7",
    400: "#57BBF5",
    500: "#1DA1F2",
    600: "#1A94DA",
    700: "#1681BF",
    800: "#136B9E",
    900: "#0D4D71"
  },
  telegram: {
    50: "#E3F2F9",
    100: "#C5E4F3",
    200: "#A2D4EC",
    300: "#7AC1E4",
    400: "#47A9DA",
    500: "#0088CC",
    600: "#007AB8",
    700: "#006BA1",
    800: "#005885",
    900: "#003F5E"
  }
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/radius/dist/chakra-ui-theme-foundations-radius.esm.js
var radii = {
  none: "0",
  sm: "0.125rem",
  base: "0.25rem",
  md: "0.375rem",
  lg: "0.5rem",
  xl: "0.75rem",
  "2xl": "1rem",
  "3xl": "1.5rem",
  full: "9999px"
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/shadows/dist/chakra-ui-theme-foundations-shadows.esm.js
var shadows = {
  xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
  sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
  base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
  md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
  lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
  xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
  "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
  outline: "0 0 0 3px rgba(66, 153, 225, 0.6)",
  inner: "inset 0 2px 4px 0 rgba(0,0,0,0.06)",
  none: "none",
  "dark-lg": "rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/transition/dist/chakra-ui-theme-foundations-transition.esm.js
var transitionProperty = {
  common: "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
  colors: "background-color, border-color, color, fill, stroke",
  dimensions: "width, height",
  position: "left, right, top, bottom",
  background: "background-color, background-image, background-position"
};
var transitionTimingFunction = {
  "ease-in": "cubic-bezier(0.4, 0, 1, 1)",
  "ease-out": "cubic-bezier(0, 0, 0.2, 1)",
  "ease-in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
};
var transitionDuration = {
  "ultra-fast": "50ms",
  faster: "100ms",
  fast: "150ms",
  normal: "200ms",
  slow: "300ms",
  slower: "400ms",
  "ultra-slow": "500ms"
};
var transition3 = {
  property: transitionProperty,
  easing: transitionTimingFunction,
  duration: transitionDuration
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/z-index/dist/chakra-ui-theme-foundations-z-index.esm.js
var zIndices = {
  hide: -1,
  auto: "auto",
  base: 0,
  docked: 10,
  dropdown: 1e3,
  sticky: 1100,
  banner: 1200,
  overlay: 1300,
  modal: 1400,
  popover: 1500,
  skipLink: 1600,
  toast: 1700,
  tooltip: 1800
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/blur/dist/chakra-ui-theme-foundations-blur.esm.js
var blur2 = {
  none: 0,
  sm: "4px",
  base: "8px",
  md: "12px",
  lg: "16px",
  xl: "24px",
  "2xl": "40px",
  "3xl": "64px"
};

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/dist/chakra-ui-theme-foundations.esm.js
var foundations = _extends8({
  breakpoints: breakpoints3,
  zIndices,
  radii,
  blur: blur2,
  colors
}, typography2, {
  sizes,
  shadows,
  space: spacing,
  borders,
  transition: transition3
});

// node_modules/.pnpm/@chakra-ui+theme@2.1.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/dist/chakra-ui-theme.esm.js
var semanticTokens = {
  colors: {
    "chakra-body-text": {
      _light: "gray.800",
      _dark: "whiteAlpha.900"
    },
    "chakra-body-bg": {
      _light: "white",
      _dark: "gray.800"
    },
    "chakra-border-color": {
      _light: "gray.200",
      _dark: "whiteAlpha.300"
    },
    "chakra-placeholder-color": {
      _light: "gray.500",
      _dark: "whiteAlpha.400"
    }
  }
};
var styles = {
  global: {
    body: {
      fontFamily: "body",
      color: "chakra-body-text",
      bg: "chakra-body-bg",
      transitionProperty: "background-color",
      transitionDuration: "normal",
      lineHeight: "base"
    },
    "*::placeholder": {
      color: "chakra-placeholder-color"
    },
    "*, *::before, &::after": {
      borderColor: "chakra-border-color",
      wordWrap: "break-word"
    }
  }
};
var styles$1 = styles;
var requiredChakraThemeKeys = ["borders", "breakpoints", "colors", "components", "config", "direction", "fonts", "fontSizes", "fontWeights", "letterSpacings", "lineHeights", "radii", "shadows", "sizes", "space", "styles", "transition", "zIndices"];
function isChakraTheme(unit) {
  if (!isObject2(unit)) {
    return false;
  }
  return requiredChakraThemeKeys.every(function(propertyName) {
    return Object.prototype.hasOwnProperty.call(unit, propertyName);
  });
}
var direction = "ltr";
var config = {
  useSystemColorMode: false,
  initialColorMode: "light",
  cssVarPrefix: "chakra"
};
var theme = _extends8({
  semanticTokens,
  direction
}, foundations, {
  components,
  styles: styles$1,
  config
});

// node_modules/.pnpm/@chakra-ui+icon@2.0.5_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/icon/dist/chakra-ui-icon.esm.js
var React18 = __toESM(require_react());
function _extends14() {
  _extends14 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends14.apply(this, arguments);
}
function _objectWithoutPropertiesLoose8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded7 = ["as", "viewBox", "color", "focusable", "children", "className", "__css"];
var fallbackIcon = {
  path: React18.createElement("g", {
    stroke: "currentColor",
    strokeWidth: "1.5"
  }, React18.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    d: "M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
  }), React18.createElement("path", {
    fill: "currentColor",
    strokeLinecap: "round",
    d: "M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
  }), React18.createElement("circle", {
    fill: "none",
    strokeMiterlimit: "10",
    cx: "12",
    cy: "12",
    r: "11.25"
  })),
  viewBox: "0 0 24 24"
};
var Icon = forwardRef5(function(props, ref) {
  var element = props.as, viewBox = props.viewBox, _props$color = props.color, color4 = _props$color === void 0 ? "currentColor" : _props$color, _props$focusable = props.focusable, focusable = _props$focusable === void 0 ? false : _props$focusable, children = props.children, className = props.className, __css = props.__css, rest = _objectWithoutPropertiesLoose8(props, _excluded7);
  var _className = cx("chakra-icon", className);
  var styles3 = _extends14({
    w: "1em",
    h: "1em",
    display: "inline-block",
    lineHeight: "1em",
    flexShrink: 0,
    color: color4
  }, __css);
  var shared = {
    ref,
    focusable,
    className: _className,
    __css: styles3
  };
  var _viewBox = viewBox != null ? viewBox : fallbackIcon.viewBox;
  if (element && typeof element !== "string") {
    return React18.createElement(chakra2.svg, _extends14({
      as: element
    }, shared, rest));
  }
  var _path = children != null ? children : fallbackIcon.path;
  return React18.createElement(chakra2.svg, _extends14({
    verticalAlign: "middle",
    viewBox: _viewBox
  }, shared, rest), _path);
});
if (__DEV__) {
  Icon.displayName = "Icon";
}
var Icon$1 = Icon;
function createIcon(options) {
  var _options$viewBox = options.viewBox, viewBox = _options$viewBox === void 0 ? "0 0 24 24" : _options$viewBox, pathDefinition = options.d, displayName = options.displayName, _options$defaultProps = options.defaultProps, defaultProps3 = _options$defaultProps === void 0 ? {} : _options$defaultProps;
  var path = React18.Children.toArray(options.path);
  var Comp = forwardRef5(function(props, ref) {
    return React18.createElement(Icon, _extends14({
      ref,
      viewBox
    }, defaultProps3, props), path.length ? path : React18.createElement("path", {
      fill: "currentColor",
      d: pathDefinition
    }));
  });
  if (__DEV__) {
    Comp.displayName = displayName;
  }
  return Comp;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/index.mjs
var React20 = __toESM(require_react(), 1);
var import_react34 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var React19 = __toESM(require_react(), 1);
var import_react20 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/process.mjs
var defaultEnvironment = "production";
var env = typeof process === "undefined" || process.env === void 0 ? defaultEnvironment : "development";

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var createDefinition = function(propNames3) {
  return {
    isEnabled: function(props) {
      return propNames3.some(function(name) {
        return !!props[name];
      });
    }
  };
};
var featureDefinitions = {
  measureLayout: createDefinition(["layout", "layoutId", "drag"]),
  animation: createDefinition([
    "animate",
    "exit",
    "variants",
    "whileHover",
    "whileTap",
    "whileFocus",
    "whileDrag",
    "whileInView"
  ]),
  exit: createDefinition(["exit"]),
  drag: createDefinition(["drag", "dragControls"]),
  focus: createDefinition(["whileFocus"]),
  hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
  tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
  pan: createDefinition([
    "onPan",
    "onPanStart",
    "onPanSessionStart",
    "onPanEnd"
  ]),
  inView: createDefinition([
    "whileInView",
    "onViewportEnter",
    "onViewportLeave"
  ])
};
function loadFeatures(features) {
  for (var key in features) {
    if (features[key] === null)
      continue;
    if (key === "projectionNodeConstructor") {
      featureDefinitions.projectionNodeConstructor = features[key];
    } else {
      featureDefinitions[key].Component = features[key];
    }
  }
}

// node_modules/.pnpm/hey-listen@1.0.8/node_modules/hey-listen/dist/hey-listen.es.js
var warning = function() {
};
var invariant2 = function() {
};
if (true) {
  warning = function(check, message) {
    if (!check && typeof console !== "undefined") {
      console.warn(message);
    }
  };
  invariant2 = function(check, message) {
    if (!check) {
      throw new Error(message);
    }
  };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react19 = __toESM(require_react(), 1);
var LazyContext = (0, import_react19.createContext)({ strict: false });

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var featureNames = Object.keys(featureDefinitions);
var numFeatures = featureNames.length;
function useFeatures(props, visualElement2, preloadedFeatures) {
  var features = [];
  var lazyContext = (0, import_react20.useContext)(LazyContext);
  if (!visualElement2)
    return null;
  if (env !== "production" && preloadedFeatures && lazyContext.strict) {
    invariant2(false, "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.");
  }
  for (var i = 0; i < numFeatures; i++) {
    var name_1 = featureNames[i];
    var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component2 = _a.Component;
    if (isEnabled(props) && Component2) {
      features.push(React19.createElement(Component2, __assign({ key: name_1 }, props, { visualElement: visualElement2 })));
    }
  }
  return features;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react21 = __toESM(require_react(), 1);
var MotionConfigContext = (0, import_react21.createContext)({
  transformPagePoint: function(p) {
    return p;
  },
  isStatic: false,
  reducedMotion: "never"
});

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react22 = __toESM(require_react(), 1);
var MotionContext = (0, import_react22.createContext)({});
function useVisualElementContext() {
  return (0, import_react22.useContext)(MotionContext).visualElement;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react26 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react23 = __toESM(require_react(), 1);
var PresenceContext = (0, import_react23.createContext)(null);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react24 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser4 = typeof document !== "undefined";

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect = isBrowser4 ? import_react24.useLayoutEffect : import_react24.useEffect;

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-reduced-motion.mjs
var import_react25 = __toESM(require_react(), 1);
var prefersReducedMotion = { current: null };
var hasDetected = false;
function initPrefersReducedMotion() {
  hasDetected = true;
  if (!isBrowser4)
    return;
  if (window.matchMedia) {
    var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)");
    var setReducedMotionPreferences = function() {
      return prefersReducedMotion.current = motionMediaQuery_1.matches;
    };
    motionMediaQuery_1.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}
function useReducedMotion() {
  !hasDetected && initPrefersReducedMotion();
  var _a = __read((0, import_react25.useState)(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];
  return shouldReduceMotion;
}
function useReducedMotionConfig() {
  var reducedMotionPreference = useReducedMotion();
  var reducedMotion = (0, import_react25.useContext)(MotionConfigContext).reducedMotion;
  if (reducedMotion === "never") {
    return false;
  } else if (reducedMotion === "always") {
    return true;
  } else {
    return reducedMotionPreference;
  }
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component2, visualState, props, createVisualElement) {
  var lazyContext = (0, import_react26.useContext)(LazyContext);
  var parent = useVisualElementContext();
  var presenceContext = (0, import_react26.useContext)(PresenceContext);
  var shouldReduceMotion = useReducedMotionConfig();
  var visualElementRef = (0, import_react26.useRef)(void 0);
  if (!createVisualElement)
    createVisualElement = lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component2, {
      visualState,
      parent,
      props,
      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,
      shouldReduceMotion
    });
  }
  var visualElement2 = visualElementRef.current;
  useIsomorphicLayoutEffect(function() {
    visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
  });
  (0, import_react26.useEffect)(function() {
    var _a;
    (_a = visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();
  });
  useIsomorphicLayoutEffect(function() {
    return function() {
      return visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.notifyUnmount();
    };
  }, []);
  return visualElement2;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react27 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject3(ref) {
  return typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement2, externalRef) {
  return (0, import_react27.useCallback)(function(instance) {
    var _a;
    instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));
    if (visualElement2) {
      instance ? visualElement2.mount(instance) : visualElement2.unmount();
    }
    if (externalRef) {
      if (typeof externalRef === "function") {
        externalRef(instance);
      } else if (isRefObject3(externalRef)) {
        externalRef.current = instance;
      }
    }
  }, [visualElement2]);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react28 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/variants.mjs
function isVariantLabels(v) {
  return Array.isArray(v);
}
function isVariantLabel(v) {
  return typeof v === "string" || isVariantLabels(v);
}
function getCurrent(visualElement2) {
  var current = {};
  visualElement2.forEachValue(function(value, key) {
    return current[key] = value.get();
  });
  return current;
}
function getVelocity3(visualElement2) {
  var velocity = {};
  visualElement2.forEachValue(function(value, key) {
    return velocity[key] = value.getVelocity();
  });
  return velocity;
}
function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
  var _a;
  if (currentValues === void 0) {
    currentValues = {};
  }
  if (currentVelocity === void 0) {
    currentVelocity = {};
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  if (typeof definition === "string") {
    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  return definition;
}
function resolveVariant(visualElement2, definition, custom) {
  var props = visualElement2.getProps();
  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement2), getVelocity3(visualElement2));
}
function checkIfControllingVariants(props) {
  var _a;
  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
}
function checkIfVariantNode(props) {
  return Boolean(checkIfControllingVariants(props) || props.variants);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (checkIfControllingVariants(props)) {
    var initial3 = props.initial, animate3 = props.animate;
    return {
      initial: initial3 === false || isVariantLabel(initial3) ? initial3 : void 0,
      animate: isVariantLabel(animate3) ? animate3 : void 0
    };
  }
  return props.inherit !== false ? context : {};
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  var _a = getCurrentTreeVariants(props, (0, import_react28.useContext)(MotionContext)), initial3 = _a.initial, animate3 = _a.animate;
  return (0, import_react28.useMemo)(function() {
    return { initial: initial3, animate: animate3 };
  }, [variantLabelsAsDependency(initial3), variantLabelsAsDependency(animate3)]);
}
function variantLabelsAsDependency(prop3) {
  return Array.isArray(prop3) ? prop3.join(" ") : prop3;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react29 = __toESM(require_react(), 1);
function useConstant(init) {
  var ref = (0, import_react29.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}

// node_modules/.pnpm/framesync@6.0.1/node_modules/framesync/dist/es/on-next-frame.mjs
var defaultTimestep2 = 1 / 60 * 1e3;
var getCurrentTime2 = typeof performance !== "undefined" ? () => performance.now() : () => Date.now();
var onNextFrame2 = typeof window !== "undefined" ? (callback) => window.requestAnimationFrame(callback) : (callback) => setTimeout(() => callback(getCurrentTime2()), defaultTimestep2);

// node_modules/.pnpm/framesync@6.0.1/node_modules/framesync/dist/es/create-render-step.mjs
function createRenderStep2(runNextFrame3) {
  let toRun = [];
  let toRunNextFrame = [];
  let numToRun = 0;
  let isProcessing3 = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  const step = {
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing3;
      const buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (buffer.indexOf(callback) === -1) {
        buffer.push(callback);
        if (addToCurrentFrame && isProcessing3)
          numToRun = toRun.length;
      }
      return callback;
    },
    cancel: (callback) => {
      const index2 = toRunNextFrame.indexOf(callback);
      if (index2 !== -1)
        toRunNextFrame.splice(index2, 1);
      toKeepAlive.delete(callback);
    },
    process: (frameData) => {
      if (isProcessing3) {
        flushNextFrame = true;
        return;
      }
      isProcessing3 = true;
      [toRun, toRunNextFrame] = [toRunNextFrame, toRun];
      toRunNextFrame.length = 0;
      numToRun = toRun.length;
      if (numToRun) {
        for (let i = 0; i < numToRun; i++) {
          const callback = toRun[i];
          callback(frameData);
          if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame3();
          }
        }
      }
      isProcessing3 = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData);
      }
    }
  };
  return step;
}

// node_modules/.pnpm/framesync@6.0.1/node_modules/framesync/dist/es/index.mjs
var maxElapsed2 = 40;
var useDefaultElapsed2 = true;
var runNextFrame2 = false;
var isProcessing2 = false;
var frame2 = {
  delta: 0,
  timestamp: 0
};
var stepsOrder2 = [
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
];
var steps2 = stepsOrder2.reduce((acc, key) => {
  acc[key] = createRenderStep2(() => runNextFrame2 = true);
  return acc;
}, {});
var sync2 = stepsOrder2.reduce((acc, key) => {
  const step = steps2[key];
  acc[key] = (process2, keepAlive = false, immediate = false) => {
    if (!runNextFrame2)
      startLoop2();
    return step.schedule(process2, keepAlive, immediate);
  };
  return acc;
}, {});
var cancelSync2 = stepsOrder2.reduce((acc, key) => {
  acc[key] = steps2[key].cancel;
  return acc;
}, {});
var flushSync2 = stepsOrder2.reduce((acc, key) => {
  acc[key] = () => steps2[key].process(frame2);
  return acc;
}, {});
var processStep2 = (stepId) => steps2[stepId].process(frame2);
var processFrame2 = (timestamp) => {
  runNextFrame2 = false;
  frame2.delta = useDefaultElapsed2 ? defaultTimestep2 : Math.max(Math.min(timestamp - frame2.timestamp, maxElapsed2), 1);
  frame2.timestamp = timestamp;
  isProcessing2 = true;
  stepsOrder2.forEach(processStep2);
  isProcessing2 = false;
  if (runNextFrame2) {
    useDefaultElapsed2 = false;
    onNextFrame2(processFrame2);
  }
};
var startLoop2 = () => {
  runNextFrame2 = true;
  useDefaultElapsed2 = true;
  if (!isProcessing2)
    onNextFrame2(processFrame2);
};
var getFrameData2 = () => frame2;
var es_default2 = sync2;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/clamp.mjs
var clamp = (min2, max2, v) => Math.min(Math.max(v, min2), max2);

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/utils/find-spring.mjs
var safeMin = 1e-3;
var minDuration = 0.01;
var maxDuration = 10;
var minDamping = 0.05;
var maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope;
  let derivative;
  warning(duration <= maxDuration * 1e3, "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);
  duration = clamp(minDuration, maxDuration, duration / 1e3);
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a2 = exponentialDecay - velocity;
      const b2 = calcAngularFreq(undampedFreq2, dampingRatio);
      const c2 = Math.exp(-delta);
      return safeMin - a2 / b2 * c2;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d = delta * velocity + velocity;
      const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f = Math.exp(-delta);
      const g = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d - e) * f) / g;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a2 = Math.exp(-undampedFreq2 * duration);
      const b2 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a2 * b2;
    };
    derivative = (undampedFreq2) => {
      const a2 = Math.exp(-undampedFreq2 * duration);
      const b2 = (velocity - undampedFreq2) * (duration * duration);
      return a2 * b2;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = duration * 1e3;
  if (isNaN(undampedFreq)) {
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i = 1; i < rootIterations; i++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/generators/spring.mjs
var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys4) {
  return keys4.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = Object.assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    const derived = findSpring(options);
    springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0, mass: 1 });
    springOptions.isResolvedFromDuration = true;
  }
  return springOptions;
}
function spring(_a) {
  var { from: from2 = 0, to = 1, restSpeed = 2, restDelta } = _a, options = __rest(_a, ["from", "to", "restSpeed", "restDelta"]);
  const state3 = { done: false, value: from2 };
  let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options);
  let resolveSpring = zero;
  let resolveVelocity = zero;
  function createSpring() {
    const initialVelocity = velocity ? -(velocity / 1e3) : 0;
    const initialDelta = to - from2;
    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
    if (restDelta === void 0) {
      restDelta = Math.min(Math.abs(to - from2) / 100, 0.4);
    }
    if (dampingRatio < 1) {
      const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
      resolveSpring = (t3) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t3);
        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t3) + initialDelta * Math.cos(angularFreq * t3));
      };
      resolveVelocity = (t3) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t3);
        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t3) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t3)) - envelope * (Math.cos(angularFreq * t3) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t3));
      };
    } else if (dampingRatio === 1) {
      resolveSpring = (t3) => to - Math.exp(-undampedAngularFreq * t3) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t3);
    } else {
      const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
      resolveSpring = (t3) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t3);
        const freqForT = Math.min(dampedAngularFreq * t3, 300);
        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
      };
    }
  }
  createSpring();
  return {
    next: (t3) => {
      const current = resolveSpring(t3);
      if (!isResolvedFromDuration) {
        const currentVelocity = resolveVelocity(t3) * 1e3;
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
        state3.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state3.done = t3 >= duration;
      }
      state3.value = state3.done ? to : current;
      return state3;
    },
    flipTarget: () => {
      velocity = -velocity;
      [from2, to] = [to, from2];
      createSpring();
    }
  };
}
spring.needsInterpolation = (a2, b2) => typeof a2 === "string" || typeof b2 === "string";
var zero = (_t) => 0;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/progress.mjs
var progress = (from2, to, value) => {
  const toFromDifference = to - from2;
  return toFromDifference === 0 ? 1 : (value - from2) / toFromDifference;
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/mix.mjs
var mix = (from2, to, progress4) => -progress4 * from2 + progress4 * to + from2;

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/utils.mjs
var clamp2 = (min2, max2) => (v) => Math.max(Math.min(v, max2), min2);
var sanitize = (v) => v % 1 ? Number(v.toFixed(5)) : v;
var floatRegex = /(-)?([\d]*\.?[\d])+/g;
var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString3(v) {
  return typeof v === "string";
}

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/numbers/index.mjs
var number = {
  test: (v) => typeof v === "number",
  parse: parseFloat,
  transform: (v) => v
};
var alpha = Object.assign(Object.assign({}, number), { transform: clamp2(0, 1) });
var scale = Object.assign(Object.assign({}, number), { default: 1 });

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v) => isString3(v) && v.endsWith(unit) && v.split(" ").length === 1,
  parse: parseFloat,
  transform: (v) => `${v}${unit}`
});
var degrees = createUnitType("deg");
var percent = createUnitType("%");
var px5 = createUnitType("px");
var vh = createUnitType("vh");
var vw = createUnitType("vw");
var progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/utils.mjs
var isColorString = (type, testProp) => (v) => {
  return Boolean(isString3(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));
};
var splitColor = (aName, bName, cName) => (v) => {
  if (!isString3(v))
    return v;
  const [a2, b2, c2, alpha2] = v.match(floatRegex);
  return {
    [aName]: parseFloat(a2),
    [bName]: parseFloat(b2),
    [cName]: parseFloat(c2),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/rgba.mjs
var clampRgbUnit = clamp2(0, 255);
var rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });
var rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/hex.mjs
function parseHex(v) {
  let r = "";
  let g = "";
  let b2 = "";
  let a2 = "";
  if (v.length > 5) {
    r = v.substr(1, 2);
    g = v.substr(3, 2);
    b2 = v.substr(5, 2);
    a2 = v.substr(7, 2);
  } else {
    r = v.substr(1, 1);
    g = v.substr(2, 1);
    b2 = v.substr(3, 1);
    a2 = v.substr(4, 1);
    r += r;
    g += g;
    b2 += b2;
    a2 += a2;
  }
  return {
    red: parseInt(r, 16),
    green: parseInt(g, 16),
    blue: parseInt(b2, 16),
    alpha: a2 ? parseInt(a2, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/index.mjs
var color3 = {
  test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),
  parse: (v) => {
    if (rgba.test(v)) {
      return rgba.parse(v);
    } else if (hsla.test(v)) {
      return hsla.parse(v);
    } else {
      return hex.parse(v);
    }
  },
  transform: (v) => {
    return isString3(v) ? v : v.hasOwnProperty("red") ? rgba.transform(v) : hsla.transform(v);
  }
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/complex/index.mjs
var colorToken = "${c}";
var numberToken = "${n}";
function test(v) {
  var _a, _b, _c, _d;
  return isNaN(v) && isString3(v) && ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
}
function analyse(v) {
  if (typeof v === "number")
    v = `${v}`;
  const values = [];
  let numColors = 0;
  const colors3 = v.match(colorRegex);
  if (colors3) {
    numColors = colors3.length;
    v = v.replace(colorRegex, colorToken);
    values.push(...colors3.map(color3.parse));
  }
  const numbers = v.match(floatRegex);
  if (numbers) {
    v = v.replace(floatRegex, numberToken);
    values.push(...numbers.map(number.parse));
  }
  return { values, numColors, tokenised: v };
}
function parse4(v) {
  return analyse(v).values;
}
function createTransformer(v) {
  const { values, numColors, tokenised } = analyse(v);
  const numValues = values.length;
  return (v2) => {
    let output = tokenised;
    for (let i = 0; i < numValues; i++) {
      output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color3.transform(v2[i]) : sanitize(v2[i]));
    }
    return output;
  };
}
var convertNumbersToZero = (v) => typeof v === "number" ? 0 : v;
function getAnimatableNone(v) {
  const parsed = parse4(v);
  const transformer = createTransformer(v);
  return transformer(parsed.map(convertNumbersToZero));
}
var complex = { test, parse: parse4, createTransformer, getAnimatableNone };

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v) {
  let [name, value] = v.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v;
  const [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v;
  const unit = value.replace(number2, "");
  let defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g;
var filter5 = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {
  const functions = v.match(functionRegex);
  return functions ? functions.map(applyDefaultFilter).join(" ") : v;
} });

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p, q, t3) {
  if (t3 < 0)
    t3 += 1;
  if (t3 > 1)
    t3 -= 1;
  if (t3 < 1 / 6)
    return p + (q - p) * 6 * t3;
  if (t3 < 1 / 2)
    return q;
  if (t3 < 2 / 3)
    return p + (q - p) * (2 / 3 - t3) * 6;
  return p;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p = 2 * lightness - q;
    red = hueToRgb(p, q, hue + 1 / 3);
    green = hueToRgb(p, q, hue);
    blue = hueToRgb(p, q, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/mix-color.mjs
var mixLinearColor = (from2, to, v) => {
  const fromExpo = from2 * from2;
  const toExpo = to * to;
  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));
};
var colorTypes = [hex, rgba, hsla];
var getColorType = (v) => colorTypes.find((type) => type.test(v));
var notAnimatable = (color4) => `'${color4}' is not an animatable color. Use the equivalent color code instead.`;
var mixColor = (from2, to) => {
  let fromColorType = getColorType(from2);
  let toColorType = getColorType(to);
  invariant2(!!fromColorType, notAnimatable(from2));
  invariant2(!!toColorType, notAnimatable(to));
  let fromColor = fromColorType.parse(from2);
  let toColor = toColorType.parse(to);
  if (fromColorType === hsla) {
    fromColor = hslaToRgba(fromColor);
    fromColorType = rgba;
  }
  if (toColorType === hsla) {
    toColor = hslaToRgba(toColor);
    toColorType = rgba;
  }
  const blended = Object.assign({}, fromColor);
  return (v) => {
    for (const key in blended) {
      if (key !== "alpha") {
        blended[key] = mixLinearColor(fromColor[key], toColor[key], v);
      }
    }
    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);
    return fromColorType.transform(blended);
  };
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/inc.mjs
var isNum = (v) => typeof v === "number";

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/pipe.mjs
var combineFunctions = (a2, b2) => (v) => b2(a2(v));
var pipe5 = (...transformers) => transformers.reduce(combineFunctions);

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/mix-complex.mjs
function getMixer(origin, target) {
  if (isNum(origin)) {
    return (v) => mix(origin, target, v);
  } else if (color3.test(origin)) {
    return mixColor(origin, target);
  } else {
    return mixComplex(origin, target);
  }
}
var mixArray = (from2, to) => {
  const output = [...from2];
  const numValues = output.length;
  const blendValue = from2.map((fromThis, i) => getMixer(fromThis, to[i]));
  return (v) => {
    for (let i = 0; i < numValues; i++) {
      output[i] = blendValue[i](v);
    }
    return output;
  };
};
var mixObject = (origin, target) => {
  const output = Object.assign(Object.assign({}, origin), target);
  const blendValue = {};
  for (const key in output) {
    if (origin[key] !== void 0 && target[key] !== void 0) {
      blendValue[key] = getMixer(origin[key], target[key]);
    }
  }
  return (v) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v);
    }
    return output;
  };
};
function analyse2(value) {
  const parsed = complex.parse(value);
  const numValues = parsed.length;
  let numNumbers = 0;
  let numRGB = 0;
  let numHSL = 0;
  for (let i = 0; i < numValues; i++) {
    if (numNumbers || typeof parsed[i] === "number") {
      numNumbers++;
    } else {
      if (parsed[i].hue !== void 0) {
        numHSL++;
      } else {
        numRGB++;
      }
    }
  }
  return { parsed, numNumbers, numRGB, numHSL };
}
var mixComplex = (origin, target) => {
  const template = complex.createTransformer(target);
  const originStats = analyse2(origin);
  const targetStats = analyse2(target);
  const canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;
  if (canInterpolate) {
    return pipe5(mixArray(originStats.parsed, targetStats.parsed), template);
  } else {
    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
    return (p) => `${p > 0 ? target : origin}`;
  }
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/interpolate.mjs
var mixNumber = (from2, to) => (p) => mix(from2, to, p);
function detectMixerFactory(v) {
  if (typeof v === "number") {
    return mixNumber;
  } else if (typeof v === "string") {
    if (color3.test(v)) {
      return mixColor;
    } else {
      return mixComplex;
    }
  } else if (Array.isArray(v)) {
    return mixArray;
  } else if (typeof v === "object") {
    return mixObject;
  }
}
function createMixers(output, ease, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || detectMixerFactory(output[0]);
  const numMixers = output.length - 1;
  for (let i = 0; i < numMixers; i++) {
    let mixer = mixerFactory(output[i], output[i + 1]);
    if (ease) {
      const easingFunction = Array.isArray(ease) ? ease[i] : ease;
      mixer = pipe5(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function fastInterpolate([from2, to], [mixer]) {
  return (v) => mixer(progress(from2, to, v));
}
function slowInterpolate(input, mixers) {
  const inputLength = input.length;
  const lastInputIndex = inputLength - 1;
  return (v) => {
    let mixerIndex = 0;
    let foundMixerIndex = false;
    if (v <= input[0]) {
      foundMixerIndex = true;
    } else if (v >= input[lastInputIndex]) {
      mixerIndex = lastInputIndex - 1;
      foundMixerIndex = true;
    }
    if (!foundMixerIndex) {
      let i = 1;
      for (; i < inputLength; i++) {
        if (input[i] > v || i === lastInputIndex) {
          break;
        }
      }
      mixerIndex = i - 1;
    }
    const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);
    return mixers[mixerIndex](progressInRange);
  };
}
function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
  const inputLength = input.length;
  invariant2(inputLength === output.length, "Both input and output ranges must be the same length");
  invariant2(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, "Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.");
  if (input[0] > input[inputLength - 1]) {
    input = [].concat(input);
    output = [].concat(output);
    input.reverse();
    output.reverse();
  }
  const mixers = createMixers(output, ease, mixer);
  const interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
  return isClamp ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v)) : interpolator;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/easing/utils.mjs
var reverseEasing = (easing) => (p) => 1 - easing(1 - p);
var mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;
var createExpoIn = (power) => (p) => Math.pow(p, power);
var createBackIn = (power) => (p) => p * p * ((power + 1) * p - power);
var createAnticipate = (power) => {
  const backEasing = createBackIn(power);
  return (p) => (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/easing/index.mjs
var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
var BOUNCE_FIRST_THRESHOLD = 4 / 11;
var BOUNCE_SECOND_THRESHOLD = 8 / 11;
var BOUNCE_THIRD_THRESHOLD = 9 / 10;
var linear = (p) => p;
var easeIn = createExpoIn(2);
var easeOut = reverseEasing(easeIn);
var easeInOut = mirrorEasing(easeIn);
var circIn = (p) => 1 - Math.sin(Math.acos(p));
var circOut = reverseEasing(circIn);
var circInOut = mirrorEasing(circOut);
var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
var backOut = reverseEasing(backIn);
var backInOut = mirrorEasing(backIn);
var anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
var ca = 4356 / 361;
var cb = 35442 / 1805;
var cc = 16061 / 1805;
var bounceOut = (p) => {
  if (p === 1 || p === 0)
    return p;
  const p2 = p * p;
  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;
};
var bounceIn = reverseEasing(bounceOut);
var bounceInOut = (p) => p < 0.5 ? 0.5 * (1 - bounceOut(1 - p * 2)) : 0.5 * bounceOut(p * 2 - 1) + 0.5;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function defaultOffset(values) {
  const numValues = values.length;
  return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);
}
function convertOffsetToTimes(offset2, duration) {
  return offset2.map((o) => o * duration);
}
function keyframes3({ from: from2 = 0, to = 1, ease, offset: offset2, duration = 300 }) {
  const state3 = { done: false, value: from2 };
  const values = Array.isArray(to) ? to : [from2, to];
  const times = convertOffsetToTimes(offset2 && offset2.length === values.length ? offset2 : defaultOffset(values), duration);
  function createInterpolator() {
    return interpolate(times, values, {
      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)
    });
  }
  let interpolator = createInterpolator();
  return {
    next: (t3) => {
      state3.value = interpolator(t3);
      state3.done = t3 >= duration;
      return state3;
    },
    flipTarget: () => {
      values.reverse();
      interpolator = createInterpolator();
    }
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/generators/decay.mjs
function decay({ velocity = 0, from: from2 = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget }) {
  const state3 = { done: false, value: from2 };
  let amplitude = power * velocity;
  const ideal = from2 + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - from2;
  return {
    next: (t3) => {
      const delta = -amplitude * Math.exp(-t3 / timeConstant);
      state3.done = !(delta > restDelta || delta < -restDelta);
      state3.value = state3.done ? target : target + delta;
      return state3;
    },
    flipTarget: () => {
    }
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs
var types = { keyframes: keyframes3, spring, decay };
function detectAnimationFromOptions(config3) {
  if (Array.isArray(config3.to)) {
    return keyframes3;
  } else if (types[config3.type]) {
    return types[config3.type];
  }
  const keys4 = new Set(Object.keys(config3));
  if (keys4.has("ease") || keys4.has("duration") && !keys4.has("dampingRatio")) {
    return keyframes3;
  } else if (keys4.has("dampingRatio") || keys4.has("stiffness") || keys4.has("mass") || keys4.has("damping") || keys4.has("restSpeed") || keys4.has("restDelta")) {
    return spring;
  }
  return keyframes3;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/utils/elapsed.mjs
function loopElapsed(elapsed, duration, delay = 0) {
  return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {
  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/index.mjs
var framesync = (update) => {
  const passTimestamp = ({ delta }) => update(delta);
  return {
    start: () => es_default2.update(passTimestamp, true),
    stop: () => cancelSync2.update(passTimestamp)
  };
};
function animate(_a) {
  var _b, _c;
  var { from: from2, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
  let { to } = options;
  let driverControls;
  let repeatCount = 0;
  let computedDuration = options.duration;
  let latest;
  let isComplete = false;
  let isForwardPlayback = true;
  let interpolateFromNumber;
  const animator = detectAnimationFromOptions(options);
  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from2, to)) {
    interpolateFromNumber = interpolate([0, 100], [from2, to], {
      clamp: false
    });
    from2 = 0;
    to = 100;
  }
  const animation = animator(Object.assign(Object.assign({}, options), { from: from2, to }));
  function repeat() {
    repeatCount++;
    if (repeatType === "reverse") {
      isForwardPlayback = repeatCount % 2 === 0;
      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
    } else {
      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
      if (repeatType === "mirror")
        animation.flipTarget();
    }
    isComplete = false;
    onRepeat && onRepeat();
  }
  function complete() {
    driverControls.stop();
    onComplete && onComplete();
  }
  function update(delta) {
    if (!isForwardPlayback)
      delta = -delta;
    elapsed += delta;
    if (!isComplete) {
      const state3 = animation.next(Math.max(0, elapsed));
      latest = state3.value;
      if (interpolateFromNumber)
        latest = interpolateFromNumber(latest);
      isComplete = isForwardPlayback ? state3.done : elapsed <= 0;
    }
    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
    if (isComplete) {
      if (repeatCount === 0)
        computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;
      if (repeatCount < repeatMax) {
        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
      } else {
        complete();
      }
    }
  }
  function play() {
    onPlay === null || onPlay === void 0 ? void 0 : onPlay();
    driverControls = driver(update);
    driverControls.start();
  }
  autoplay && play();
  return {
    stop: () => {
      onStop === null || onStop === void 0 ? void 0 : onStop();
      driverControls.stop();
    }
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/inertia.mjs
function inertia({ from: from2 = 0, velocity = 0, min: min2, max: max2, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop }) {
  let currentAnimation;
  function isOutOfBounds(v) {
    return min2 !== void 0 && v < min2 || max2 !== void 0 && v > max2;
  }
  function boundaryNearest(v) {
    if (min2 === void 0)
      return max2;
    if (max2 === void 0)
      return min2;
    return Math.abs(min2 - v) < Math.abs(max2 - v) ? min2 : max2;
  }
  function startAnimation2(options) {
    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
    currentAnimation = animate(Object.assign(Object.assign({}, options), {
      driver,
      onUpdate: (v) => {
        var _a;
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);
        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);
      },
      onComplete,
      onStop
    }));
  }
  function startSpring(options) {
    startAnimation2(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
  }
  if (isOutOfBounds(from2)) {
    startSpring({ from: from2, velocity, to: boundaryNearest(from2) });
  } else {
    let target = power * velocity + from2;
    if (typeof modifyTarget !== "undefined")
      target = modifyTarget(target);
    const boundary = boundaryNearest(target);
    const heading2 = boundary === min2 ? -1 : 1;
    let prev2;
    let current;
    const checkBoundary = (v) => {
      prev2 = current;
      current = v;
      velocity = velocityPerSecond(v - prev2, getFrameData2().delta);
      if (heading2 === 1 && v > boundary || heading2 === -1 && v < boundary) {
        startSpring({ from: v, to: boundary, velocity });
      }
    };
    startAnimation2({
      type: "decay",
      from: from2,
      velocity,
      timeConstant,
      power,
      restDelta,
      modifyTarget,
      onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
    });
  }
  return {
    stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop()
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/attract.mjs
var identity = (v) => v;
var createAttractor = (alterDisplacement = identity) => (constant, origin, v) => {
  const displacement = origin - v;
  const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
  return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;
};
var attract = createAttractor();
var attractExpo = createAttractor(Math.sqrt);

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/is-point.mjs
var isPoint5 = (point) => point.hasOwnProperty("x") && point.hasOwnProperty("y");

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/is-point-3d.mjs
var isPoint3D = (point) => isPoint5(point) && point.hasOwnProperty("z");

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/distance.mjs
var distance1D5 = (a2, b2) => Math.abs(a2 - b2);
function distance3(a2, b2) {
  if (isNum(a2) && isNum(b2)) {
    return distance1D5(a2, b2);
  } else if (isPoint5(a2) && isPoint5(b2)) {
    const xDelta = distance1D5(a2.x, b2.x);
    const yDelta = distance1D5(a2.y, b2.y);
    const zDelta = isPoint3D(a2) && isPoint3D(b2) ? distance1D5(a2.z, b2.z) : 0;
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
  }
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/easing/cubic-bezier.mjs
var a = (a1, a2) => 1 - 3 * a2 + 3 * a1;
var b = (a1, a2) => 3 * a2 - 6 * a1;
var c = (a1) => 3 * a1;
var calcBezier = (t3, a1, a2) => ((a(a1, a2) * t3 + b(a1, a2)) * t3 + c(a1)) * t3;
var getSlope = (t3, a1, a2) => 3 * a(a1, a2) * t3 * t3 + 2 * b(a1, a2) * t3 + c(a1);
var subdivisionPrecision = 1e-7;
var subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
  let currentX;
  let currentT;
  let i = 0;
  do {
    currentT = aA + (aB - aA) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);
  return currentT;
}
var newtonIterations = 8;
var newtonMinSlope = 1e-3;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (let i = 0; i < newtonIterations; ++i) {
    const currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0) {
      return aGuessT;
    }
    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}
var kSplineTableSize = 11;
var kSampleStepSize = 1 / (kSplineTableSize - 1);
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return linear;
  const sampleValues = new Float32Array(kSplineTableSize);
  for (let i = 0; i < kSplineTableSize; ++i) {
    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
  }
  function getTForX(aX) {
    let intervalStart = 0;
    let currentSample = 1;
    const lastSample = kSplineTableSize - 1;
    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;
    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    const guessForT = intervalStart + dist * kSampleStepSize;
    const initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= newtonMinSlope) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }
  return (t3) => t3 === 0 || t3 === 1 ? t3 : calcBezier(getTForX(t3), mY1, mY2);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/array.mjs
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem2(arr, item) {
  var index2 = arr.indexOf(item);
  index2 > -1 && arr.splice(index2, 1);
}
function moveItem(_a, fromIndex, toIndex) {
  var _b = __read(_a), arr = _b.slice(0);
  var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
  if (startIndex >= 0 && startIndex < arr.length) {
    var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
    var _c = __read(arr.splice(fromIndex, 1), 1), item = _c[0];
    arr.splice(endIndex, 0, item);
  }
  return arr;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs
var SubscriptionManager = function() {
  function SubscriptionManager2() {
    this.subscriptions = [];
  }
  SubscriptionManager2.prototype.add = function(handler) {
    var _this = this;
    addUniqueItem(this.subscriptions, handler);
    return function() {
      return removeItem2(_this.subscriptions, handler);
    };
  };
  SubscriptionManager2.prototype.notify = function(a2, b2, c2) {
    var numSubscriptions = this.subscriptions.length;
    if (!numSubscriptions)
      return;
    if (numSubscriptions === 1) {
      this.subscriptions[0](a2, b2, c2);
    } else {
      for (var i = 0; i < numSubscriptions; i++) {
        var handler = this.subscriptions[i];
        handler && handler(a2, b2, c2);
      }
    }
  };
  SubscriptionManager2.prototype.getSize = function() {
    return this.subscriptions.length;
  };
  SubscriptionManager2.prototype.clear = function() {
    this.subscriptions.length = 0;
  };
  return SubscriptionManager2;
}();

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/index.mjs
var isFloat = function(value) {
  return !isNaN(parseFloat(value));
};
var MotionValue = function() {
  function MotionValue2(init) {
    var _this = this;
    this.version = "6.3.11";
    this.timeDelta = 0;
    this.lastUpdated = 0;
    this.updateSubscribers = new SubscriptionManager();
    this.velocityUpdateSubscribers = new SubscriptionManager();
    this.renderSubscribers = new SubscriptionManager();
    this.canTrackVelocity = false;
    this.updateAndNotify = function(v, render3) {
      if (render3 === void 0) {
        render3 = true;
      }
      _this.prev = _this.current;
      _this.current = v;
      var _a = getFrameData2(), delta = _a.delta, timestamp = _a.timestamp;
      if (_this.lastUpdated !== timestamp) {
        _this.timeDelta = delta;
        _this.lastUpdated = timestamp;
        es_default2.postRender(_this.scheduleVelocityCheck);
      }
      if (_this.prev !== _this.current) {
        _this.updateSubscribers.notify(_this.current);
      }
      if (_this.velocityUpdateSubscribers.getSize()) {
        _this.velocityUpdateSubscribers.notify(_this.getVelocity());
      }
      if (render3) {
        _this.renderSubscribers.notify(_this.current);
      }
    };
    this.scheduleVelocityCheck = function() {
      return es_default2.postRender(_this.velocityCheck);
    };
    this.velocityCheck = function(_a) {
      var timestamp = _a.timestamp;
      if (timestamp !== _this.lastUpdated) {
        _this.prev = _this.current;
        _this.velocityUpdateSubscribers.notify(_this.getVelocity());
      }
    };
    this.hasAnimated = false;
    this.prev = this.current = init;
    this.canTrackVelocity = isFloat(this.current);
  }
  MotionValue2.prototype.onChange = function(subscription) {
    return this.updateSubscribers.add(subscription);
  };
  MotionValue2.prototype.clearListeners = function() {
    this.updateSubscribers.clear();
  };
  MotionValue2.prototype.onRenderRequest = function(subscription) {
    subscription(this.get());
    return this.renderSubscribers.add(subscription);
  };
  MotionValue2.prototype.attach = function(passiveEffect) {
    this.passiveEffect = passiveEffect;
  };
  MotionValue2.prototype.set = function(v, render3) {
    if (render3 === void 0) {
      render3 = true;
    }
    if (!render3 || !this.passiveEffect) {
      this.updateAndNotify(v, render3);
    } else {
      this.passiveEffect(v, this.updateAndNotify);
    }
  };
  MotionValue2.prototype.get = function() {
    return this.current;
  };
  MotionValue2.prototype.getPrevious = function() {
    return this.prev;
  };
  MotionValue2.prototype.getVelocity = function() {
    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;
  };
  MotionValue2.prototype.start = function(animation) {
    var _this = this;
    this.stop();
    return new Promise(function(resolve) {
      _this.hasAnimated = true;
      _this.stopAnimation = animation(resolve);
    }).then(function() {
      return _this.clearAnimation();
    });
  };
  MotionValue2.prototype.stop = function() {
    if (this.stopAnimation)
      this.stopAnimation();
    this.clearAnimation();
  };
  MotionValue2.prototype.isAnimating = function() {
    return !!this.stopAnimation;
  };
  MotionValue2.prototype.clearAnimation = function() {
    this.stopAnimation = null;
  };
  MotionValue2.prototype.destroy = function() {
    this.updateSubscribers.clear();
    this.renderSubscribers.clear();
    this.stop();
  };
  return MotionValue2;
}();
function motionValue(init) {
  return new MotionValue(init);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = function(value) {
  return Boolean(value !== null && typeof value === "object" && value.getVelocity);
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/time-conversion.mjs
var secondsToMilliseconds = function(seconds) {
  return seconds * 1e3;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/utils/easing.mjs
var easingLookup = {
  linear,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate,
  bounceIn,
  bounceInOut,
  bounceOut
};
var easingDefinitionToFunction = function(definition) {
  if (Array.isArray(definition)) {
    invariant2(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
    var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];
    return cubicBezier(x1, y1, x2, y2);
  } else if (typeof definition === "string") {
    invariant2(easingLookup[definition] !== void 0, "Invalid easing type '".concat(definition, "'"));
    return easingLookup[definition];
  }
  return definition;
};
var isEasingArray = function(ease) {
  return Array.isArray(ease) && typeof ease[0] !== "number";
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = function(key, value) {
  if (key === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && complex.test(value) && !value.startsWith("url(")) {
    return true;
  }
  return false;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = function(v) {
  return Array.isArray(v);
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = function() {
  return {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10
  };
};
var criticallyDampedSpring = function(to) {
  return {
    type: "spring",
    stiffness: 550,
    damping: to === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10
  };
};
var linearTween = function() {
  return {
    type: "keyframes",
    ease: "linear",
    duration: 0.3
  };
};
var keyframes4 = function(values) {
  return {
    type: "keyframes",
    duration: 0.8,
    values
  };
};
var defaultTransitions = {
  x: underDampedSpring,
  y: underDampedSpring,
  z: underDampedSpring,
  rotate: underDampedSpring,
  rotateX: underDampedSpring,
  rotateY: underDampedSpring,
  rotateZ: underDampedSpring,
  scaleX: criticallyDampedSpring,
  scaleY: criticallyDampedSpring,
  scale: criticallyDampedSpring,
  opacity: linearTween,
  backgroundColor: linearTween,
  color: linearTween,
  default: criticallyDampedSpring
};
var getDefaultTransition = function(valueKey, to) {
  var transitionFactory;
  if (isKeyframesTarget(to)) {
    transitionFactory = keyframes4;
  } else {
    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;
  }
  return __assign({ to }, transitionFactory(to));
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int = __assign(__assign({}, number), { transform: Math.round });

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes = {
  borderWidth: px5,
  borderTopWidth: px5,
  borderRightWidth: px5,
  borderBottomWidth: px5,
  borderLeftWidth: px5,
  borderRadius: px5,
  radius: px5,
  borderTopLeftRadius: px5,
  borderTopRightRadius: px5,
  borderBottomRightRadius: px5,
  borderBottomLeftRadius: px5,
  width: px5,
  maxWidth: px5,
  height: px5,
  maxHeight: px5,
  size: px5,
  top: px5,
  right: px5,
  bottom: px5,
  left: px5,
  padding: px5,
  paddingTop: px5,
  paddingRight: px5,
  paddingBottom: px5,
  paddingLeft: px5,
  margin: px5,
  marginTop: px5,
  marginRight: px5,
  marginBottom: px5,
  marginLeft: px5,
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px5,
  translateX: px5,
  translateY: px5,
  translateZ: px5,
  x: px5,
  y: px5,
  z: px5,
  perspective: px5,
  transformPerspective: px5,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px5,
  zIndex: int,
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes = __assign(__assign({}, numberValueTypes), {
  color: color3,
  backgroundColor: color3,
  outlineColor: color3,
  fill: color3,
  stroke: color3,
  borderColor: color3,
  borderTopColor: color3,
  borderRightColor: color3,
  borderBottomColor: color3,
  borderLeftColor: color3,
  filter: filter5,
  WebkitFilter: filter5
});
var getDefaultValueType = function(key) {
  return defaultValueTypes[key];
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  var _a;
  var defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter5)
    defaultValueType = complex;
  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState = {
  current: false
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue = function(v) {
  return Boolean(v && typeof v === "object" && v.mix && v.toValue);
};
var resolveFinalValueInKeyframes = function(v) {
  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/utils/transitions.mjs
function isTransitionDefined(_a) {
  _a.when;
  _a.delay;
  _a.delayChildren;
  _a.staggerChildren;
  _a.staggerDirection;
  _a.repeat;
  _a.repeatType;
  _a.repeatDelay;
  _a.from;
  var transition5 = __rest(_a, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
  return !!Object.keys(transition5).length;
}
var legacyRepeatWarning = false;
function convertTransitionToAnimationOptions(_a) {
  var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip2 = _a.flip, loop = _a.loop, transition5 = __rest(_a, ["ease", "times", "yoyo", "flip", "loop"]);
  var options = __assign({}, transition5);
  if (times)
    options["offset"] = times;
  if (transition5.duration)
    options["duration"] = secondsToMilliseconds(transition5.duration);
  if (transition5.repeatDelay)
    options.repeatDelay = secondsToMilliseconds(transition5.repeatDelay);
  if (ease) {
    options["ease"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);
  }
  if (transition5.type === "tween")
    options.type = "keyframes";
  if (yoyo || loop || flip2) {
    warning(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.");
    legacyRepeatWarning = true;
    if (yoyo) {
      options.repeatType = "reverse";
    } else if (loop) {
      options.repeatType = "loop";
    } else if (flip2) {
      options.repeatType = "mirror";
    }
    options.repeat = loop || yoyo || flip2 || transition5.repeat;
  }
  if (transition5.type !== "spring")
    options.type = "keyframes";
  return options;
}
function getDelayFromTransition(transition5, key) {
  var _a, _b;
  var valueTransition = getValueTransition(transition5, key) || {};
  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition5.delay) !== null && _b !== void 0 ? _b : 0;
}
function hydrateKeyframes(options) {
  if (Array.isArray(options.to) && options.to[0] === null) {
    options.to = __spreadArray([], __read(options.to), false);
    options.to[0] = options.from;
  }
  return options;
}
function getPopmotionAnimationOptions(transition5, options, key) {
  var _a;
  if (Array.isArray(options.to)) {
    (_a = transition5.duration) !== null && _a !== void 0 ? _a : transition5.duration = 0.8;
  }
  hydrateKeyframes(options);
  if (!isTransitionDefined(transition5)) {
    transition5 = __assign(__assign({}, transition5), getDefaultTransition(key, options.to));
  }
  return __assign(__assign({}, options), convertTransitionToAnimationOptions(transition5));
}
function getAnimation(key, value, target, transition5, onComplete) {
  var _a;
  var valueTransition = getValueTransition(transition5, key);
  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();
  var isTargetAnimatable = isAnimatable(key, target);
  if (origin === "none" && isTargetAnimatable && typeof target === "string") {
    origin = getAnimatableNone2(key, target);
  } else if (isZero(origin) && typeof target === "string") {
    origin = getZeroUnit(target);
  } else if (!Array.isArray(target) && isZero(target) && typeof origin === "string") {
    target = getZeroUnit(origin);
  }
  var isOriginAnimatable = isAnimatable(key, origin);
  warning(isOriginAnimatable === isTargetAnimatable, "You are trying to animate ".concat(key, ' from "').concat(origin, '" to "').concat(target, '". ').concat(origin, " is not an animatable value - to enable this animation set ").concat(origin, " to a value animatable to ").concat(target, " via the `style` property."));
  function start2() {
    var options = {
      from: origin,
      to: target,
      velocity: value.getVelocity(),
      onComplete,
      onUpdate: function(v) {
        return value.set(v);
      }
    };
    return valueTransition.type === "inertia" || valueTransition.type === "decay" ? inertia(__assign(__assign({}, options), valueTransition)) : animate(__assign(__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v) {
      var _a2;
      options.onUpdate(v);
      (_a2 = valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, v);
    }, onComplete: function() {
      var _a2;
      options.onComplete();
      (_a2 = valueTransition.onComplete) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition);
    } }));
  }
  function set3() {
    var _a2, _b;
    var finalTarget = resolveFinalValueInKeyframes(target);
    value.set(finalTarget);
    onComplete();
    (_a2 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, finalTarget);
    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);
    return { stop: function() {
    } };
  }
  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set3 : start2;
}
function isZero(value) {
  return value === 0 || typeof value === "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
}
function getZeroUnit(potentialUnitType) {
  return typeof potentialUnitType === "number" ? 0 : getAnimatableNone2("", potentialUnitType);
}
function getValueTransition(transition5, key) {
  return transition5[key] || transition5["default"] || transition5;
}
function startAnimation(key, value, target, transition5) {
  if (transition5 === void 0) {
    transition5 = {};
  }
  if (instantAnimationState.current) {
    transition5 = { type: false };
  }
  return value.start(function(onComplete) {
    var delayTimer;
    var controls;
    var animation = getAnimation(key, value, target, transition5, onComplete);
    var delay = getDelayFromTransition(transition5, key);
    var start2 = function() {
      return controls = animation();
    };
    if (delay) {
      delayTimer = window.setTimeout(start2, secondsToMilliseconds(delay));
    } else {
      start2();
    }
    return function() {
      clearTimeout(delayTimer);
      controls === null || controls === void 0 ? void 0 : controls.stop();
    };
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/animate.mjs
function animate2(from2, to, transition5) {
  if (transition5 === void 0) {
    transition5 = {};
  }
  var value = isMotionValue(from2) ? from2 : motionValue(from2);
  startAnimation("", value, to, transition5);
  return {
    stop: function() {
      return value.stop();
    },
    isAnimating: function() {
      return value.isAnimating();
    }
  };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders2 = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders2.length;
var asNumber = function(value) {
  return typeof value === "string" ? parseFloat(value) : value;
};
var isPx = function(value) {
  return typeof value === "number" || px5.test(value);
};
function mixValues(target, follow, lead, progress4, shouldCrossfadeOpacity, isOnlyMember) {
  var _a, _b, _c, _d;
  if (shouldCrossfadeOpacity) {
    target.opacity = mix(0, (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress4));
    target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress4));
  } else if (isOnlyMember) {
    target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress4);
  }
  for (var i = 0; i < numBorders; i++) {
    var borderLabel = "border".concat(borders2[i], "Radius");
    var followRadius = getRadius(follow, borderLabel);
    var leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress4), 0);
      if (percent.test(leadRadius) || percent.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress4);
  }
}
function getRadius(values, radiusName) {
  var _a;
  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut);
var easeCrossfadeOut = compress(0.5, 0.95, linear);
function compress(min2, max2, easing) {
  return function(p) {
    if (p < min2)
      return 0;
    if (p > max2)
      return 1;
    return easing(progress(min2, max2, p));
  };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x);
  copyAxisInto(box.y, originBox.y);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale3) {
  return scale3 === void 0 || scale3 === 1;
}
function hasScale(_a) {
  var scale3 = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;
  return !isIdentityScale(scale3) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;
}
function hasTranslate(value) {
  return value && value !== "0%";
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale3, originPoint) {
  var distanceFromOrigin = point - originPoint;
  var scaled = scale3 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale3, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point = scalePoint(point, boxScale, originPoint);
  }
  return scalePoint(point, scale3, originPoint) + translate;
}
function applyAxisDelta(axis, translate, scale3, originPoint, boxScale) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale3 === void 0) {
    scale3 = 1;
  }
  axis.min = applyPointDelta(axis.min, translate, scale3, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale3, originPoint, boxScale);
}
function applyBoxDelta(box, _a) {
  var x = _a.x, y = _a.y;
  applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);
  applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);
}
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
  var _a, _b;
  if (isSharedTransition === void 0) {
    isSharedTransition = false;
  }
  var treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  var node3;
  var delta;
  for (var i = 0; i < treeLength; i++) {
    node3 = treePath[i];
    delta = node3.projectionDelta;
    if (((_b = (_a = node3.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === "contents")
      continue;
    if (isSharedTransition && node3.options.layoutScroll && node3.scroll && node3 !== node3.root) {
      transformBox(box, { x: -node3.scroll.x, y: -node3.scroll.y });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta(box, delta);
    }
    if (isSharedTransition && hasTransform(node3.latestValues)) {
      transformBox(box, node3.latestValues);
    }
  }
}
function translateAxis(axis, distance4) {
  axis.min = axis.min + distance4;
  axis.max = axis.max + distance4;
}
function transformAxis(axis, transforms2, _a) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  var axisOrigin = transforms2[originKey] !== void 0 ? transforms2[originKey] : 0.5;
  var originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, transforms2[key], transforms2[scaleKey], originPoint, transforms2.scale);
}
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
function transformBox(box, transform19) {
  transformAxis(box.x, transform19, xKeys);
  transformAxis(box.y, transform19, yKeys);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
  if (target === void 0) {
    target = 0;
  }
  if (maxDistance === void 0) {
    maxDistance = 0.01;
  }
  return distance3(value, target) < maxDistance;
}
function calcAxisDelta(delta, source, target, origin) {
  if (origin === void 0) {
    origin = 0.5;
  }
  delta.origin = origin;
  delta.originPoint = mix(source.min, source.max, delta.origin);
  delta.scale = calcLength(target) / calcLength(source);
  if (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale))
    delta.scale = 1;
  delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint;
  if (isNear(delta.translate) || isNaN(delta.translate))
    delta.translate = 0;
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);
  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min;
  target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x);
  calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout3, parent) {
  target.min = layout3.min - parent.min;
  target.max = target.min + calcLength(layout3);
}
function calcRelativePosition(target, layout3, parent) {
  calcRelativeAxisPosition(target.x, layout3.x, parent.x);
  calcRelativeAxisPosition(target.y, layout3.y, parent.y);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale3, originPoint, boxScale) {
  point -= translate;
  point = scalePoint(point, 1 / scale3, originPoint);
  if (boxScale !== void 0) {
    point = scalePoint(point, 1 / boxScale, originPoint);
  }
  return point;
}
function removeAxisDelta(axis, translate, scale3, origin, boxScale, originAxis, sourceAxis) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale3 === void 0) {
    scale3 = 1;
  }
  if (origin === void 0) {
    origin = 0.5;
  }
  if (originAxis === void 0) {
    originAxis = axis;
  }
  if (sourceAxis === void 0) {
    sourceAxis = axis;
  }
  if (percent.test(translate)) {
    translate = parseFloat(translate);
    var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  var originPoint = mix(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta(axis.min, translate, scale3, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale3, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms2, _a, origin, sourceAxis) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
}
var xKeys2 = ["x", "scaleX", "originX"];
var yKeys2 = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms2, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms2, xKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);
  removeAxisTransforms(box.y, transforms2, yKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = function() {
  return {
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0
  };
};
var createDelta = function() {
  return {
    x: createAxisDelta(),
    y: createAxisDelta()
  };
};
var createAxis = function() {
  return { min: 0, max: 0 };
};
var createBox3 = function() {
  return {
    x: createAxis(),
    y: createAxis()
  };
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a2, b2) {
  return a2.x.min === b2.x.min && a2.x.max === b2.x.max && a2.y.min === b2.y.min && a2.y.max === b2.y.max;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = function() {
  function NodeStack2() {
    this.members = [];
  }
  NodeStack2.prototype.add = function(node3) {
    addUniqueItem(this.members, node3);
    node3.scheduleRender();
  };
  NodeStack2.prototype.remove = function(node3) {
    removeItem2(this.members, node3);
    if (node3 === this.prevLead) {
      this.prevLead = void 0;
    }
    if (node3 === this.lead) {
      var prevLead = this.members[this.members.length - 1];
      if (prevLead) {
        this.promote(prevLead);
      }
    }
  };
  NodeStack2.prototype.relegate = function(node3) {
    var indexOfNode = this.members.findIndex(function(member2) {
      return node3 === member2;
    });
    if (indexOfNode === 0)
      return false;
    var prevLead;
    for (var i = indexOfNode; i >= 0; i--) {
      var member = this.members[i];
      if (member.isPresent !== false) {
        prevLead = member;
        break;
      }
    }
    if (prevLead) {
      this.promote(prevLead);
      return true;
    } else {
      return false;
    }
  };
  NodeStack2.prototype.promote = function(node3, preserveFollowOpacity) {
    var _a;
    var prevLead = this.lead;
    if (node3 === prevLead)
      return;
    this.prevLead = prevLead;
    this.lead = node3;
    node3.show();
    if (prevLead) {
      prevLead.instance && prevLead.scheduleRender();
      node3.scheduleRender();
      node3.resumeFrom = prevLead;
      if (preserveFollowOpacity) {
        node3.resumeFrom.preserveOpacity = true;
      }
      if (prevLead.snapshot) {
        node3.snapshot = prevLead.snapshot;
        node3.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
        node3.snapshot.isShared = true;
      }
      if ((_a = node3.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {
        node3.isLayoutDirty = true;
      }
      var crossfade = node3.options.crossfade;
      if (crossfade === false) {
        prevLead.hide();
      }
    }
  };
  NodeStack2.prototype.exitAnimationComplete = function() {
    this.members.forEach(function(node3) {
      var _a, _b, _c, _d, _e;
      (_b = (_a = node3.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);
      (_e = (_c = node3.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);
    });
  };
  NodeStack2.prototype.scheduleRender = function() {
    this.members.forEach(function(node3) {
      node3.instance && node3.scheduleRender(false);
    });
  };
  NodeStack2.prototype.removeLeadSnapshot = function() {
    if (this.lead && this.lead.snapshot) {
      this.lead.snapshot = void 0;
    }
  };
  return NodeStack2;
}();

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  Object.assign(scaleCorrectors, correctors);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/styles/transform.mjs
var identityProjection = "translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";
function buildProjectionTransform(delta, treeScale, latestTransform) {
  var xTranslate = delta.x.translate / treeScale.x;
  var yTranslate = delta.y.translate / treeScale.y;
  var transform19 = "translate3d(".concat(xTranslate, "px, ").concat(yTranslate, "px, 0) ");
  transform19 += "scale(".concat(1 / treeScale.x, ", ").concat(1 / treeScale.y, ") ");
  if (latestTransform) {
    var rotate2 = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
    if (rotate2)
      transform19 += "rotate(".concat(rotate2, "deg) ");
    if (rotateX)
      transform19 += "rotateX(".concat(rotateX, "deg) ");
    if (rotateY)
      transform19 += "rotateY(".concat(rotateY, "deg) ");
  }
  var elementScaleX = delta.x.scale * treeScale.x;
  var elementScaleY = delta.y.scale * treeScale.y;
  transform19 += "scale(".concat(elementScaleX, ", ").concat(elementScaleY, ")");
  return transform19 === identityProjection ? "none" : transform19;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs
var transformAxes = ["", "X", "Y", "Z"];
var order = ["translate", "scale", "rotate", "skew"];
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function(operationKey) {
  return transformAxes.forEach(function(axesKey) {
    return transformProps.push(operationKey + axesKey);
  });
});
function sortTransformProps(a2, b2) {
  return transformProps.indexOf(a2) - transformProps.indexOf(b2);
}
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
  return transformPropSet.has(key);
}
var transformOriginProps = /* @__PURE__ */ new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
  return transformOriginProps.has(key);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = function(a2, b2) {
  return a2.depth - b2.depth;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = function() {
  function FlatTree2() {
    this.children = [];
    this.isDirty = false;
  }
  FlatTree2.prototype.add = function(child) {
    addUniqueItem(this.children, child);
    this.isDirty = true;
  };
  FlatTree2.prototype.remove = function(child) {
    removeItem2(this.children, child);
    this.isDirty = true;
  };
  FlatTree2.prototype.forEach = function(callback) {
    this.isDirty && this.children.sort(compareByDepth);
    this.isDirty = false;
    this.children.forEach(callback);
  };
  return FlatTree2;
}();

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  var unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var animationTarget = 1e3;
var globalProjectionState = {
  hasAnimatedSinceResize: true,
  hasEverUpdated: false
};
function createProjectionNode(_a) {
  var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, resetTransform = _a.resetTransform;
  return function() {
    function ProjectionNode(id2, latestValues, parent) {
      var _this = this;
      if (latestValues === void 0) {
        latestValues = {};
      }
      if (parent === void 0) {
        parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();
      }
      this.children = /* @__PURE__ */ new Set();
      this.options = {};
      this.isTreeAnimating = false;
      this.isAnimationBlocked = false;
      this.isLayoutDirty = false;
      this.updateManuallyBlocked = false;
      this.updateBlockedByResize = false;
      this.isUpdating = false;
      this.isSVG = false;
      this.needsReset = false;
      this.shouldResetTransform = false;
      this.treeScale = { x: 1, y: 1 };
      this.eventHandlers = /* @__PURE__ */ new Map();
      this.potentialNodes = /* @__PURE__ */ new Map();
      this.checkUpdateFailed = function() {
        if (_this.isUpdating) {
          _this.isUpdating = false;
          _this.clearAllSnapshots();
        }
      };
      this.updateProjection = function() {
        _this.nodes.forEach(resolveTargetDelta);
        _this.nodes.forEach(calcProjection);
      };
      this.hasProjected = false;
      this.isVisible = true;
      this.animationProgress = 0;
      this.sharedNodes = /* @__PURE__ */ new Map();
      this.id = id2;
      this.latestValues = latestValues;
      this.root = parent ? parent.root || parent : this;
      this.path = parent ? __spreadArray(__spreadArray([], __read(parent.path), false), [parent], false) : [];
      this.parent = parent;
      this.depth = parent ? parent.depth + 1 : 0;
      id2 && this.root.registerPotentialNode(id2, this);
      for (var i = 0; i < this.path.length; i++) {
        this.path[i].shouldResetTransform = true;
      }
      if (this.root === this)
        this.nodes = new FlatTree();
    }
    ProjectionNode.prototype.addEventListener = function(name, handler) {
      if (!this.eventHandlers.has(name)) {
        this.eventHandlers.set(name, new SubscriptionManager());
      }
      return this.eventHandlers.get(name).add(handler);
    };
    ProjectionNode.prototype.notifyListeners = function(name) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      var subscriptionManager = this.eventHandlers.get(name);
      subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, __spreadArray([], __read(args), false));
    };
    ProjectionNode.prototype.hasListeners = function(name) {
      return this.eventHandlers.has(name);
    };
    ProjectionNode.prototype.registerPotentialNode = function(id2, node3) {
      this.potentialNodes.set(id2, node3);
    };
    ProjectionNode.prototype.mount = function(instance, isLayoutDirty) {
      var _this = this;
      var _a2;
      if (isLayoutDirty === void 0) {
        isLayoutDirty = false;
      }
      if (this.instance)
        return;
      this.isSVG = instance instanceof SVGElement && instance.tagName !== "svg";
      this.instance = instance;
      var _b = this.options, layoutId = _b.layoutId, layout3 = _b.layout, visualElement2 = _b.visualElement;
      if (visualElement2 && !visualElement2.getInstance()) {
        visualElement2.mount(instance);
      }
      this.root.nodes.add(this);
      (_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.children.add(this);
      this.id && this.root.potentialNodes.delete(this.id);
      if (isLayoutDirty && (layout3 || layoutId)) {
        this.isLayoutDirty = true;
      }
      if (attachResizeListener) {
        var unblockTimeout_1;
        var resizeUnblockUpdate_1 = function() {
          return _this.root.updateBlockedByResize = false;
        };
        attachResizeListener(instance, function() {
          _this.root.updateBlockedByResize = true;
          clearTimeout(unblockTimeout_1);
          unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);
          if (globalProjectionState.hasAnimatedSinceResize) {
            globalProjectionState.hasAnimatedSinceResize = false;
            _this.nodes.forEach(finishAnimation);
          }
        });
      }
      if (layoutId) {
        this.root.registerSharedNode(layoutId, this);
      }
      if (this.options.animate !== false && visualElement2 && (layoutId || layout3)) {
        this.addEventListener("didUpdate", function(_a3) {
          var _b2, _c, _d, _e, _f;
          var delta = _a3.delta, hasLayoutChanged = _a3.hasLayoutChanged, hasRelativeTargetChanged = _a3.hasRelativeTargetChanged, newLayout = _a3.layout;
          if (_this.isTreeAnimationBlocked()) {
            _this.target = void 0;
            _this.relativeTarget = void 0;
            return;
          }
          var layoutTransition = (_c = (_b2 = _this.options.transition) !== null && _b2 !== void 0 ? _b2 : visualElement2.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;
          var _g = visualElement2.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;
          var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;
          var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
          if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {
            if (_this.resumeFrom) {
              _this.resumingFrom = _this.resumeFrom;
              _this.resumingFrom.resumingFrom = void 0;
            }
            _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
            var animationOptions = __assign(__assign({}, getValueTransition(layoutTransition, "layout")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });
            if (visualElement2.shouldReduceMotion) {
              animationOptions.delay = 0;
              animationOptions.type = false;
            }
            _this.startAnimation(animationOptions);
          } else {
            if (!hasLayoutChanged && _this.animationProgress === 0) {
              _this.finishAnimation();
            }
            _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));
          }
          _this.targetLayout = newLayout;
        });
      }
    };
    ProjectionNode.prototype.unmount = function() {
      var _a2, _b;
      this.options.layoutId && this.willUpdate();
      this.root.nodes.remove(this);
      (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.remove(this);
      (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);
      this.instance = void 0;
      cancelSync2.preRender(this.updateProjection);
    };
    ProjectionNode.prototype.blockUpdate = function() {
      this.updateManuallyBlocked = true;
    };
    ProjectionNode.prototype.unblockUpdate = function() {
      this.updateManuallyBlocked = false;
    };
    ProjectionNode.prototype.isUpdateBlocked = function() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    };
    ProjectionNode.prototype.isTreeAnimationBlocked = function() {
      var _a2;
      return this.isAnimationBlocked || ((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimationBlocked()) || false;
    };
    ProjectionNode.prototype.startUpdate = function() {
      var _a2;
      if (this.isUpdateBlocked())
        return;
      this.isUpdating = true;
      (_a2 = this.nodes) === null || _a2 === void 0 ? void 0 : _a2.forEach(resetRotation);
    };
    ProjectionNode.prototype.willUpdate = function(shouldNotifyListeners) {
      var _a2, _b, _c;
      if (shouldNotifyListeners === void 0) {
        shouldNotifyListeners = true;
      }
      if (this.root.isUpdateBlocked()) {
        (_b = (_a2 = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a2);
        return;
      }
      !this.root.isUpdating && this.root.startUpdate();
      if (this.isLayoutDirty)
        return;
      this.isLayoutDirty = true;
      for (var i = 0; i < this.path.length; i++) {
        var node3 = this.path[i];
        node3.shouldResetTransform = true;
        node3.updateScroll();
      }
      var _d = this.options, layoutId = _d.layoutId, layout3 = _d.layout;
      if (layoutId === void 0 && !layout3)
        return;
      var transformTemplate3 = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
      this.prevTransformTemplateValue = transformTemplate3 === null || transformTemplate3 === void 0 ? void 0 : transformTemplate3(this.latestValues, "");
      this.updateSnapshot();
      shouldNotifyListeners && this.notifyListeners("willUpdate");
    };
    ProjectionNode.prototype.didUpdate = function() {
      var updateWasBlocked = this.isUpdateBlocked();
      if (updateWasBlocked) {
        this.unblockUpdate();
        this.clearAllSnapshots();
        this.nodes.forEach(clearMeasurements);
        return;
      }
      if (!this.isUpdating)
        return;
      this.isUpdating = false;
      if (this.potentialNodes.size) {
        this.potentialNodes.forEach(mountNodeEarly);
        this.potentialNodes.clear();
      }
      this.nodes.forEach(resetTransformStyle);
      this.nodes.forEach(updateLayout);
      this.nodes.forEach(notifyLayoutUpdate);
      this.clearAllSnapshots();
      flushSync2.update();
      flushSync2.preRender();
      flushSync2.render();
    };
    ProjectionNode.prototype.clearAllSnapshots = function() {
      this.nodes.forEach(clearSnapshot);
      this.sharedNodes.forEach(removeLeadSnapshots);
    };
    ProjectionNode.prototype.scheduleUpdateProjection = function() {
      es_default2.preRender(this.updateProjection, false, true);
    };
    ProjectionNode.prototype.scheduleCheckAfterUnmount = function() {
      var _this = this;
      es_default2.postRender(function() {
        if (_this.isLayoutDirty) {
          _this.root.didUpdate();
        } else {
          _this.root.checkUpdateFailed();
        }
      });
    };
    ProjectionNode.prototype.updateSnapshot = function() {
      if (this.snapshot || !this.instance)
        return;
      var measured = this.measure();
      var layout3 = this.removeTransform(this.removeElementScroll(measured));
      roundBox(layout3);
      this.snapshot = {
        measured,
        layout: layout3,
        latestValues: {}
      };
    };
    ProjectionNode.prototype.updateLayout = function() {
      var _a2;
      if (!this.instance)
        return;
      this.updateScroll();
      if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
        return;
      }
      if (this.resumeFrom && !this.resumeFrom.instance) {
        for (var i = 0; i < this.path.length; i++) {
          var node3 = this.path[i];
          node3.updateScroll();
        }
      }
      var measured = this.measure();
      roundBox(measured);
      var prevLayout = this.layout;
      this.layout = {
        measured,
        actual: this.removeElementScroll(measured)
      };
      this.layoutCorrected = createBox3();
      this.isLayoutDirty = false;
      this.projectionDelta = void 0;
      this.notifyListeners("measure", this.layout.actual);
      (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);
    };
    ProjectionNode.prototype.updateScroll = function() {
      if (this.options.layoutScroll && this.instance) {
        this.scroll = measureScroll(this.instance);
      }
    };
    ProjectionNode.prototype.resetTransform = function() {
      var _a2;
      if (!resetTransform)
        return;
      var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;
      var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
      var transformTemplate3 = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
      var transformTemplateValue = transformTemplate3 === null || transformTemplate3 === void 0 ? void 0 : transformTemplate3(this.latestValues, "");
      var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
      if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
        resetTransform(this.instance, transformTemplateValue);
        this.shouldResetTransform = false;
        this.scheduleRender();
      }
    };
    ProjectionNode.prototype.measure = function() {
      var visualElement2 = this.options.visualElement;
      if (!visualElement2)
        return createBox3();
      var box = visualElement2.measureViewportBox();
      var scroll3 = this.root.scroll;
      if (scroll3) {
        translateAxis(box.x, scroll3.x);
        translateAxis(box.y, scroll3.y);
      }
      return box;
    };
    ProjectionNode.prototype.removeElementScroll = function(box) {
      var boxWithoutScroll = createBox3();
      copyBoxInto(boxWithoutScroll, box);
      for (var i = 0; i < this.path.length; i++) {
        var node3 = this.path[i];
        var scroll_1 = node3.scroll, options = node3.options;
        if (node3 !== this.root && scroll_1 && options.layoutScroll) {
          translateAxis(boxWithoutScroll.x, scroll_1.x);
          translateAxis(boxWithoutScroll.y, scroll_1.y);
        }
      }
      return boxWithoutScroll;
    };
    ProjectionNode.prototype.applyTransform = function(box, transformOnly) {
      if (transformOnly === void 0) {
        transformOnly = false;
      }
      var withTransforms = createBox3();
      copyBoxInto(withTransforms, box);
      for (var i = 0; i < this.path.length; i++) {
        var node3 = this.path[i];
        if (!transformOnly && node3.options.layoutScroll && node3.scroll && node3 !== node3.root) {
          transformBox(withTransforms, {
            x: -node3.scroll.x,
            y: -node3.scroll.y
          });
        }
        if (!hasTransform(node3.latestValues))
          continue;
        transformBox(withTransforms, node3.latestValues);
      }
      if (hasTransform(this.latestValues)) {
        transformBox(withTransforms, this.latestValues);
      }
      return withTransforms;
    };
    ProjectionNode.prototype.removeTransform = function(box) {
      var _a2;
      var boxWithoutTransform = createBox3();
      copyBoxInto(boxWithoutTransform, box);
      for (var i = 0; i < this.path.length; i++) {
        var node3 = this.path[i];
        if (!node3.instance)
          continue;
        if (!hasTransform(node3.latestValues))
          continue;
        hasScale(node3.latestValues) && node3.updateSnapshot();
        var sourceBox = createBox3();
        var nodeBox = node3.measure();
        copyBoxInto(sourceBox, nodeBox);
        removeBoxTransforms(boxWithoutTransform, node3.latestValues, (_a2 = node3.snapshot) === null || _a2 === void 0 ? void 0 : _a2.layout, sourceBox);
      }
      if (hasTransform(this.latestValues)) {
        removeBoxTransforms(boxWithoutTransform, this.latestValues);
      }
      return boxWithoutTransform;
    };
    ProjectionNode.prototype.setTargetDelta = function(delta) {
      this.targetDelta = delta;
      this.root.scheduleUpdateProjection();
    };
    ProjectionNode.prototype.setOptions = function(options) {
      var _a2;
      this.options = __assign(__assign(__assign({}, this.options), options), { crossfade: (_a2 = options.crossfade) !== null && _a2 !== void 0 ? _a2 : true });
    };
    ProjectionNode.prototype.clearMeasurements = function() {
      this.scroll = void 0;
      this.layout = void 0;
      this.snapshot = void 0;
      this.prevTransformTemplateValue = void 0;
      this.targetDelta = void 0;
      this.target = void 0;
      this.isLayoutDirty = false;
    };
    ProjectionNode.prototype.resolveTargetDelta = function() {
      var _a2;
      var _b = this.options, layout3 = _b.layout, layoutId = _b.layoutId;
      if (!this.layout || !(layout3 || layoutId))
        return;
      if (!this.targetDelta && !this.relativeTarget) {
        this.relativeParent = this.getClosestProjectingParent();
        if (this.relativeParent && this.relativeParent.layout) {
          this.relativeTarget = createBox3();
          this.relativeTargetOrigin = createBox3();
          calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);
          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
        }
      }
      if (!this.relativeTarget && !this.targetDelta)
        return;
      if (!this.target) {
        this.target = createBox3();
        this.targetWithTransforms = createBox3();
      }
      if (this.relativeTarget && this.relativeTargetOrigin && ((_a2 = this.relativeParent) === null || _a2 === void 0 ? void 0 : _a2.target)) {
        calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
      } else if (this.targetDelta) {
        if (Boolean(this.resumingFrom)) {
          this.target = this.applyTransform(this.layout.actual);
        } else {
          copyBoxInto(this.target, this.layout.actual);
        }
        applyBoxDelta(this.target, this.targetDelta);
      } else {
        copyBoxInto(this.target, this.layout.actual);
      }
      if (this.attemptToResolveRelativeTarget) {
        this.attemptToResolveRelativeTarget = false;
        this.relativeParent = this.getClosestProjectingParent();
        if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {
          this.relativeTarget = createBox3();
          this.relativeTargetOrigin = createBox3();
          calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);
          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
        }
      }
    };
    ProjectionNode.prototype.getClosestProjectingParent = function() {
      if (!this.parent || hasTransform(this.parent.latestValues))
        return void 0;
      if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {
        return this.parent;
      } else {
        return this.parent.getClosestProjectingParent();
      }
    };
    ProjectionNode.prototype.calcProjection = function() {
      var _a2;
      var _b = this.options, layout3 = _b.layout, layoutId = _b.layoutId;
      this.isTreeAnimating = Boolean(((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);
      if (!this.isTreeAnimating) {
        this.targetDelta = this.relativeTarget = void 0;
      }
      if (!this.layout || !(layout3 || layoutId))
        return;
      var lead = this.getLead();
      copyBoxInto(this.layoutCorrected, this.layout.actual);
      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
      var target = lead.target;
      if (!target)
        return;
      if (!this.projectionDelta) {
        this.projectionDelta = createDelta();
        this.projectionDeltaWithTransform = createDelta();
      }
      var prevTreeScaleX = this.treeScale.x;
      var prevTreeScaleY = this.treeScale.y;
      var prevProjectionTransform = this.projectionTransform;
      calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
      this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);
      if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {
        this.hasProjected = true;
        this.scheduleRender();
        this.notifyListeners("projectionUpdate", target);
      }
    };
    ProjectionNode.prototype.hide = function() {
      this.isVisible = false;
    };
    ProjectionNode.prototype.show = function() {
      this.isVisible = true;
    };
    ProjectionNode.prototype.scheduleRender = function(notifyAll) {
      var _a2, _b, _c;
      if (notifyAll === void 0) {
        notifyAll = true;
      }
      (_b = (_a2 = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a2);
      notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());
      if (this.resumingFrom && !this.resumingFrom.instance) {
        this.resumingFrom = void 0;
      }
    };
    ProjectionNode.prototype.setAnimationOrigin = function(delta, hasOnlyRelativeTargetChanged) {
      var _this = this;
      var _a2;
      if (hasOnlyRelativeTargetChanged === void 0) {
        hasOnlyRelativeTargetChanged = false;
      }
      var snapshot = this.snapshot;
      var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};
      var mixedValues = __assign({}, this.latestValues);
      var targetDelta = createDelta();
      this.relativeTarget = this.relativeTargetOrigin = void 0;
      this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
      var relativeLayout = createBox3();
      var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;
      var isOnlyMember = (((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length) || 0) <= 1;
      var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
      this.animationProgress = 0;
      this.mixTargetDelta = function(latest) {
        var _a3;
        var progress4 = latest / 1e3;
        mixAxisDelta(targetDelta.x, delta.x, progress4);
        mixAxisDelta(targetDelta.y, delta.y, progress4);
        _this.setTargetDelta(targetDelta);
        if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a3 = _this.relativeParent) === null || _a3 === void 0 ? void 0 : _a3.layout)) {
          calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);
          mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress4);
        }
        if (isSharedLayoutAnimation) {
          _this.animationValues = mixedValues;
          mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress4, shouldCrossfadeOpacity, isOnlyMember);
        }
        _this.root.scheduleUpdateProjection();
        _this.scheduleRender();
        _this.animationProgress = progress4;
      };
      this.mixTargetDelta(0);
    };
    ProjectionNode.prototype.startAnimation = function(options) {
      var _this = this;
      var _a2, _b;
      this.notifyListeners("animationStart");
      (_a2 = this.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
      if (this.resumingFrom) {
        (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();
      }
      if (this.pendingAnimation) {
        cancelSync2.update(this.pendingAnimation);
        this.pendingAnimation = void 0;
      }
      this.pendingAnimation = es_default2.update(function() {
        globalProjectionState.hasAnimatedSinceResize = true;
        _this.currentAnimation = animate2(0, animationTarget, __assign(__assign({}, options), { onUpdate: function(latest) {
          var _a3;
          _this.mixTargetDelta(latest);
          (_a3 = options.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(options, latest);
        }, onComplete: function() {
          var _a3;
          (_a3 = options.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(options);
          _this.completeAnimation();
        } }));
        if (_this.resumingFrom) {
          _this.resumingFrom.currentAnimation = _this.currentAnimation;
        }
        _this.pendingAnimation = void 0;
      });
    };
    ProjectionNode.prototype.completeAnimation = function() {
      var _a2;
      if (this.resumingFrom) {
        this.resumingFrom.currentAnimation = void 0;
        this.resumingFrom.preserveOpacity = void 0;
      }
      (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.exitAnimationComplete();
      this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
      this.notifyListeners("animationComplete");
    };
    ProjectionNode.prototype.finishAnimation = function() {
      var _a2;
      if (this.currentAnimation) {
        (_a2 = this.mixTargetDelta) === null || _a2 === void 0 ? void 0 : _a2.call(this, animationTarget);
        this.currentAnimation.stop();
      }
      this.completeAnimation();
    };
    ProjectionNode.prototype.applyTransformsToTarget = function() {
      var _a2 = this.getLead(), targetWithTransforms = _a2.targetWithTransforms, target = _a2.target, layout3 = _a2.layout, latestValues = _a2.latestValues;
      if (!targetWithTransforms || !target || !layout3)
        return;
      copyBoxInto(targetWithTransforms, target);
      transformBox(targetWithTransforms, latestValues);
      calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
    };
    ProjectionNode.prototype.registerSharedNode = function(layoutId, node3) {
      var _a2, _b, _c;
      if (!this.sharedNodes.has(layoutId)) {
        this.sharedNodes.set(layoutId, new NodeStack());
      }
      var stack = this.sharedNodes.get(layoutId);
      stack.add(node3);
      node3.promote({
        transition: (_a2 = node3.options.initialPromotionConfig) === null || _a2 === void 0 ? void 0 : _a2.transition,
        preserveFollowOpacity: (_c = (_b = node3.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node3)
      });
    };
    ProjectionNode.prototype.isLead = function() {
      var stack = this.getStack();
      return stack ? stack.lead === this : true;
    };
    ProjectionNode.prototype.getLead = function() {
      var _a2;
      var layoutId = this.options.layoutId;
      return layoutId ? ((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.lead) || this : this;
    };
    ProjectionNode.prototype.getPrevLead = function() {
      var _a2;
      var layoutId = this.options.layoutId;
      return layoutId ? (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.prevLead : void 0;
    };
    ProjectionNode.prototype.getStack = function() {
      var layoutId = this.options.layoutId;
      if (layoutId)
        return this.root.sharedNodes.get(layoutId);
    };
    ProjectionNode.prototype.promote = function(_a2) {
      var _b = _a2 === void 0 ? {} : _a2, needsReset = _b.needsReset, transition5 = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;
      var stack = this.getStack();
      if (stack)
        stack.promote(this, preserveFollowOpacity);
      if (needsReset) {
        this.projectionDelta = void 0;
        this.needsReset = true;
      }
      if (transition5)
        this.setOptions({ transition: transition5 });
    };
    ProjectionNode.prototype.relegate = function() {
      var stack = this.getStack();
      if (stack) {
        return stack.relegate(this);
      } else {
        return false;
      }
    };
    ProjectionNode.prototype.resetRotation = function() {
      var visualElement2 = this.options.visualElement;
      if (!visualElement2)
        return;
      var hasRotate = false;
      var resetValues = {};
      for (var i = 0; i < transformAxes.length; i++) {
        var axis = transformAxes[i];
        var key = "rotate" + axis;
        if (!visualElement2.getStaticValue(key)) {
          continue;
        }
        hasRotate = true;
        resetValues[key] = visualElement2.getStaticValue(key);
        visualElement2.setStaticValue(key, 0);
      }
      if (!hasRotate)
        return;
      visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
      for (var key in resetValues) {
        visualElement2.setStaticValue(key, resetValues[key]);
      }
      visualElement2.scheduleRender();
    };
    ProjectionNode.prototype.getProjectionStyles = function(styleProp) {
      var _a2, _b, _c, _d, _e, _f;
      if (styleProp === void 0) {
        styleProp = {};
      }
      var styles3 = {};
      if (!this.instance || this.isSVG)
        return styles3;
      if (!this.isVisible) {
        return { visibility: "hidden" };
      } else {
        styles3.visibility = "";
      }
      var transformTemplate3 = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
      if (this.needsReset) {
        this.needsReset = false;
        styles3.opacity = "";
        styles3.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
        styles3.transform = transformTemplate3 ? transformTemplate3(this.latestValues, "") : "none";
        return styles3;
      }
      var lead = this.getLead();
      if (!this.projectionDelta || !this.layout || !lead.target) {
        var emptyStyles = {};
        if (this.options.layoutId) {
          emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;
          emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
        }
        if (this.hasProjected && !hasTransform(this.latestValues)) {
          emptyStyles.transform = transformTemplate3 ? transformTemplate3({}, "") : "none";
          this.hasProjected = false;
        }
        return emptyStyles;
      }
      var valuesToRender = lead.animationValues || lead.latestValues;
      this.applyTransformsToTarget();
      styles3.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
      if (transformTemplate3) {
        styles3.transform = transformTemplate3(valuesToRender, styles3.transform);
      }
      var _g = this.projectionDelta, x = _g.x, y = _g.y;
      styles3.transformOrigin = "".concat(x.origin * 100, "% ").concat(y.origin * 100, "% 0");
      if (lead.animationValues) {
        styles3.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
      } else {
        styles3.opacity = lead === this ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : "" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
      }
      for (var key in scaleCorrectors) {
        if (valuesToRender[key] === void 0)
          continue;
        var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;
        var corrected = correct(valuesToRender[key], lead);
        if (applyTo) {
          var num = applyTo.length;
          for (var i = 0; i < num; i++) {
            styles3[applyTo[i]] = corrected;
          }
        } else {
          styles3[key] = corrected;
        }
      }
      if (this.options.layoutId) {
        styles3.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none";
      }
      return styles3;
    };
    ProjectionNode.prototype.clearSnapshot = function() {
      this.resumeFrom = this.snapshot = void 0;
    };
    ProjectionNode.prototype.resetTree = function() {
      this.root.nodes.forEach(function(node3) {
        var _a2;
        return (_a2 = node3.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
      });
      this.root.nodes.forEach(clearMeasurements);
      this.root.sharedNodes.clear();
    };
    return ProjectionNode;
  }();
}
function updateLayout(node3) {
  node3.updateLayout();
}
function notifyLayoutUpdate(node3) {
  var _a, _b, _c, _d;
  var snapshot = (_b = (_a = node3.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node3.snapshot;
  if (node3.isLead() && node3.layout && snapshot && node3.hasListeners("didUpdate")) {
    var _e = node3.layout, layout_1 = _e.actual, measuredLayout = _e.measured;
    if (node3.options.animationType === "size") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(axisSnapshot);
        axisSnapshot.min = layout_1[axis].min;
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    } else if (node3.options.animationType === "position") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(layout_1[axis]);
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    }
    var layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
    var visualDelta = createDelta();
    if (snapshot.isShared) {
      calcBoxDelta(visualDelta, node3.applyTransform(measuredLayout, true), snapshot.measured);
    } else {
      calcBoxDelta(visualDelta, layout_1, snapshot.layout);
    }
    var hasLayoutChanged = !isDeltaZero(layoutDelta);
    var hasRelativeTargetChanged = false;
    if (!node3.resumeFrom) {
      node3.relativeParent = node3.getClosestProjectingParent();
      if (node3.relativeParent && !node3.relativeParent.resumeFrom) {
        var _f = node3.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
        if (parentSnapshot && parentLayout) {
          var relativeSnapshot = createBox3();
          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
          var relativeLayout = createBox3();
          calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);
          if (!boxEquals(relativeSnapshot, relativeLayout)) {
            hasRelativeTargetChanged = true;
          }
        }
      }
    }
    node3.notifyListeners("didUpdate", {
      layout: layout_1,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeTargetChanged
    });
  } else if (node3.isLead()) {
    (_d = (_c = node3.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);
  }
  node3.options.transition = void 0;
}
function clearSnapshot(node3) {
  node3.clearSnapshot();
}
function clearMeasurements(node3) {
  node3.clearMeasurements();
}
function resetTransformStyle(node3) {
  var visualElement2 = node3.options.visualElement;
  if (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.getProps().onBeforeLayoutMeasure) {
    visualElement2.notifyBeforeLayoutMeasure();
  }
  node3.resetTransform();
}
function finishAnimation(node3) {
  node3.finishAnimation();
  node3.targetDelta = node3.relativeTarget = node3.target = void 0;
}
function resolveTargetDelta(node3) {
  node3.resolveTargetDelta();
}
function calcProjection(node3) {
  node3.calcProjection();
}
function resetRotation(node3) {
  node3.resetRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p) {
  output.translate = mix(delta.translate, 0, p);
  output.scale = mix(delta.scale, 1, p);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis(output, from2, to, p) {
  output.min = mix(from2.min, to.min, p);
  output.max = mix(from2.max, to.max, p);
}
function mixBox(output, from2, to, p) {
  mixAxis(output.x, from2.x, to.x, p);
  mixAxis(output.y, from2.y, to.y, p);
}
function hasOpacityCrossfade(node3) {
  return node3.animationValues && node3.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
function mountNodeEarly(node3, id2) {
  var searchNode = node3.root;
  for (var i = node3.path.length - 1; i >= 0; i--) {
    if (Boolean(node3.path[i].instance)) {
      searchNode = node3.path[i];
      break;
    }
  }
  var searchElement = searchNode && searchNode !== node3.root ? searchNode.instance : document;
  var element = searchElement.querySelector('[data-projection-id="'.concat(id2, '"]'));
  if (element)
    node3.mount(element, true);
}
function roundAxis(axis) {
  axis.min = Math.round(axis.min);
  axis.max = Math.round(axis.max);
}
function roundBox(box) {
  roundAxis(box.x);
  roundAxis(box.y);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/node/id.mjs
var id = 1;
function useProjectionId() {
  return useConstant(function() {
    if (globalProjectionState.hasEverUpdated) {
      return id++;
    }
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react30 = __toESM(require_react(), 1);
var LayoutGroupContext = (0, import_react30.createContext)({});

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
var import_react32 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react31 = __toESM(require_react(), 1);
var SwitchLayoutGroupContext = (0, import_react31.createContext)({});

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
function useProjection(projectionId, _a, visualElement2, ProjectionNodeConstructor) {
  var _b;
  var layoutId = _a.layoutId, layout3 = _a.layout, drag2 = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;
  var initialPromotionConfig = (0, import_react32.useContext)(SwitchLayoutGroupContext);
  if (!ProjectionNodeConstructor || !visualElement2 || (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.projection)) {
    return;
  }
  visualElement2.projection = new ProjectionNodeConstructor(projectionId, visualElement2.getLatestValues(), (_b = visualElement2.parent) === null || _b === void 0 ? void 0 : _b.projection);
  visualElement2.projection.setOptions({
    layoutId,
    layout: layout3,
    alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject3(dragConstraints),
    visualElement: visualElement2,
    scheduleRender: function() {
      return visualElement2.scheduleRender();
    },
    animationType: typeof layout3 === "string" ? layout3 : "both",
    initialPromotionConfig,
    layoutScroll
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs
var import_react33 = __toESM(require_react(), 1);
var VisualElementHandler = function(_super) {
  __extends(VisualElementHandler2, _super);
  function VisualElementHandler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  VisualElementHandler2.prototype.getSnapshotBeforeUpdate = function() {
    this.updateProps();
    return null;
  };
  VisualElementHandler2.prototype.componentDidUpdate = function() {
  };
  VisualElementHandler2.prototype.updateProps = function() {
    var _a = this.props, visualElement2 = _a.visualElement, props = _a.props;
    if (visualElement2)
      visualElement2.setProps(props);
  };
  VisualElementHandler2.prototype.render = function() {
    return this.props.children;
  };
  return VisualElementHandler2;
}(import_react33.default.Component);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/index.mjs
function createMotionComponent(_a) {
  var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState2 = _a.useVisualState, Component2 = _a.Component;
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    var layoutId = useLayoutId(props);
    props = __assign(__assign({}, props), { layoutId });
    var config3 = (0, import_react34.useContext)(MotionConfigContext);
    var features = null;
    var context = useCreateMotionContext(props);
    var projectionId = config3.isStatic ? void 0 : useProjectionId();
    var visualState = useVisualState2(props, config3.isStatic);
    if (!config3.isStatic && isBrowser4) {
      context.visualElement = useVisualElement(Component2, visualState, __assign(__assign({}, config3), props), createVisualElement);
      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);
      features = useFeatures(props, context.visualElement, preloadedFeatures);
    }
    return React20.createElement(VisualElementHandler, { visualElement: context.visualElement, props: __assign(__assign({}, config3), props) }, features, React20.createElement(MotionContext.Provider, { value: context }, useRender(Component2, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config3.isStatic, context.visualElement)));
  }
  return (0, import_react34.forwardRef)(MotionComponent);
}
function useLayoutId(_a) {
  var _b;
  var layoutId = _a.layoutId;
  var layoutGroupId = (_b = (0, import_react34.useContext)(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs
function createMotionProxy(createConfig) {
  function custom(Component2, customMotionComponentConfig) {
    if (customMotionComponentConfig === void 0) {
      customMotionComponentConfig = {};
    }
    return createMotionComponent(createConfig(Component2, customMotionComponentConfig));
  }
  if (typeof Proxy === "undefined") {
    return custom;
  }
  var componentCache = /* @__PURE__ */ new Map();
  return new Proxy(custom, {
    get: function(_target, key) {
      if (!componentCache.has(key)) {
        componentCache.set(key, custom(key));
      }
      return componentCache.get(key);
    }
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view"
];

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component2) {
  if (typeof Component2 !== "string" || Component2.includes("-")) {
    return false;
  } else if (lowercaseSVGElements.indexOf(Component2) > -1 || /[A-Z]/.test(Component2)) {
    return true;
  }
  return false;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react37 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react35 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, _a) {
  var layout3 = _a.layout, layoutId = _a.layoutId;
  return isTransformProp(key) || isTransformOriginProp(key) || (layout3 || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
function buildTransform(_a, _b, transformIsDefault, transformTemplate3) {
  var transform19 = _a.transform, transformKeys2 = _a.transformKeys;
  var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
  var transformString = "";
  transformKeys2.sort(sortTransformProps);
  var transformHasZ = false;
  var numTransformKeys = transformKeys2.length;
  for (var i = 0; i < numTransformKeys; i++) {
    var key = transformKeys2[i];
    transformString += "".concat(translateAlias[key] || key, "(").concat(transform19[key], ") ");
    if (key === "z")
      transformHasZ = true;
  }
  if (!transformHasZ && enableHardwareAcceleration) {
    transformString += "translateZ(0)";
  } else {
    transformString = transformString.trim();
  }
  if (transformTemplate3) {
    transformString = transformTemplate3(transform19, transformIsDefault ? "" : transformString);
  } else if (allowTransformNone && transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
function buildTransformOrigin(_a) {
  var _b = _a.originX, originX = _b === void 0 ? "50%" : _b, _c = _a.originY, originY = _c === void 0 ? "50%" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;
  return "".concat(originX, " ").concat(originY, " ").concat(originZ);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
function isCSSVariable(key) {
  return key.startsWith("--");
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType = function(value, type) {
  return type && typeof value === "number" ? type.transform(value) : value;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state3, latestValues, options, transformTemplate3) {
  var _a;
  var style = state3.style, vars = state3.vars, transform19 = state3.transform, transformKeys2 = state3.transformKeys, transformOrigin2 = state3.transformOrigin;
  transformKeys2.length = 0;
  var hasTransform2 = false;
  var hasTransformOrigin = false;
  var transformIsNone = true;
  for (var key in latestValues) {
    var value = latestValues[key];
    if (isCSSVariable(key)) {
      vars[key] = value;
      continue;
    }
    var valueType = numberValueTypes[key];
    var valueAsType = getValueAsType(value, valueType);
    if (isTransformProp(key)) {
      hasTransform2 = true;
      transform19[key] = valueAsType;
      transformKeys2.push(key);
      if (!transformIsNone)
        continue;
      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))
        transformIsNone = false;
    } else if (isTransformOriginProp(key)) {
      transformOrigin2[key] = valueAsType;
      hasTransformOrigin = true;
    } else {
      style[key] = valueAsType;
    }
  }
  if (hasTransform2) {
    style.transform = buildTransform(state3, options, transformIsNone, transformTemplate3);
  } else if (transformTemplate3) {
    style.transform = transformTemplate3({}, "");
  } else if (!latestValues.transform && style.transform) {
    style.transform = "none";
  }
  if (hasTransformOrigin) {
    style.transformOrigin = buildTransformOrigin(transformOrigin2);
  }
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = function() {
  return {
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {}
  };
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (var key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues(_a, visualState, isStatic) {
  var transformTemplate3 = _a.transformTemplate;
  return (0, import_react35.useMemo)(function() {
    var state3 = createHtmlRenderState();
    buildHTMLStyles(state3, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate3);
    var vars = state3.vars, style = state3.style;
    return __assign(__assign({}, vars), style);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  var styleProp = props.style || {};
  var style = {};
  copyRawValuesOnly(style, styleProp, props);
  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));
  if (props.transformValues) {
    style = props.transformValues(style);
  }
  return style;
}
function useHTMLProps(props, visualState, isStatic) {
  var htmlProps = {};
  var style = useStyle(props, visualState, isStatic);
  if (Boolean(props.drag) && props.dragListener !== false) {
    htmlProps.draggable = false;
    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
    style.touchAction = props.drag === true ? "none" : "pan-".concat(props.drag === "x" ? "y" : "x");
  }
  htmlProps.style = style;
  return htmlProps;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "initial",
  "animate",
  "exit",
  "style",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "layout",
  "layoutId",
  "layoutDependency",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "drag",
  "dragControls",
  "dragListener",
  "dragConstraints",
  "dragDirectionLock",
  "dragSnapToOrigin",
  "_dragX",
  "_dragY",
  "dragElastic",
  "dragMomentum",
  "dragPropagation",
  "dragTransition",
  "whileDrag",
  "onPan",
  "onPanStart",
  "onPanEnd",
  "onPanSessionStart",
  "onTap",
  "onTapStart",
  "onTapCancel",
  "onHoverStart",
  "onHoverEnd",
  "whileFocus",
  "whileTap",
  "whileHover",
  "whileInView",
  "onViewportEnter",
  "onViewportLeave",
  "viewport",
  "layoutScroll"
]);
function isValidMotionProp(key) {
  return validMotionProps.has(key);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = function(key) {
  return !isValidMotionProp(key);
};
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = function(key) {
    return key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
  };
}
try {
  loadExternalIsValidProp((init_is_prop_valid_browser_esm(), __toCommonJS(is_prop_valid_browser_esm_exports)).default);
} catch (_a) {
}
function filterProps(props, isDom, forwardMotionProps) {
  var filteredProps = {};
  for (var key in props) {
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react36 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset2, size3) {
  return typeof origin === "string" ? origin : px5.transform(offset2 + size3 * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
  var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return "".concat(pxOriginX, " ").concat(pxOriginY);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
var camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length2, spacing3, offset2, useDashCase) {
  if (spacing3 === void 0) {
    spacing3 = 1;
  }
  if (offset2 === void 0) {
    offset2 = 0;
  }
  if (useDashCase === void 0) {
    useDashCase = true;
  }
  attrs.pathLength = 1;
  var keys4 = useDashCase ? dashKeys : camelKeys;
  attrs[keys4.offset] = px5.transform(-offset2);
  var pathLength = px5.transform(length2);
  var pathSpacing = px5.transform(spacing3);
  attrs[keys4.array] = "".concat(pathLength, " ").concat(pathSpacing);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state3, _a, options, transformTemplate3) {
  var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest(_a, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
  buildHTMLStyles(state3, latest, options, transformTemplate3);
  state3.attrs = state3.style;
  state3.style = {};
  var attrs = state3.attrs, style = state3.style, dimensions = state3.dimensions;
  if (attrs.transform) {
    if (dimensions)
      style.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style.transform)) {
    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = function() {
  return __assign(__assign({}, createHtmlRenderState()), { attrs: {} });
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState) {
  var visualProps = (0, import_react36.useMemo)(function() {
    var state3 = createSvgRenderState();
    buildSVGAttrs(state3, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);
    return __assign(__assign({}, state3.attrs), { style: __assign({}, state3.style) });
  }, [visualState]);
  if (props.style) {
    var rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = __assign(__assign({}, rawStyles), visualProps.style);
  }
  return visualProps;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps) {
  if (forwardMotionProps === void 0) {
    forwardMotionProps = false;
  }
  var useRender = function(Component2, props, projectionId, ref, _a, isStatic) {
    var latestValues = _a.latestValues;
    var useVisualProps = isSVGComponent(Component2) ? useSVGProps : useHTMLProps;
    var visualProps = useVisualProps(props, latestValues, isStatic);
    var filteredProps = filterProps(props, typeof Component2 === "string", forwardMotionProps);
    var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), { ref });
    if (projectionId) {
      elementProps["data-projection-id"] = projectionId;
    }
    return (0, import_react37.createElement)(Component2, elementProps);
  };
  return useRender;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
var camelToDash = function(str) {
  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, _a, styleProp, projection) {
  var style = _a.style, vars = _a.vars;
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (var key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength"
]);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (var key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props) {
  var style = props.style;
  var newValues = {};
  for (var key in style) {
    if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {
      newValues[key] = style[key];
    }
  }
  return newValues;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props) {
  var newValues = scrapeMotionValuesFromProps(props);
  for (var key in props) {
    if (isMotionValue(props[key])) {
      var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react38 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v) {
  return typeof v === "object" && typeof v.start === "function";
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState(_a, props, context, presenceContext) {
  var scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;
  var state3 = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  if (onMount) {
    state3.mount = function(instance) {
      return onMount(props, instance, state3);
    };
  }
  return state3;
}
var makeUseVisualState = function(config3) {
  return function(props, isStatic) {
    var context = (0, import_react38.useContext)(MotionContext);
    var presenceContext = (0, import_react38.useContext)(PresenceContext);
    return isStatic ? makeState(config3, props, context, presenceContext) : useConstant(function() {
      return makeState(config3, props, context, presenceContext);
    });
  };
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  var values = {};
  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
  var motionValues = scrapeMotionValues(props);
  for (var key in motionValues) {
    values[key] = resolveMotionValue(motionValues[key]);
  }
  var initial3 = props.initial, animate3 = props.animate;
  var isControllingVariants = checkIfControllingVariants(props);
  var isVariantNode = checkIfVariantNode(props);
  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {
    initial3 !== null && initial3 !== void 0 ? initial3 : initial3 = context.initial;
    animate3 !== null && animate3 !== void 0 ? animate3 : animate3 = context.animate;
  }
  var initialAnimationIsBlocked = blockInitialAnimation || initial3 === false;
  var variantToSet = initialAnimationIsBlocked ? animate3 : initial3;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    var list4 = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    list4.forEach(function(definition) {
      var resolved = resolveVariantFromProps(props, definition);
      if (!resolved)
        return;
      var transitionEnd = resolved.transitionEnd;
      resolved.transition;
      var target = __rest(resolved, ["transitionEnd", "transition"]);
      for (var key2 in target) {
        var valueTarget = target[key2];
        if (Array.isArray(valueTarget)) {
          var index2 = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;
          valueTarget = valueTarget[index2];
        }
        if (valueTarget !== null) {
          values[key2] = valueTarget;
        }
      }
      for (var key2 in transitionEnd)
        values[key2] = transitionEnd[key2];
    });
  }
  return values;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState,
    onMount: function(props, instance, _a) {
      var renderState = _a.renderState, latestValues = _a.latestValues;
      try {
        renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
      } catch (e) {
        renderState.dimensions = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
      }
      buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);
      renderSVG(instance, renderState);
    }
  })
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs
function createDomMotionConfig(Component2, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {
  var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
  var baseConfig = isSVGComponent(Component2) ? svgMotionConfig : htmlMotionConfig;
  return __assign(__assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement, projectionNodeConstructor, Component: Component2 });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/types.mjs
var AnimationType;
(function(AnimationType2) {
  AnimationType2["Animate"] = "animate";
  AnimationType2["Hover"] = "whileHover";
  AnimationType2["Tap"] = "whileTap";
  AnimationType2["Drag"] = "whileDrag";
  AnimationType2["Focus"] = "whileFocus";
  AnimationType2["InView"] = "whileInView";
  AnimationType2["Exit"] = "exit";
})(AnimationType || (AnimationType = {}));

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/events/use-dom-event.mjs
var import_react39 = __toESM(require_react(), 1);
function addDomEvent3(target, eventName, handler, options) {
  if (options === void 0) {
    options = { passive: true };
  }
  target.addEventListener(eventName, handler, options);
  return function() {
    return target.removeEventListener(eventName, handler);
  };
}
function useDomEvent(ref, eventName, handler, options) {
  (0, import_react39.useEffect)(function() {
    var element = ref.current;
    if (handler && element) {
      return addDomEvent3(element, eventName, handler, options);
    }
  }, [ref, eventName, handler, options]);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs
function useFocusGesture(_a) {
  var whileFocus = _a.whileFocus, visualElement2 = _a.visualElement;
  var onFocus3 = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, true);
  };
  var onBlur3 = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, false);
  };
  useDomEvent(visualElement2, "focus", whileFocus ? onFocus3 : void 0);
  useDomEvent(visualElement2, "blur", whileFocus ? onBlur3 : void 0);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs
function isMouseEvent3(event) {
  if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof MouseEvent;
}
function isTouchEvent3(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/events/event-info.mjs
function filterPrimaryPointer3(eventHandler) {
  return function(event) {
    var isMouseEvent4 = event instanceof MouseEvent;
    var isPrimaryPointer = !isMouseEvent4 || isMouseEvent4 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint3 = { pageX: 0, pageY: 0 };
function pointFromTouch3(e, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e.touches[0] || e.changedTouches[0];
  var point = primaryTouch || defaultPagePoint3;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse3(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo3(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent3(event) ? pointFromTouch3(event, pointType) : pointFromMouse3(event, pointType)
  };
}
var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function(event) {
    return handler(event, extractEventInfo3(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer3(listener) : listener;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/events/utils.mjs
var supportsPointerEvents5 = function() {
  return isBrowser4 && window.onpointerdown === null;
};
var supportsTouchEvents5 = function() {
  return isBrowser4 && window.ontouchstart === null;
};
var supportsMouseEvents5 = function() {
  return isBrowser4 && window.onmousedown === null;
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/events/use-pointer-event.mjs
var mouseEventNames3 = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames3 = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName3(name) {
  if (supportsPointerEvents5()) {
    return name;
  } else if (supportsTouchEvents5()) {
    return touchEventNames3[name];
  } else if (supportsMouseEvents5()) {
    return mouseEventNames3[name];
  }
  return name;
}
function addPointerEvent3(target, eventName, handler, options) {
  return addDomEvent3(target, getPointerEventName3(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
}
function usePointerEvent2(ref, eventName, handler, options) {
  return useDomEvent(ref, getPointerEventName3(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs
function createLock(name) {
  var lock = null;
  return function() {
    var openLock = function() {
      lock = null;
    };
    if (lock === null) {
      lock = name;
      return openLock;
    }
    return false;
  };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  var lock = false;
  if (drag2 === "y") {
    lock = globalVerticalLock();
  } else if (drag2 === "x") {
    lock = globalHorizontalLock();
  } else {
    var openHorizontal_1 = globalHorizontalLock();
    var openVertical_1 = globalVerticalLock();
    if (openHorizontal_1 && openVertical_1) {
      lock = function() {
        openHorizontal_1();
        openVertical_1();
      };
    } else {
      if (openHorizontal_1)
        openHorizontal_1();
      if (openVertical_1)
        openVertical_1();
    }
  }
  return lock;
}
function isDragActive() {
  var openGestureLock = getGlobalLock(true);
  if (!openGestureLock)
    return true;
  openGestureLock();
  return false;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs
function createHoverEvent(visualElement2, isActive, callback) {
  return function(event, info) {
    var _a;
    if (!isMouseEvent3(event) || isDragActive())
      return;
    (_a = visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);
    callback === null || callback === void 0 ? void 0 : callback(event, info);
  };
}
function useHoverGesture(_a) {
  var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement2 = _a.visualElement;
  usePointerEvent2(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0, { passive: !onHoverStart });
  usePointerEvent2(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0, { passive: !onHoverEnd });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
var import_react41 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = function(parent, child) {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs
var import_react40 = __toESM(require_react(), 1);
function useUnmountEffect2(callback) {
  return (0, import_react40.useEffect)(function() {
    return function() {
      return callback();
    };
  }, []);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
function useTapGesture(_a) {
  var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement2 = _a.visualElement;
  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
  var isPressing = (0, import_react41.useRef)(false);
  var cancelPointerEndListeners = (0, import_react41.useRef)(null);
  var eventOptions = {
    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)
  };
  function removePointerEndListener() {
    var _a2;
    (_a2 = cancelPointerEndListeners.current) === null || _a2 === void 0 ? void 0 : _a2.call(cancelPointerEndListeners);
    cancelPointerEndListeners.current = null;
  }
  function checkPointerEnd() {
    var _a2;
    removePointerEndListener();
    isPressing.current = false;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, false);
    return !isDragActive();
  }
  function onPointerUp(event, info) {
    if (!checkPointerEnd())
      return;
    !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
  }
  function onPointerCancel(event, info) {
    if (!checkPointerEnd())
      return;
    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
  }
  function onPointerDown(event, info) {
    var _a2;
    removePointerEndListener();
    if (isPressing.current)
      return;
    isPressing.current = true;
    cancelPointerEndListeners.current = pipe5(addPointerEvent3(window, "pointerup", onPointerUp, eventOptions), addPointerEvent3(window, "pointercancel", onPointerCancel, eventOptions));
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, true);
    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
  }
  usePointerEvent2(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0, eventOptions);
  useUnmountEffect2(removePointerEndListener);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
var import_react42 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/warn-once.mjs
var warned = /* @__PURE__ */ new Set();
function warnOnce(condition, message, element) {
  if (condition || warned.has(message))
    return;
  console.warn(message);
  if (element)
    console.warn(element);
  warned.add(message);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap();
var observers = /* @__PURE__ */ new WeakMap();
var fireObserverCallback = function(entry) {
  var _a;
  (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);
};
var fireAllObserverCallbacks = function(entries) {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver(_a) {
  var root2 = _a.root, options = __rest(_a, ["root"]);
  var lookupRoot = root2 || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  var rootObservers = observers.get(lookupRoot);
  var key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, __assign({ root: root2 }, options));
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  var rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return function() {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
function useViewport(_a) {
  var visualElement2 = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport2 = _b === void 0 ? {} : _b;
  var state3 = (0, import_react42.useRef)({
    hasEnteredView: false,
    isInView: false
  });
  var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);
  if (viewport2.once && state3.current.hasEnteredView)
    shouldObserve = false;
  var useObserver = typeof IntersectionObserver === "undefined" ? useMissingIntersectionObserver : useIntersectionObserver;
  useObserver(shouldObserve, state3.current, visualElement2, viewport2);
}
var thresholdNames = {
  some: 0,
  all: 1
};
function useIntersectionObserver(shouldObserve, state3, visualElement2, _a) {
  var root2 = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? "some" : _b, once3 = _a.once;
  (0, import_react42.useEffect)(function() {
    if (!shouldObserve)
      return;
    var options = {
      root: root2 === null || root2 === void 0 ? void 0 : root2.current,
      rootMargin,
      threshold: typeof amount === "number" ? amount : thresholdNames[amount]
    };
    var intersectionCallback = function(entry) {
      var _a2;
      var isIntersecting = entry.isIntersecting;
      if (state3.isInView === isIntersecting)
        return;
      state3.isInView = isIntersecting;
      if (once3 && !isIntersecting && state3.hasEnteredView) {
        return;
      } else if (isIntersecting) {
        state3.hasEnteredView = true;
      }
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, isIntersecting);
      var props = visualElement2.getProps();
      var callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;
      callback === null || callback === void 0 ? void 0 : callback(entry);
    };
    return observeIntersection(visualElement2.getInstance(), options, intersectionCallback);
  }, [shouldObserve, root2, rootMargin, amount]);
}
function useMissingIntersectionObserver(shouldObserve, state3, visualElement2, _a) {
  var _b = _a.fallback, fallback = _b === void 0 ? true : _b;
  (0, import_react42.useEffect)(function() {
    if (!shouldObserve || !fallback)
      return;
    if (env !== "production") {
      warnOnce(false, "IntersectionObserver not available on this device. whileInView animations will trigger on mount.");
    }
    requestAnimationFrame(function() {
      var _a2;
      state3.hasEnteredView = true;
      var onViewportEnter = visualElement2.getProps().onViewportEnter;
      onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, true);
    });
  }, [shouldObserve]);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs
var makeRenderlessComponent = function(hook) {
  return function(props) {
    hook(props);
    return null;
  };
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: makeRenderlessComponent(useViewport),
  tap: makeRenderlessComponent(useTapGesture),
  focus: makeRenderlessComponent(useFocusGesture),
  hover: makeRenderlessComponent(useHoverGesture)
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/animations.mjs
var import_react44 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react43 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-id.mjs
var counter = 0;
var incrementId = function() {
  return counter++;
};
var useId3 = function() {
  return useConstant(incrementId);
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
function usePresence() {
  var context = (0, import_react43.useContext)(PresenceContext);
  if (context === null)
    return [true, null];
  var isPresent2 = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
  var id2 = useId3();
  (0, import_react43.useEffect)(function() {
    return register(id2);
  }, []);
  var safeToRemove = function() {
    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id2);
  };
  return !isPresent2 && onExitComplete ? [false, safeToRemove] : [true];
}
function useIsPresent() {
  return isPresent((0, import_react43.useContext)(PresenceContext));
}
function isPresent(context) {
  return context === null ? true : context.isPresent;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next2, prev2) {
  if (!Array.isArray(prev2))
    return false;
  var prevLength = prev2.length;
  if (prevLength !== next2.length)
    return false;
  for (var i = 0; i < prevLength; i++) {
    if (prev2[i] !== next2[i])
      return false;
  }
  return true;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString = function(v) {
  return /^\-?\d*\.?\d+$/.test(v);
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString = function(v) {
  return /^0[^.\s]+$/.test(v);
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType = function(v) {
  return function(type) {
    return type.test(v);
  };
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto = {
  test: function(v) {
    return v === "auto";
  },
  parse: function(v) {
    return v;
  }
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes = [number, px5, percent, degrees, vw, vh, auto];
var findDimensionValueType = function(v) {
  return dimensionValueTypes.find(testValueType(v));
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes), false), [color3, complex], false);
var findValueType = function(v) {
  return valueTypes.find(testValueType(v));
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement2, key, value) {
  if (visualElement2.hasValue(key)) {
    visualElement2.getValue(key).set(value);
  } else {
    visualElement2.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement2, definition) {
  var resolved = resolveVariant(visualElement2, definition);
  var _a = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;
  _a.transition;
  var target = __rest(_a, ["transitionEnd", "transition"]);
  target = __assign(__assign({}, target), transitionEnd);
  for (var key in target) {
    var value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement2, key, value);
  }
}
function checkTargetForNewValues(visualElement2, target, origin) {
  var _a, _b, _c;
  var _d;
  var newValueKeys = Object.keys(target).filter(function(key2) {
    return !visualElement2.hasValue(key2);
  });
  var numNewValues = newValueKeys.length;
  if (!numNewValues)
    return;
  for (var i = 0; i < numNewValues; i++) {
    var key = newValueKeys[i];
    var targetValue = target[key];
    var value = null;
    if (Array.isArray(targetValue)) {
      value = targetValue[0];
    }
    if (value === null) {
      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
    }
    if (value === void 0 || value === null)
      continue;
    if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
      value = parseFloat(value);
    } else if (!findValueType(value) && complex.test(targetValue)) {
      value = getAnimatableNone2(key, targetValue);
    }
    visualElement2.addValue(key, motionValue(value));
    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;
    visualElement2.setBaseTarget(key, value);
  }
}
function getOriginFromTransition(key, transition5) {
  if (!transition5)
    return;
  var valueTransition = transition5[key] || transition5["default"] || transition5;
  return valueTransition.from;
}
function getOrigin(target, transition5, visualElement2) {
  var _a, _b;
  var origin = {};
  for (var key in target) {
    origin[key] = (_a = getOriginFromTransition(key, transition5)) !== null && _a !== void 0 ? _a : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
  }
  return origin;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/animation.mjs
function animateVisualElement(visualElement2, definition, options) {
  if (options === void 0) {
    options = {};
  }
  visualElement2.notifyAnimationStart(definition);
  var animation;
  if (Array.isArray(definition)) {
    var animations2 = definition.map(function(variant) {
      return animateVariant(visualElement2, variant, options);
    });
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement2, definition, options);
  } else {
    var resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement2, definition, options.custom) : definition;
    animation = animateTarget(visualElement2, resolvedDefinition, options);
  }
  return animation.then(function() {
    return visualElement2.notifyAnimationComplete(definition);
  });
}
function animateVariant(visualElement2, variant, options) {
  var _a;
  if (options === void 0) {
    options = {};
  }
  var resolved = resolveVariant(visualElement2, variant, options.custom);
  var _b = (resolved || {}).transition, transition5 = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
  if (options.transitionOverride) {
    transition5 = options.transitionOverride;
  }
  var getAnimation2 = resolved ? function() {
    return animateTarget(visualElement2, resolved, options);
  } : function() {
    return Promise.resolve();
  };
  var getChildAnimations = ((_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function(forwardDelay) {
    if (forwardDelay === void 0) {
      forwardDelay = 0;
    }
    var _a2 = transition5.delayChildren, delayChildren = _a2 === void 0 ? 0 : _a2, staggerChildren = transition5.staggerChildren, staggerDirection = transition5.staggerDirection;
    return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : function() {
    return Promise.resolve();
  };
  var when = transition5.when;
  if (when) {
    var _c = __read(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last3 = _c[1];
    return first().then(last3);
  } else {
    return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
  }
}
function animateTarget(visualElement2, definition, _a) {
  var _b;
  var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
  var _e = visualElement2.makeTargetAnimatable(definition), _f = _e.transition, transition5 = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = __rest(_e, ["transition", "transitionEnd"]);
  if (transitionOverride)
    transition5 = transitionOverride;
  var animations2 = [];
  var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
  for (var key in target) {
    var value = visualElement2.getValue(key);
    var valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    var valueTransition = __assign({ delay }, transition5);
    if (visualElement2.shouldReduceMotion && isTransformProp(key)) {
      valueTransition = __assign(__assign({}, valueTransition), { type: false, delay: 0 });
    }
    var animation = startAnimation(key, value, valueTarget, valueTransition);
    animations2.push(animation);
  }
  return Promise.all(animations2).then(function() {
    transitionEnd && setTarget(visualElement2, transitionEnd);
  });
}
function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
  if (delayChildren === void 0) {
    delayChildren = 0;
  }
  if (staggerChildren === void 0) {
    staggerChildren = 0;
  }
  if (staggerDirection === void 0) {
    staggerDirection = 1;
  }
  var animations2 = [];
  var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;
  var generateStaggerDuration = staggerDirection === 1 ? function(i) {
    if (i === void 0) {
      i = 0;
    }
    return i * staggerChildren;
  } : function(i) {
    if (i === void 0) {
      i = 0;
    }
    return maxStaggerDuration - i * staggerChildren;
  };
  Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i) {
    animations2.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function() {
      return child.notifyAnimationComplete(variant);
    }));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a2, b2) {
  return a2.sortNodePosition(b2);
}
function shouldBlockAnimation(_a, key) {
  var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;
  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var variantPriorityOrder = [
  AnimationType.Animate,
  AnimationType.InView,
  AnimationType.Focus,
  AnimationType.Hover,
  AnimationType.Tap,
  AnimationType.Drag,
  AnimationType.Exit
];
var reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder), false).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement2) {
  return function(animations2) {
    return Promise.all(animations2.map(function(_a) {
      var animation = _a.animation, options = _a.options;
      return animateVisualElement(visualElement2, animation, options);
    }));
  };
}
function createAnimationState(visualElement2) {
  var animate3 = animateList(visualElement2);
  var state3 = createState();
  var allAnimatedKeys = {};
  var isInitialRender = true;
  var buildResolvedTypeValues = function(acc, definition) {
    var resolved = resolveVariant(visualElement2, definition);
    if (resolved) {
      resolved.transition;
      var transitionEnd = resolved.transitionEnd, target = __rest(resolved, ["transition", "transitionEnd"]);
      acc = __assign(__assign(__assign({}, acc), target), transitionEnd);
    }
    return acc;
  };
  function isAnimated(key) {
    return allAnimatedKeys[key] !== void 0;
  }
  function setAnimateFunction(makeAnimator) {
    animate3 = makeAnimator(visualElement2);
  }
  function animateChanges(options, changedActiveType) {
    var _a;
    var props = visualElement2.getProps();
    var context = visualElement2.getVariantContext(true) || {};
    var animations2 = [];
    var removedKeys = /* @__PURE__ */ new Set();
    var encounteredKeys = {};
    var removedVariantIndex = Infinity;
    var _loop_1 = function(i2) {
      var type = reversePriorityOrder[i2];
      var typeState = state3[type];
      var prop3 = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];
      var propIsVariant = isVariantLabel(prop3);
      var activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i2;
      var isInherited = prop3 === context[type] && prop3 !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = __assign({}, encounteredKeys);
      if (!typeState.isActive && activeDelta === null || !prop3 && !typeState.prevProp || isAnimationControls(prop3) || typeof prop3 === "boolean") {
        return "continue";
      }
      var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop3);
      var shouldAnimateType = variantDidChange || type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || i2 > removedVariantIndex && propIsVariant;
      var definitionList = Array.isArray(prop3) ? prop3 : [prop3];
      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      if (activeDelta === false)
        resolvedValues = {};
      var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
      var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);
      var markToAnimate = function(key2) {
        shouldAnimateType = true;
        removedKeys.delete(key2);
        typeState.needsAnimating[key2] = true;
      };
      for (var key in allKeys) {
        var next2 = resolvedValues[key];
        var prev2 = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        if (next2 !== prev2) {
          if (isKeyframesTarget(next2) && isKeyframesTarget(prev2)) {
            if (!shallowCompare(next2, prev2) || variantDidChange) {
              markToAnimate(key);
            } else {
              typeState.protectedKeys[key] = true;
            }
          } else if (next2 !== void 0) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next2 !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop3;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);
      }
      if (isInitialRender && visualElement2.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      if (shouldAnimateType && !isInherited) {
        animations2.push.apply(animations2, __spreadArray([], __read(definitionList.map(function(animation) {
          return {
            animation,
            options: __assign({ type }, options)
          };
        })), false));
      }
    };
    for (var i = 0; i < numAnimationTypes; i++) {
      _loop_1(i);
    }
    allAnimatedKeys = __assign({}, encounteredKeys);
    if (removedKeys.size) {
      var fallbackAnimation_1 = {};
      removedKeys.forEach(function(key) {
        var fallbackTarget = visualElement2.getBaseTarget(key);
        if (fallbackTarget !== void 0) {
          fallbackAnimation_1[key] = fallbackTarget;
        }
      });
      animations2.push({ animation: fallbackAnimation_1 });
    }
    var shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate3(animations2) : Promise.resolve();
  }
  function setActive(type, isActive, options) {
    var _a;
    if (state3[type].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function(child) {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type, isActive);
    });
    state3[type].isActive = isActive;
    var animations2 = animateChanges(options, type);
    for (var key in state3) {
      state3[key].protectedKeys = {};
    }
    return animations2;
  }
  return {
    isAnimated,
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: function() {
      return state3;
    }
  };
}
function checkVariantsDidChange(prev2, next2) {
  if (typeof next2 === "string") {
    return next2 !== prev2;
  } else if (isVariantLabels(next2)) {
    return !shallowCompare(next2, prev2);
  }
  return false;
}
function createTypeState(isActive) {
  if (isActive === void 0) {
    isActive = false;
  }
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  var _a;
  return _a = {}, _a[AnimationType.Animate] = createTypeState(true), _a[AnimationType.InView] = createTypeState(), _a[AnimationType.Hover] = createTypeState(), _a[AnimationType.Tap] = createTypeState(), _a[AnimationType.Drag] = createTypeState(), _a[AnimationType.Focus] = createTypeState(), _a[AnimationType.Exit] = createTypeState(), _a;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: makeRenderlessComponent(function(_a) {
    var visualElement2 = _a.visualElement, animate3 = _a.animate;
    visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));
    if (isAnimationControls(animate3)) {
      (0, import_react44.useEffect)(function() {
        return animate3.subscribe(visualElement2);
      }, [animate3]);
    }
  }),
  exit: makeRenderlessComponent(function(props) {
    var custom = props.custom, visualElement2 = props.visualElement;
    var _a = __read(usePresence(), 2), isPresent2 = _a[0], safeToRemove = _a[1];
    var presenceContext = (0, import_react44.useContext)(PresenceContext);
    (0, import_react44.useEffect)(function() {
      var _a2, _b;
      visualElement2.isPresent = isPresent2;
      var animation = (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Exit, !isPresent2, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
      !isPresent2 && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));
    }, [isPresent2]);
  })
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
var import_react45 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/PanSession.mjs
var PanSession3 = function() {
  function PanSession4(event, handlers, _a) {
    var _this = this;
    var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;
    this.startEvent = null;
    this.lastMoveEvent = null;
    this.lastMoveEventInfo = null;
    this.handlers = {};
    this.updatePoint = function() {
      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
        return;
      var info2 = getPanInfo3(_this.lastMoveEventInfo, _this.history);
      var isPanStarted = _this.startEvent !== null;
      var isDistancePastThreshold = distance3(info2.offset, { x: 0, y: 0 }) >= 3;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      var point2 = info2.point;
      var timestamp2 = getFrameData2().timestamp;
      _this.history.push(__assign(__assign({}, point2), { timestamp: timestamp2 }));
      var _a2 = _this.handlers, onStart = _a2.onStart, onMove = _a2.onMove;
      if (!isPanStarted) {
        onStart && onStart(_this.lastMoveEvent, info2);
        _this.startEvent = _this.lastMoveEvent;
      }
      onMove && onMove(_this.lastMoveEvent, info2);
    };
    this.handlePointerMove = function(event2, info2) {
      _this.lastMoveEvent = event2;
      _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);
      if (isMouseEvent3(event2) && event2.buttons === 0) {
        _this.handlePointerUp(event2, info2);
        return;
      }
      es_default2.update(_this.updatePoint, true);
    };
    this.handlePointerUp = function(event2, info2) {
      _this.end();
      var _a2 = _this.handlers, onEnd = _a2.onEnd, onSessionEnd = _a2.onSessionEnd;
      var panInfo = getPanInfo3(transformPoint(info2, _this.transformPagePoint), _this.history);
      if (_this.startEvent && onEnd) {
        onEnd(event2, panInfo);
      }
      onSessionEnd && onSessionEnd(event2, panInfo);
    };
    if (isTouchEvent3(event) && event.touches.length > 1)
      return;
    this.handlers = handlers;
    this.transformPagePoint = transformPagePoint;
    var info = extractEventInfo3(event);
    var initialInfo = transformPoint(info, this.transformPagePoint);
    var point = initialInfo.point;
    var timestamp = getFrameData2().timestamp;
    this.history = [__assign(__assign({}, point), { timestamp })];
    var onSessionStart = handlers.onSessionStart;
    onSessionStart && onSessionStart(event, getPanInfo3(initialInfo, this.history));
    this.removeListeners = pipe5(addPointerEvent3(window, "pointermove", this.handlePointerMove), addPointerEvent3(window, "pointerup", this.handlePointerUp), addPointerEvent3(window, "pointercancel", this.handlePointerUp));
  }
  PanSession4.prototype.updateHandlers = function(handlers) {
    this.handlers = handlers;
  };
  PanSession4.prototype.end = function() {
    this.removeListeners && this.removeListeners();
    cancelSync2.update(this.updatePoint);
  };
  return PanSession4;
}();
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint3(a2, b2) {
  return { x: a2.x - b2.x, y: a2.y - b2.y };
}
function getPanInfo3(_a, history) {
  var point = _a.point;
  return {
    point,
    delta: subtractPoint3(point, lastDevicePoint3(history)),
    offset: subtractPoint3(point, startDevicePoint(history)),
    velocity: getVelocity4(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint3(history) {
  return history[history.length - 1];
}
function getVelocity4(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  var i = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint3(history);
  while (i >= 0) {
    timestampedPoint = history[i];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time === 0) {
    return { x: 0, y: 0 };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time,
    y: (lastPoint.y - timestampedPoint.y) / time
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, _a, elastic) {
  var min2 = _a.min, max2 = _a.max;
  if (min2 !== void 0 && point < min2) {
    point = elastic ? mix(min2, point, elastic.min) : Math.max(point, min2);
  } else if (max2 !== void 0 && point > max2) {
    point = elastic ? mix(max2, point, elastic.max) : Math.min(point, max2);
  }
  return point;
}
function calcRelativeAxisConstraints(axis, min2, max2) {
  return {
    min: min2 !== void 0 ? axis.min + min2 : void 0,
    max: max2 !== void 0 ? axis.max + max2 - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, _a) {
  var top2 = _a.top, left2 = _a.left, bottom2 = _a.bottom, right2 = _a.right;
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left2, right2),
    y: calcRelativeAxisConstraints(layoutBox.y, top2, bottom2)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  var _a;
  var min2 = constraintsAxis.min - layoutAxis.min;
  var max2 = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    _a = __read([max2, min2], 2), min2 = _a[0], max2 = _a[1];
  }
  return { min: min2, max: max2 };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  var origin = 0.5;
  var sourceLength = calcLength(source);
  var targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clamp(0, 1, origin);
}
function rebaseAxisConstraints(layout3, constraints) {
  var relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout3.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout3.min;
  }
  return relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic) {
  if (dragElastic === void 0) {
    dragElastic = defaultElastic;
  }
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  var _a;
  return typeof dragElastic === "number" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox(_a) {
  var top2 = _a.top, left2 = _a.left, right2 = _a.right, bottom2 = _a.bottom;
  return {
    x: { min: left2, max: right2 },
    y: { min: top2, max: bottom2 }
  };
}
function convertBoxToBoundingBox(_a) {
  var x = _a.x, y = _a.y;
  return { top: y.min, right: x.max, bottom: y.max, left: x.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  var topLeft = transformPoint2({ x: point.left, y: point.top });
  var bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  var viewportBox = measureViewportBox(element, transformPagePoint);
  var scroll3 = rootProjectionNode2.scroll;
  if (scroll3) {
    translateAxis(viewportBox.x, scroll3.x);
    translateAxis(viewportBox.y, scroll3.y);
  }
  return viewportBox;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap();
var VisualElementDragControls = function() {
  function VisualElementDragControls2(visualElement2) {
    this.openGlobalLock = null;
    this.isDragging = false;
    this.currentDirection = null;
    this.originPoint = { x: 0, y: 0 };
    this.constraints = false;
    this.hasMutatedConstraints = false;
    this.elastic = createBox3();
    this.visualElement = visualElement2;
  }
  VisualElementDragControls2.prototype.start = function(originEvent, _a) {
    var _this = this;
    var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;
    if (this.visualElement.isPresent === false)
      return;
    var onSessionStart = function(event) {
      _this.stopAnimation();
      if (snapToCursor) {
        _this.snapToCursor(extractEventInfo3(event, "page").point);
      }
    };
    var onStart = function(event, info) {
      var _a2;
      var _b2 = _this.getProps(), drag2 = _b2.drag, dragPropagation = _b2.dragPropagation, onDragStart = _b2.onDragStart;
      if (drag2 && !dragPropagation) {
        if (_this.openGlobalLock)
          _this.openGlobalLock();
        _this.openGlobalLock = getGlobalLock(drag2);
        if (!_this.openGlobalLock)
          return;
      }
      _this.isDragging = true;
      _this.currentDirection = null;
      _this.resolveConstraints();
      if (_this.visualElement.projection) {
        _this.visualElement.projection.isAnimationBlocked = true;
        _this.visualElement.projection.target = void 0;
      }
      eachAxis(function(axis) {
        var _a3, _b3;
        var current = _this.getAxisMotionValue(axis).get() || 0;
        if (percent.test(current)) {
          var measuredAxis = (_b3 = (_a3 = _this.visualElement.projection) === null || _a3 === void 0 ? void 0 : _a3.layout) === null || _b3 === void 0 ? void 0 : _b3.actual[axis];
          if (measuredAxis) {
            var length_1 = calcLength(measuredAxis);
            current = length_1 * (parseFloat(current) / 100);
          }
        }
        _this.originPoint[axis] = current;
      });
      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);
      (_a2 = _this.visualElement.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Drag, true);
    };
    var onMove = function(event, info) {
      var _a2 = _this.getProps(), dragPropagation = _a2.dragPropagation, dragDirectionLock = _a2.dragDirectionLock, onDirectionLock = _a2.onDirectionLock, onDrag = _a2.onDrag;
      if (!dragPropagation && !_this.openGlobalLock)
        return;
      var offset2 = info.offset;
      if (dragDirectionLock && _this.currentDirection === null) {
        _this.currentDirection = getCurrentDirection(offset2);
        if (_this.currentDirection !== null) {
          onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);
        }
        return;
      }
      _this.updateAxis("x", info.point, offset2);
      _this.updateAxis("y", info.point, offset2);
      _this.visualElement.syncRender();
      onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);
    };
    var onSessionEnd = function(event, info) {
      return _this.stop(event, info);
    };
    this.panSession = new PanSession3(originEvent, {
      onSessionStart,
      onStart,
      onMove,
      onSessionEnd
    }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
  };
  VisualElementDragControls2.prototype.stop = function(event, info) {
    var isDragging = this.isDragging;
    this.cancel();
    if (!isDragging)
      return;
    var velocity = info.velocity;
    this.startAnimation(velocity);
    var onDragEnd = this.getProps().onDragEnd;
    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
  };
  VisualElementDragControls2.prototype.cancel = function() {
    var _a, _b;
    this.isDragging = false;
    if (this.visualElement.projection) {
      this.visualElement.projection.isAnimationBlocked = false;
    }
    (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();
    this.panSession = void 0;
    var dragPropagation = this.getProps().dragPropagation;
    if (!dragPropagation && this.openGlobalLock) {
      this.openGlobalLock();
      this.openGlobalLock = null;
    }
    (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);
  };
  VisualElementDragControls2.prototype.updateAxis = function(axis, _point, offset2) {
    var drag2 = this.getProps().drag;
    if (!offset2 || !shouldDrag(axis, drag2, this.currentDirection))
      return;
    var axisValue = this.getAxisMotionValue(axis);
    var next2 = this.originPoint[axis] + offset2[axis];
    if (this.constraints && this.constraints[axis]) {
      next2 = applyConstraints(next2, this.constraints[axis], this.elastic[axis]);
    }
    axisValue.set(next2);
  };
  VisualElementDragControls2.prototype.resolveConstraints = function() {
    var _this = this;
    var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;
    var layout3 = (this.visualElement.projection || {}).layout;
    var prevConstraints = this.constraints;
    if (dragConstraints && isRefObject3(dragConstraints)) {
      if (!this.constraints) {
        this.constraints = this.resolveRefConstraints();
      }
    } else {
      if (dragConstraints && layout3) {
        this.constraints = calcRelativeConstraints(layout3.actual, dragConstraints);
      } else {
        this.constraints = false;
      }
    }
    this.elastic = resolveDragElastic(dragElastic);
    if (prevConstraints !== this.constraints && layout3 && this.constraints && !this.hasMutatedConstraints) {
      eachAxis(function(axis) {
        if (_this.getAxisMotionValue(axis)) {
          _this.constraints[axis] = rebaseAxisConstraints(layout3.actual[axis], _this.constraints[axis]);
        }
      });
    }
  };
  VisualElementDragControls2.prototype.resolveRefConstraints = function() {
    var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;
    if (!constraints || !isRefObject3(constraints))
      return false;
    var constraintsElement = constraints.current;
    invariant2(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
    var projection = this.visualElement.projection;
    if (!projection || !projection.layout)
      return false;
    var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
    var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
    if (onMeasureDragConstraints) {
      var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
      this.hasMutatedConstraints = !!userConstraints;
      if (userConstraints) {
        measuredConstraints = convertBoundingBoxToBox(userConstraints);
      }
    }
    return measuredConstraints;
  };
  VisualElementDragControls2.prototype.startAnimation = function(velocity) {
    var _this = this;
    var _a = this.getProps(), drag2 = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;
    var constraints = this.constraints || {};
    var momentumAnimations = eachAxis(function(axis) {
      var _a2;
      if (!shouldDrag(axis, drag2, _this.currentDirection)) {
        return;
      }
      var transition5 = (_a2 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a2 !== void 0 ? _a2 : {};
      if (dragSnapToOrigin)
        transition5 = { min: 0, max: 0 };
      var bounceStiffness = dragElastic ? 200 : 1e6;
      var bounceDamping = dragElastic ? 40 : 1e7;
      var inertia2 = __assign(__assign({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness, bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition5);
      return _this.startAxisValueAnimation(axis, inertia2);
    });
    return Promise.all(momentumAnimations).then(onDragTransitionEnd);
  };
  VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition5) {
    var axisValue = this.getAxisMotionValue(axis);
    return startAnimation(axis, axisValue, 0, transition5);
  };
  VisualElementDragControls2.prototype.stopAnimation = function() {
    var _this = this;
    eachAxis(function(axis) {
      return _this.getAxisMotionValue(axis).stop();
    });
  };
  VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
    var _a, _b;
    var dragKey = "_drag" + axis.toUpperCase();
    var externalMotionValue = this.visualElement.getProps()[dragKey];
    return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);
  };
  VisualElementDragControls2.prototype.snapToCursor = function(point) {
    var _this = this;
    eachAxis(function(axis) {
      var drag2 = _this.getProps().drag;
      if (!shouldDrag(axis, drag2, _this.currentDirection))
        return;
      var projection = _this.visualElement.projection;
      var axisValue = _this.getAxisMotionValue(axis);
      if (projection && projection.layout) {
        var _a = projection.layout.actual[axis], min2 = _a.min, max2 = _a.max;
        axisValue.set(point[axis] - mix(min2, max2, 0.5));
      }
    });
  };
  VisualElementDragControls2.prototype.scalePositionWithinConstraints = function() {
    var _this = this;
    var _a;
    var _b = this.getProps(), drag2 = _b.drag, dragConstraints = _b.dragConstraints;
    var projection = this.visualElement.projection;
    if (!isRefObject3(dragConstraints) || !projection || !this.constraints)
      return;
    this.stopAnimation();
    var boxProgress = { x: 0, y: 0 };
    eachAxis(function(axis) {
      var axisValue = _this.getAxisMotionValue(axis);
      if (axisValue) {
        var latest = axisValue.get();
        boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, _this.constraints[axis]);
      }
    });
    var transformTemplate3 = this.visualElement.getProps().transformTemplate;
    this.visualElement.getInstance().style.transform = transformTemplate3 ? transformTemplate3({}, "") : "none";
    (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
    projection.updateLayout();
    this.resolveConstraints();
    eachAxis(function(axis) {
      if (!shouldDrag(axis, drag2, null))
        return;
      var axisValue = _this.getAxisMotionValue(axis);
      var _a2 = _this.constraints[axis], min2 = _a2.min, max2 = _a2.max;
      axisValue.set(mix(min2, max2, boxProgress[axis]));
    });
  };
  VisualElementDragControls2.prototype.addListeners = function() {
    var _this = this;
    var _a;
    elementDragControls.set(this.visualElement, this);
    var element = this.visualElement.getInstance();
    var stopPointerListener = addPointerEvent3(element, "pointerdown", function(event) {
      var _a2 = _this.getProps(), drag2 = _a2.drag, _b = _a2.dragListener, dragListener = _b === void 0 ? true : _b;
      drag2 && dragListener && _this.start(event);
    });
    var measureDragConstraints = function() {
      var dragConstraints = _this.getProps().dragConstraints;
      if (isRefObject3(dragConstraints)) {
        _this.constraints = _this.resolveRefConstraints();
      }
    };
    var projection = this.visualElement.projection;
    var stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
    if (projection && !projection.layout) {
      (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
      projection.updateLayout();
    }
    measureDragConstraints();
    var stopResizeListener = addDomEvent3(window, "resize", function() {
      return _this.scalePositionWithinConstraints();
    });
    projection.addEventListener("didUpdate", function(_a2) {
      var delta = _a2.delta, hasLayoutChanged = _a2.hasLayoutChanged;
      if (_this.isDragging && hasLayoutChanged) {
        eachAxis(function(axis) {
          var motionValue2 = _this.getAxisMotionValue(axis);
          if (!motionValue2)
            return;
          _this.originPoint[axis] += delta[axis].translate;
          motionValue2.set(motionValue2.get() + delta[axis].translate);
        });
        _this.visualElement.syncRender();
      }
    });
    return function() {
      stopResizeListener();
      stopPointerListener();
      stopMeasureLayoutListener();
    };
  };
  VisualElementDragControls2.prototype.getProps = function() {
    var props = this.visualElement.getProps();
    var _a = props.drag, drag2 = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e = props.dragElastic, dragElastic = _e === void 0 ? defaultElastic : _e, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;
    return __assign(__assign({}, props), { drag: drag2, dragDirectionLock, dragPropagation, dragConstraints, dragElastic, dragMomentum });
  };
  return VisualElementDragControls2;
}();
function shouldDrag(direction3, drag2, currentDirection) {
  return (drag2 === true || drag2 === direction3) && (currentDirection === null || currentDirection === direction3);
}
function getCurrentDirection(offset2, lockThreshold) {
  if (lockThreshold === void 0) {
    lockThreshold = 10;
  }
  var direction3 = null;
  if (Math.abs(offset2.y) > lockThreshold) {
    direction3 = "y";
  } else if (Math.abs(offset2.x) > lockThreshold) {
    direction3 = "x";
  }
  return direction3;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
function useDrag(props) {
  var groupDragControls = props.dragControls, visualElement2 = props.visualElement;
  var dragControls = useConstant(function() {
    return new VisualElementDragControls(visualElement2);
  });
  (0, import_react45.useEffect)(function() {
    return groupDragControls && groupDragControls.subscribe(dragControls);
  }, [dragControls, groupDragControls]);
  (0, import_react45.useEffect)(function() {
    return dragControls.addListeners();
  }, [dragControls]);
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs
var import_react46 = __toESM(require_react(), 1);
function usePanGesture2(_a) {
  var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement2 = _a.visualElement;
  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
  var panSession = (0, import_react46.useRef)(null);
  var transformPagePoint = (0, import_react46.useContext)(MotionConfigContext).transformPagePoint;
  var handlers = {
    onSessionStart: onPanSessionStart,
    onStart: onPanStart,
    onMove: onPan,
    onEnd: function(event, info) {
      panSession.current = null;
      onPanEnd && onPanEnd(event, info);
    }
  };
  (0, import_react46.useEffect)(function() {
    if (panSession.current !== null) {
      panSession.current.updateHandlers(handlers);
    }
  });
  function onPointerDown(event) {
    panSession.current = new PanSession3(event, handlers, {
      transformPagePoint
    });
  }
  usePointerEvent2(visualElement2, "pointerdown", hasPanEvents && onPointerDown);
  useUnmountEffect2(function() {
    return panSession.current && panSession.current.end();
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: makeRenderlessComponent(usePanGesture2),
  drag: makeRenderlessComponent(useDrag)
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs
var names = [
  "LayoutMeasure",
  "BeforeLayoutMeasure",
  "LayoutUpdate",
  "ViewportBoxUpdate",
  "Update",
  "Render",
  "AnimationComplete",
  "LayoutAnimationComplete",
  "AnimationStart",
  "LayoutAnimationStart",
  "SetAxisTarget",
  "Unmount"
];
function createLifecycles() {
  var managers = names.map(function() {
    return new SubscriptionManager();
  });
  var propSubscriptions = {};
  var lifecycles = {
    clearAllListeners: function() {
      return managers.forEach(function(manager2) {
        return manager2.clear();
      });
    },
    updatePropListeners: function(props) {
      names.forEach(function(name) {
        var _a;
        var on = "on" + name;
        var propListener = props[on];
        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);
        if (propListener) {
          propSubscriptions[name] = lifecycles[on](propListener);
        }
      });
    }
  };
  managers.forEach(function(manager2, i) {
    lifecycles["on" + names[i]] = function(handler) {
      return manager2.add(handler);
    };
    lifecycles["notify" + names[i]] = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return manager2.notify.apply(manager2, __spreadArray([], __read(args), false));
    };
  });
  return lifecycles;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next2, prev2) {
  var _a;
  for (var key in next2) {
    var nextValue = next2[key];
    var prevValue = prev2[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
      if (true) {
        warnOnce(nextValue.version === "6.3.11", "Attempting to mix Framer Motion versions ".concat(nextValue.version, " with 6.3.11 may not work as expected."));
      }
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        var existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));
      }
    }
  }
  for (var key in prev2) {
    if (next2[key] === void 0)
      element.removeValue(key);
  }
  return next2;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/index.mjs
var visualElement = function(_a) {
  var _b = _a.treeType, treeType = _b === void 0 ? "" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox2 = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps;
  return function(_a2, options) {
    var parent = _a2.parent, props = _a2.props, presenceId = _a2.presenceId, blockInitialAnimation = _a2.blockInitialAnimation, visualState = _a2.visualState, shouldReduceMotion = _a2.shouldReduceMotion;
    if (options === void 0) {
      options = {};
    }
    var isMounted = false;
    var latestValues = visualState.latestValues, renderState = visualState.renderState;
    var instance;
    var lifecycles = createLifecycles();
    var values = /* @__PURE__ */ new Map();
    var valueSubscriptions = /* @__PURE__ */ new Map();
    var prevMotionValues = {};
    var baseTarget = __assign({}, latestValues);
    var removeFromVariantTree;
    function render3() {
      if (!instance || !isMounted)
        return;
      triggerBuild();
      renderInstance(instance, renderState, props.style, element.projection);
    }
    function triggerBuild() {
      build(element, renderState, latestValues, options, props);
    }
    function update() {
      lifecycles.notifyUpdate(latestValues);
    }
    function bindToMotionValue(key2, value2) {
      var removeOnChange = value2.onChange(function(latestValue) {
        latestValues[key2] = latestValue;
        props.onUpdate && es_default2.update(update, false, true);
      });
      var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
      valueSubscriptions.set(key2, function() {
        removeOnChange();
        removeOnRenderRequest();
      });
    }
    var initialMotionValues = scrapeMotionValuesFromProps3(props);
    for (var key in initialMotionValues) {
      var value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
    var isControllingVariants = checkIfControllingVariants(props);
    var isVariantNode = checkIfVariantNode(props);
    var element = __assign(__assign({
      treeType,
      current: null,
      depth: parent ? parent.depth + 1 : 0,
      parent,
      children: /* @__PURE__ */ new Set(),
      presenceId,
      shouldReduceMotion,
      variantChildren: isVariantNode ? /* @__PURE__ */ new Set() : void 0,
      isVisible: void 0,
      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),
      blockInitialAnimation,
      isMounted: function() {
        return Boolean(instance);
      },
      mount: function(newInstance) {
        isMounted = true;
        instance = element.current = newInstance;
        if (element.projection) {
          element.projection.mount(newInstance);
        }
        if (isVariantNode && parent && !isControllingVariants) {
          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
        }
        values.forEach(function(value2, key2) {
          return bindToMotionValue(key2, value2);
        });
        parent === null || parent === void 0 ? void 0 : parent.children.add(element);
        element.setProps(props);
      },
      unmount: function() {
        var _a3;
        (_a3 = element.projection) === null || _a3 === void 0 ? void 0 : _a3.unmount();
        cancelSync2.update(update);
        cancelSync2.render(render3);
        valueSubscriptions.forEach(function(remove2) {
          return remove2();
        });
        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
        lifecycles.clearAllListeners();
        instance = void 0;
        isMounted = false;
      },
      addVariantChild: function(child) {
        var _a3;
        var closestVariantNode = element.getClosestVariantNode();
        if (closestVariantNode) {
          (_a3 = closestVariantNode.variantChildren) === null || _a3 === void 0 ? void 0 : _a3.add(child);
          return function() {
            return closestVariantNode.variantChildren.delete(child);
          };
        }
      },
      sortNodePosition: function(other) {
        if (!sortNodePosition || treeType !== other.treeType)
          return 0;
        return sortNodePosition(element.getInstance(), other.getInstance());
      },
      getClosestVariantNode: function() {
        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
      },
      getLayoutId: function() {
        return props.layoutId;
      },
      getInstance: function() {
        return instance;
      },
      getStaticValue: function(key2) {
        return latestValues[key2];
      },
      setStaticValue: function(key2, value2) {
        return latestValues[key2] = value2;
      },
      getLatestValues: function() {
        return latestValues;
      },
      setVisibility: function(visibility) {
        if (element.isVisible === visibility)
          return;
        element.isVisible = visibility;
        element.scheduleRender();
      },
      makeTargetAnimatable: function(target, canMutate) {
        if (canMutate === void 0) {
          canMutate = true;
        }
        return makeTargetAnimatable(element, target, props, canMutate);
      },
      measureViewportBox: function() {
        return measureViewportBox2(instance, props);
      },
      addValue: function(key2, value2) {
        if (element.hasValue(key2))
          element.removeValue(key2);
        values.set(key2, value2);
        latestValues[key2] = value2.get();
        bindToMotionValue(key2, value2);
      },
      removeValue: function(key2) {
        var _a3;
        values.delete(key2);
        (_a3 = valueSubscriptions.get(key2)) === null || _a3 === void 0 ? void 0 : _a3();
        valueSubscriptions.delete(key2);
        delete latestValues[key2];
        removeValueFromRenderState(key2, renderState);
      },
      hasValue: function(key2) {
        return values.has(key2);
      },
      getValue: function(key2, defaultValue) {
        var value2 = values.get(key2);
        if (value2 === void 0 && defaultValue !== void 0) {
          value2 = motionValue(defaultValue);
          element.addValue(key2, value2);
        }
        return value2;
      },
      forEachValue: function(callback) {
        return values.forEach(callback);
      },
      readValue: function(key2) {
        var _a3;
        return (_a3 = latestValues[key2]) !== null && _a3 !== void 0 ? _a3 : readValueFromInstance(instance, key2, options);
      },
      setBaseTarget: function(key2, value2) {
        baseTarget[key2] = value2;
      },
      getBaseTarget: function(key2) {
        if (getBaseTarget) {
          var target = getBaseTarget(props, key2);
          if (target !== void 0 && !isMotionValue(target))
            return target;
        }
        return baseTarget[key2];
      }
    }, lifecycles), {
      build: function() {
        triggerBuild();
        return renderState;
      },
      scheduleRender: function() {
        es_default2.render(render3, false, true);
      },
      syncRender: render3,
      setProps: function(newProps) {
        if (newProps.transformTemplate || props.transformTemplate) {
          element.scheduleRender();
        }
        props = newProps;
        lifecycles.updatePropListeners(newProps);
        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps3(props), prevMotionValues);
      },
      getProps: function() {
        return props;
      },
      getVariant: function(name) {
        var _a3;
        return (_a3 = props.variants) === null || _a3 === void 0 ? void 0 : _a3[name];
      },
      getDefaultTransition: function() {
        return props.transition;
      },
      getTransformPagePoint: function() {
        return props.transformPagePoint;
      },
      getVariantContext: function(startAtParent) {
        if (startAtParent === void 0) {
          startAtParent = false;
        }
        if (startAtParent)
          return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
        if (!isControllingVariants) {
          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
          if (props.initial !== void 0) {
            context_1.initial = props.initial;
          }
          return context_1;
        }
        var context = {};
        for (var i = 0; i < numVariantProps; i++) {
          var name_1 = variantProps[i];
          var prop3 = props[name_1];
          if (isVariantLabel(prop3) || prop3 === false) {
            context[name_1] = prop3;
          }
        }
        return context;
      }
    });
    return element;
  };
};
var variantProps = __spreadArray(["initial"], __read(variantPriorityOrder), false);
var numVariantProps = variantProps.length;

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
function isCSSVariable2(value) {
  return typeof value === "string" && value.startsWith("var(--");
}
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  var match2 = cssVariableRegex.exec(current);
  if (!match2)
    return [,];
  var _a = __read(match2, 3), token2 = _a[1], fallback = _a[2];
  return [token2, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth) {
  if (depth === void 0) {
    depth = 1;
  }
  invariant2(depth <= maxDepth, 'Max CSS variable fallback depth detected in property "'.concat(current, '". This may indicate a circular fallback dependency.'));
  var _a = __read(parseCSSVariable(current), 2), token2 = _a[0], fallback = _a[1];
  if (!token2)
    return;
  var resolved = window.getComputedStyle(element).getPropertyValue(token2);
  if (resolved) {
    return resolved.trim();
  } else if (isCSSVariable2(fallback)) {
    return getVariableValue(fallback, element, depth + 1);
  } else {
    return fallback;
  }
}
function resolveCSSVariables(visualElement2, _a, transitionEnd) {
  var _b;
  var target = __rest(_a, []);
  var element = visualElement2.getInstance();
  if (!(element instanceof Element))
    return { target, transitionEnd };
  if (transitionEnd) {
    transitionEnd = __assign({}, transitionEnd);
  }
  visualElement2.forEachValue(function(value) {
    var current2 = value.get();
    if (!isCSSVariable2(current2))
      return;
    var resolved2 = getVariableValue(current2, element);
    if (resolved2)
      value.set(resolved2);
  });
  for (var key in target) {
    var current = target[key];
    if (!isCSSVariable2(current))
      continue;
    var resolved = getVariableValue(current, element);
    if (!resolved)
      continue;
    target[key] = resolved;
    if (transitionEnd)
      (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;
  }
  return { target, transitionEnd };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y"
]);
var isPositionalKey = function(key) {
  return positionalKeys.has(key);
};
var hasPositionalKey = function(target) {
  return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function(value, to) {
  value.set(to, false);
  value.set(to);
};
var isNumOrPxType = function(v) {
  return v === number || v === px5;
};
var BoundingBoxDimension;
(function(BoundingBoxDimension2) {
  BoundingBoxDimension2["width"] = "width";
  BoundingBoxDimension2["height"] = "height";
  BoundingBoxDimension2["left"] = "left";
  BoundingBoxDimension2["right"] = "right";
  BoundingBoxDimension2["top"] = "top";
  BoundingBoxDimension2["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function(matrix, pos) {
  return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function(pos2, pos3) {
  return function(_bbox, _a) {
    var transform19 = _a.transform;
    if (transform19 === "none" || !transform19)
      return 0;
    var matrix3d = transform19.match(/^matrix3d\((.+)\)$/);
    if (matrix3d) {
      return getPosFromMatrix(matrix3d[1], pos3);
    } else {
      var matrix = transform19.match(/^matrix\((.+)\)$/);
      if (matrix) {
        return getPosFromMatrix(matrix[1], pos2);
      } else {
        return 0;
      }
    }
  };
};
var transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformProps.filter(function(key) {
  return !transformKeys.has(key);
});
function removeNonTranslationalTransform(visualElement2) {
  var removedTransforms = [];
  nonTranslationalTransformKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  if (removedTransforms.length)
    visualElement2.syncRender();
  return removedTransforms;
}
var positionalValues = {
  width: function(_a, _b) {
    var x = _a.x;
    var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
    return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
  },
  height: function(_a, _b) {
    var y = _a.y;
    var _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
    return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
  },
  top: function(_bbox, _a) {
    var top2 = _a.top;
    return parseFloat(top2);
  },
  left: function(_bbox, _a) {
    var left2 = _a.left;
    return parseFloat(left2);
  },
  bottom: function(_a, _b) {
    var y = _a.y;
    var top2 = _b.top;
    return parseFloat(top2) + (y.max - y.min);
  },
  right: function(_a, _b) {
    var x = _a.x;
    var left2 = _b.left;
    return parseFloat(left2) + (x.max - x.min);
  },
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
var convertChangedValueTypes = function(target, visualElement2, changedKeys) {
  var originBbox = visualElement2.measureViewportBox();
  var element = visualElement2.getInstance();
  var elementComputedStyle = getComputedStyle(element);
  var display = elementComputedStyle.display;
  var origin = {};
  if (display === "none") {
    visualElement2.setStaticValue("display", target.display || "block");
  }
  changedKeys.forEach(function(key) {
    origin[key] = positionalValues[key](originBbox, elementComputedStyle);
  });
  visualElement2.syncRender();
  var targetBbox = visualElement2.measureViewportBox();
  changedKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    setAndResetVelocity(value, origin[key]);
    target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  });
  return target;
};
var checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {
  if (origin === void 0) {
    origin = {};
  }
  if (transitionEnd === void 0) {
    transitionEnd = {};
  }
  target = __assign({}, target);
  transitionEnd = __assign({}, transitionEnd);
  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
  var removedTransformValues = [];
  var hasAttemptedToRemoveTransformValues = false;
  var changedValueTypeKeys = [];
  targetPositionalKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (!visualElement2.hasValue(key))
      return;
    var from2 = origin[key];
    var fromType = findDimensionValueType(from2);
    var to = target[key];
    var toType;
    if (isKeyframesTarget(to)) {
      var numKeyframes = to.length;
      var fromIndex = to[0] === null ? 1 : 0;
      from2 = to[fromIndex];
      fromType = findDimensionValueType(from2);
      for (var i = fromIndex; i < numKeyframes; i++) {
        if (!toType) {
          toType = findDimensionValueType(to[i]);
          invariant2(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value");
        } else {
          invariant2(findDimensionValueType(to[i]) === toType, "All keyframes must be of the same type");
        }
      }
    } else {
      toType = findDimensionValueType(to);
    }
    if (fromType !== toType) {
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        var current = value.get();
        if (typeof current === "string") {
          value.set(parseFloat(current));
        }
        if (typeof to === "string") {
          target[key] = parseFloat(to);
        } else if (Array.isArray(to) && toType === px5) {
          target[key] = to.map(parseFloat);
        }
      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from2 === 0 || to === 0)) {
        if (from2 === 0) {
          value.set(toType.transform(from2));
        } else {
          target[key] = fromType.transform(to);
        }
      } else {
        if (!hasAttemptedToRemoveTransformValues) {
          removedTransformValues = removeNonTranslationalTransform(visualElement2);
          hasAttemptedToRemoveTransformValues = true;
        }
        changedValueTypeKeys.push(key);
        transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key];
        setAndResetVelocity(value, to);
      }
    }
  });
  if (changedValueTypeKeys.length) {
    var scrollY_1 = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null;
    var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
    if (removedTransformValues.length) {
      removedTransformValues.forEach(function(_a) {
        var _b = __read(_a, 2), key = _b[0], value = _b[1];
        visualElement2.getValue(key).set(value);
      });
    }
    visualElement2.syncRender();
    if (scrollY_1 !== null)
      window.scrollTo({ top: scrollY_1 });
    return { target: convertedTarget, transitionEnd };
  } else {
    return { target, transitionEnd };
  }
};
function unitConversion(visualElement2, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs
var parseDomVariant = function(visualElement2, target, origin, transitionEnd) {
  var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);
  target = resolved.target;
  transitionEnd = resolved.transitionEnd;
  return unitConversion(visualElement2, target, origin, transitionEnd);
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/html/visual-element.mjs
function getComputedStyle3(element) {
  return window.getComputedStyle(element);
}
var htmlConfig = {
  treeType: "dom",
  readValueFromInstance: function(domElement, key) {
    if (isTransformProp(key)) {
      var defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    } else {
      var computedStyle = getComputedStyle3(domElement);
      return (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
    }
  },
  sortNodePosition: function(a2, b2) {
    return a2.compareDocumentPosition(b2) & 2 ? 1 : -1;
  },
  getBaseTarget: function(props, key) {
    var _a;
    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];
  },
  measureViewportBox: function(element, _a) {
    var transformPagePoint = _a.transformPagePoint;
    return measureViewportBox(element, transformPagePoint);
  },
  resetTransform: function(element, domElement, props) {
    var transformTemplate3 = props.transformTemplate;
    domElement.style.transform = transformTemplate3 ? transformTemplate3({}, "") : "none";
    element.scheduleRender();
  },
  restoreTransform: function(instance, mutableState) {
    instance.style.transform = mutableState.style.transform;
  },
  removeValueFromRenderState: function(key, _a) {
    var vars = _a.vars, style = _a.style;
    delete vars[key];
    delete style[key];
  },
  makeTargetAnimatable: function(element, _a, _b, isMounted) {
    var transformValues = _b.transformValues;
    if (isMounted === void 0) {
      isMounted = true;
    }
    var transition5 = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition5 || {}, element);
    if (transformValues) {
      if (transitionEnd)
        transitionEnd = transformValues(transitionEnd);
      if (target)
        target = transformValues(target);
      if (origin)
        origin = transformValues(origin);
    }
    if (isMounted) {
      checkTargetForNewValues(element, target, origin);
      var parsed = parseDomVariant(element, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd;
      target = parsed.target;
    }
    return __assign({ transition: transition5, transitionEnd }, target);
  },
  scrapeMotionValuesFromProps,
  build: function(element, renderState, latestValues, options, props) {
    if (element.isVisible !== void 0) {
      renderState.style.visibility = element.isVisible ? "visible" : "hidden";
    }
    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
  },
  render: renderHTML
};
var htmlVisualElement = visualElement(htmlConfig);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/svg/visual-element.mjs
var svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function(props, key) {
  return props[key];
}, readValueFromInstance: function(domElement, key) {
  var _a;
  if (isTransformProp(key)) {
    return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;
  }
  key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
  return domElement.getAttribute(key);
}, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2, build: function(_element, renderState, latestValues, options, props) {
  buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
}, render: renderSVG }));

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = function(Component2, options) {
  return isSVGComponent(Component2) ? svgVisualElement(options, { enableHardwareAcceleration: false }) : htmlVisualElement(options, { enableHardwareAcceleration: true });
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_react47 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: function(latest, node3) {
    if (!node3.target)
      return latest;
    if (typeof latest === "string") {
      if (px5.test(latest)) {
        latest = parseFloat(latest);
      } else {
        return latest;
      }
    }
    var x = pixelsToPercent(latest, node3.target.x);
    var y = pixelsToPercent(latest, node3.target.y);
    return "".concat(x, "% ").concat(y, "%");
  }
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var varToken = "_$css";
var correctBoxShadow = {
  correct: function(latest, _a) {
    var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;
    var original = latest;
    var containsCSSVariables = latest.includes("var(");
    var cssVariables = [];
    if (containsCSSVariables) {
      latest = latest.replace(cssVariableRegex, function(match2) {
        cssVariables.push(match2);
        return varToken;
      });
    }
    var shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    var template = complex.createTransformer(latest);
    var offset2 = typeof shadow[0] !== "number" ? 1 : 0;
    var xScale = projectionDelta.x.scale * treeScale.x;
    var yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset2] /= xScale;
    shadow[1 + offset2] /= yScale;
    var averageScale = mix(xScale, yScale, 0.5);
    if (typeof shadow[2 + offset2] === "number")
      shadow[2 + offset2] /= averageScale;
    if (typeof shadow[3 + offset2] === "number")
      shadow[3 + offset2] /= averageScale;
    var output = template(shadow);
    if (containsCSSVariables) {
      var i_1 = 0;
      output = output.replace(varToken, function() {
        var cssVariable = cssVariables[i_1];
        i_1++;
        return cssVariable;
      });
    }
    return output;
  }
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = function(_super) {
  __extends(MeasureLayoutWithContext2, _super);
  function MeasureLayoutWithContext2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  MeasureLayoutWithContext2.prototype.componentDidMount = function() {
    var _this = this;
    var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;
    var projection = visualElement2.projection;
    addScaleCorrector(defaultScaleCorrectors);
    if (projection) {
      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
        layoutGroup.group.add(projection);
      if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {
        switchLayoutGroup.register(projection);
      }
      projection.root.didUpdate();
      projection.addEventListener("animationComplete", function() {
        _this.safeToRemove();
      });
      projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function() {
        return _this.safeToRemove();
      } }));
    }
    globalProjectionState.hasEverUpdated = true;
  };
  MeasureLayoutWithContext2.prototype.getSnapshotBeforeUpdate = function(prevProps) {
    var _this = this;
    var _a = this.props, layoutDependency = _a.layoutDependency, visualElement2 = _a.visualElement, drag2 = _a.drag, isPresent2 = _a.isPresent;
    var projection = visualElement2.projection;
    if (!projection)
      return null;
    projection.isPresent = isPresent2;
    if (drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0) {
      projection.willUpdate();
    } else {
      this.safeToRemove();
    }
    if (prevProps.isPresent !== isPresent2) {
      if (isPresent2) {
        projection.promote();
      } else if (!projection.relegate()) {
        es_default2.postRender(function() {
          var _a2;
          if (!((_a2 = projection.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length)) {
            _this.safeToRemove();
          }
        });
      }
    }
    return null;
  };
  MeasureLayoutWithContext2.prototype.componentDidUpdate = function() {
    var projection = this.props.visualElement.projection;
    if (projection) {
      projection.root.didUpdate();
      if (!projection.currentAnimation && projection.isLead()) {
        this.safeToRemove();
      }
    }
  };
  MeasureLayoutWithContext2.prototype.componentWillUnmount = function() {
    var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;
    var projection = visualElement2.projection;
    if (projection) {
      projection.scheduleCheckAfterUnmount();
      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
        layoutGroup.group.remove(projection);
      if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)
        promoteContext.deregister(projection);
    }
  };
  MeasureLayoutWithContext2.prototype.safeToRemove = function() {
    var safeToRemove = this.props.safeToRemove;
    safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();
  };
  MeasureLayoutWithContext2.prototype.render = function() {
    return null;
  };
  return MeasureLayoutWithContext2;
}(import_react47.default.Component);
function MeasureLayout(props) {
  var _a = __read(usePresence(), 2), isPresent2 = _a[0], safeToRemove = _a[1];
  var layoutGroup = (0, import_react47.useContext)(LayoutGroupContext);
  return import_react47.default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup, switchLayoutGroup: (0, import_react47.useContext)(SwitchLayoutGroupContext), isPresent: isPresent2, safeToRemove }));
}
var defaultScaleCorrectors = {
  borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "borderBottomLeftRadius",
    "borderBottomRightRadius"
  ] }),
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/motion/features/layout/index.mjs
var layoutFeatures = {
  measureLayout: MeasureLayout
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode({
  attachResizeListener: function(ref, notify) {
    return addDomEvent3(ref, "resize", notify);
  },
  measureScroll: function() {
    return {
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop
    };
  }
});

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
};
var HTMLProjectionNode = createProjectionNode({
  measureScroll: function(instance) {
    return {
      x: instance.scrollLeft,
      y: instance.scrollTop
    };
  },
  defaultParent: function() {
    if (!rootProjectionNode.current) {
      var documentNode = new DocumentProjectionNode(0, {});
      documentNode.mount(window);
      documentNode.setOptions({ layoutScroll: true });
      rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: function(instance, value) {
    instance.style.transform = value !== null && value !== void 0 ? value : "none";
  }
});

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/motion.mjs
var featureBundle = __assign(__assign(__assign(__assign({}, animations), gestureAnimations), drag), layoutFeatures);
var motion = createMotionProxy(function(Component2, config3) {
  return createDomMotionConfig(Component2, config3, featureBundle, createDomVisualElement, HTMLProjectionNode);
});

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs
var m = createMotionProxy(createDomMotionConfig);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var React22 = __toESM(require_react(), 1);
var import_react51 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react49 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react48 = __toESM(require_react(), 1);
function useIsMounted() {
  var isMounted = (0, import_react48.useRef)(false);
  useIsomorphicLayoutEffect(function() {
    isMounted.current = true;
    return function() {
      isMounted.current = false;
    };
  }, []);
  return isMounted;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-force-update.mjs
function useForceUpdate2() {
  var isMounted = useIsMounted();
  var _a = __read((0, import_react49.useState)(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];
  var forceRender = (0, import_react49.useCallback)(function() {
    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
  }, [forcedRenderCount]);
  var deferredForceRender = (0, import_react49.useCallback)(function() {
    return es_default2.postRender(forceRender);
  }, [forceRender]);
  return [deferredForceRender, forcedRenderCount];
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var React21 = __toESM(require_react(), 1);
var import_react50 = __toESM(require_react(), 1);
var PresenceChild = function(_a) {
  var children = _a.children, initial3 = _a.initial, isPresent2 = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;
  var presenceChildren = useConstant(newChildrenMap);
  var id2 = useId3();
  var context = (0, import_react50.useMemo)(function() {
    return {
      id: id2,
      initial: initial3,
      isPresent: isPresent2,
      custom,
      onExitComplete: function(childId) {
        var e_1, _a2;
        presenceChildren.set(childId, true);
        try {
          for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
            var isComplete = _c.value;
            if (!isComplete)
              return;
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (_c && !_c.done && (_a2 = _b.return))
              _a2.call(_b);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
        onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();
      },
      register: function(childId) {
        presenceChildren.set(childId, false);
        return function() {
          return presenceChildren.delete(childId);
        };
      }
    };
  }, presenceAffectsLayout ? void 0 : [isPresent2]);
  (0, import_react50.useMemo)(function() {
    presenceChildren.forEach(function(_, key) {
      return presenceChildren.set(key, false);
    });
  }, [isPresent2]);
  React21.useEffect(function() {
    !isPresent2 && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());
  }, [isPresent2]);
  return React21.createElement(PresenceContext.Provider, { value: context }, children);
};
function newChildrenMap() {
  return /* @__PURE__ */ new Map();
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var getChildKey = function(child) {
  return child.key || "";
};
function updateChildLookup(children, allChildren) {
  children.forEach(function(child) {
    var key = getChildKey(child);
    allChildren.set(key, child);
  });
}
function onlyElements(children) {
  var filtered = [];
  import_react51.Children.forEach(children, function(child) {
    if ((0, import_react51.isValidElement)(child))
      filtered.push(child);
  });
  return filtered;
}
var AnimatePresence = function(_a) {
  var children = _a.children, custom = _a.custom, _b = _a.initial, initial3 = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;
  var _d = __read(useForceUpdate2(), 1), forceRender = _d[0];
  var forceRenderLayoutGroup = (0, import_react51.useContext)(LayoutGroupContext).forceRender;
  if (forceRenderLayoutGroup)
    forceRender = forceRenderLayoutGroup;
  var isMounted = useIsMounted();
  var filteredChildren = onlyElements(children);
  var childrenToRender = filteredChildren;
  var exiting = /* @__PURE__ */ new Set();
  var presentChildren = (0, import_react51.useRef)(childrenToRender);
  var allChildren = (0, import_react51.useRef)(/* @__PURE__ */ new Map()).current;
  var isInitialRender = (0, import_react51.useRef)(true);
  useIsomorphicLayoutEffect(function() {
    isInitialRender.current = false;
    updateChildLookup(filteredChildren, allChildren);
    presentChildren.current = childrenToRender;
  });
  useUnmountEffect2(function() {
    isInitialRender.current = true;
    allChildren.clear();
    exiting.clear();
  });
  if (isInitialRender.current) {
    return React22.createElement(React22.Fragment, null, childrenToRender.map(function(child) {
      return React22.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial3 ? void 0 : false, presenceAffectsLayout }, child);
    }));
  }
  childrenToRender = __spreadArray([], __read(childrenToRender), false);
  var presentKeys = presentChildren.current.map(getChildKey);
  var targetKeys = filteredChildren.map(getChildKey);
  var numPresent = presentKeys.length;
  for (var i = 0; i < numPresent; i++) {
    var key = presentKeys[i];
    if (targetKeys.indexOf(key) === -1) {
      exiting.add(key);
    }
  }
  if (exitBeforeEnter && exiting.size) {
    childrenToRender = [];
  }
  exiting.forEach(function(key2) {
    if (targetKeys.indexOf(key2) !== -1)
      return;
    var child = allChildren.get(key2);
    if (!child)
      return;
    var insertionIndex = presentKeys.indexOf(key2);
    var onExit = function() {
      allChildren.delete(key2);
      exiting.delete(key2);
      var removeIndex = presentChildren.current.findIndex(function(presentChild) {
        return presentChild.key === key2;
      });
      presentChildren.current.splice(removeIndex, 1);
      if (!exiting.size) {
        presentChildren.current = filteredChildren;
        if (isMounted.current === false)
          return;
        forceRender();
        onExitComplete && onExitComplete();
      }
    };
    childrenToRender.splice(insertionIndex, 0, React22.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom, presenceAffectsLayout }, child));
  });
  childrenToRender = childrenToRender.map(function(child) {
    var key2 = child.key;
    return exiting.has(key2) ? child : React22.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout }, child);
  });
  if (env !== "production" && exitBeforeEnter && childrenToRender.length > 1) {
    console.warn("You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.");
  }
  return React22.createElement(React22.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function(child) {
    return (0, import_react51.cloneElement)(child);
  }));
};

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs
var React24 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var React23 = __toESM(require_react(), 1);
var import_react53 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs
var import_react52 = __toESM(require_react(), 1);
var DeprecatedLayoutGroupContext = (0, import_react52.createContext)(null);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs
var React25 = __toESM(require_react(), 1);
var import_react54 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs
var React26 = __toESM(require_react(), 1);
var import_react55 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
var React27 = __toESM(require_react(), 1);
var import_react57 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/context/ReorderContext.mjs
var import_react56 = __toESM(require_react(), 1);
var ReorderContext = (0, import_react56.createContext)(null);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs
function checkReorder(order3, value, offset2, velocity) {
  if (!velocity)
    return order3;
  var index2 = order3.findIndex(function(item2) {
    return item2.value === value;
  });
  if (index2 === -1)
    return order3;
  var nextOffset = velocity > 0 ? 1 : -1;
  var nextItem = order3[index2 + nextOffset];
  if (!nextItem)
    return order3;
  var item = order3[index2];
  var nextLayout = nextItem.layout;
  var nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);
  if (nextOffset === 1 && item.layout.max + offset2 > nextItemCenter || nextOffset === -1 && item.layout.min + offset2 < nextItemCenter) {
    return moveItem(order3, index2, index2 + nextOffset);
  }
  return order3;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
function ReorderGroup(_a, externalRef) {
  var children = _a.children, _b = _a.as, as = _b === void 0 ? "ul" : _b, _c = _a.axis, axis = _c === void 0 ? "y" : _c, onReorder = _a.onReorder, values = _a.values, props = __rest(_a, ["children", "as", "axis", "onReorder", "values"]);
  var Component2 = useConstant(function() {
    return motion(as);
  });
  var order3 = [];
  var isReordering = (0, import_react57.useRef)(false);
  invariant2(Boolean(values), "Reorder.Group must be provided a values prop");
  var context = {
    axis,
    registerItem: function(value, layout3) {
      if (layout3 && order3.findIndex(function(entry) {
        return value === entry.value;
      }) === -1) {
        order3.push({ value, layout: layout3[axis] });
        order3.sort(compareMin);
      }
    },
    updateOrder: function(id2, offset2, velocity) {
      if (isReordering.current)
        return;
      var newOrder = checkReorder(order3, id2, offset2, velocity);
      if (order3 !== newOrder) {
        isReordering.current = true;
        onReorder(newOrder.map(getValue).filter(function(value) {
          return values.indexOf(value) !== -1;
        }));
      }
    }
  };
  (0, import_react57.useEffect)(function() {
    isReordering.current = false;
  });
  return React27.createElement(Component2, __assign({}, props, { ref: externalRef }), React27.createElement(ReorderContext.Provider, { value: context }, children));
}
var Group = (0, import_react57.forwardRef)(ReorderGroup);
function getValue(item) {
  return item.value;
}
function compareMin(a2, b2) {
  return a2.layout.min - b2.layout.min;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
var React28 = __toESM(require_react(), 1);
var import_react60 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/use-motion-value.mjs
var import_react58 = __toESM(require_react(), 1);
function useMotionValue(initial3) {
  var value = useConstant(function() {
    return motionValue(initial3);
  });
  var isStatic = (0, import_react58.useContext)(MotionConfigContext).isStatic;
  if (isStatic) {
    var _a = __read((0, import_react58.useState)(initial3), 2), setLatest_1 = _a[1];
    (0, import_react58.useEffect)(function() {
      return value.onChange(setLatest_1);
    }, []);
  }
  return value;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/transform.mjs
var isCustomValueType = function(v) {
  return typeof v === "object" && v.mix;
};
var getMixer2 = function(v) {
  return isCustomValueType(v) ? v.mix : void 0;
};
function transform18() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var useImmediate = !Array.isArray(args[0]);
  var argOffset = useImmediate ? 0 : -1;
  var inputValue = args[0 + argOffset];
  var inputRange = args[1 + argOffset];
  var outputRange = args[2 + argOffset];
  var options = args[3 + argOffset];
  var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer2(outputRange[0]) }, options));
  return useImmediate ? interpolator(inputValue) : interpolator;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/use-on-change.mjs
var import_react59 = __toESM(require_react(), 1);
function useMultiOnChange(values, handler) {
  (0, import_react59.useEffect)(function() {
    var subscriptions = values.map(function(value) {
      return value.onChange(handler);
    });
    return function() {
      return subscriptions.forEach(function(unsubscribe) {
        return unsubscribe();
      });
    };
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/use-combine-values.mjs
function useCombineMotionValues(values, combineValues) {
  var value = useMotionValue(combineValues());
  var updateValue = function() {
    return value.set(combineValues());
  };
  updateValue();
  useMultiOnChange(values, function() {
    return es_default2.update(updateValue, false, true);
  });
  return value;
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/use-transform.mjs
function useTransform(input, inputRangeOrTransformer, outputRange, options) {
  var transformer = typeof inputRangeOrTransformer === "function" ? inputRangeOrTransformer : transform18(inputRangeOrTransformer, outputRange, options);
  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function(_a) {
    var _b = __read(_a, 1), latest = _b[0];
    return transformer(latest);
  });
}
function useListTransform(values, transformer) {
  var latest = useConstant(function() {
    return [];
  });
  return useCombineMotionValues(values, function() {
    latest.length = 0;
    var numValues = values.length;
    for (var i = 0; i < numValues; i++) {
      latest[i] = values[i].get();
    }
    return transformer(latest);
  });
}

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
function useDefaultMotionValue(value, defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = 0;
  }
  return isMotionValue(value) ? value : useMotionValue(defaultValue);
}
function ReorderItem(_a, externalRef) {
  var children = _a.children, style = _a.style, value = _a.value, _b = _a.as, as = _b === void 0 ? "li" : _b, onDrag = _a.onDrag, _c = _a.layout, layout3 = _c === void 0 ? true : _c, props = __rest(_a, ["children", "style", "value", "as", "onDrag", "layout"]);
  var Component2 = useConstant(function() {
    return motion(as);
  });
  var context = (0, import_react60.useContext)(ReorderContext);
  var point = {
    x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),
    y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y)
  };
  var zIndex = useTransform([point.x, point.y], function(_a2) {
    var _b2 = __read(_a2, 2), latestX = _b2[0], latestY = _b2[1];
    return latestX || latestY ? 1 : "unset";
  });
  var measuredLayout = (0, import_react60.useRef)(null);
  invariant2(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
  var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;
  (0, import_react60.useEffect)(function() {
    registerItem(value, measuredLayout.current);
  }, [context]);
  return React28.createElement(Component2, __assign({ drag: axis }, props, { dragSnapToOrigin: true, style: __assign(__assign({}, style), { x: point.x, y: point.y, zIndex }), layout: layout3, onDrag: function(event, gesturePoint) {
    var velocity = gesturePoint.velocity;
    velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);
    onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);
  }, onLayoutMeasure: function(measured) {
    measuredLayout.current = measured;
  }, ref: externalRef }), children);
}
var Item = (0, import_react60.forwardRef)(ReorderItem);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/features-animation.mjs
var domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/render/dom/features-max.mjs
var domMax = __assign(__assign(__assign(__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/use-spring.mjs
var import_react61 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/value/use-velocity.mjs
var import_react62 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs
var import_react63 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/use-animation.mjs
var import_react64 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-cycle.mjs
var import_react65 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs
var DragControls = function() {
  function DragControls2() {
    this.componentControls = /* @__PURE__ */ new Set();
  }
  DragControls2.prototype.subscribe = function(controls) {
    var _this = this;
    this.componentControls.add(controls);
    return function() {
      return _this.componentControls.delete(controls);
    };
  };
  DragControls2.prototype.start = function(event, options) {
    this.componentControls.forEach(function(controls) {
      controls.start(event.nativeEvent || event, options);
    });
  };
  return DragControls2;
}();

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs
var import_react66 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs
var React29 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.3.11_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/framer-motion/dist/es/animation/use-animated-state.mjs
var import_react67 = __toESM(require_react(), 1);
var createObject = function() {
  return {};
};
var stateVisualElement = visualElement({
  build: function() {
  },
  measureViewportBox: createBox3,
  resetTransform: function() {
  },
  restoreTransform: function() {
  },
  removeValueFromRenderState: function() {
  },
  render: function() {
  },
  scrapeMotionValuesFromProps: createObject,
  readValueFromInstance: function(_state, key, options) {
    return options.initialState[key] || 0;
  },
  makeTargetAnimatable: function(element, _a) {
    var transition5 = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition5 || {}, element);
    checkTargetForNewValues(element, target, origin);
    return __assign({ transition: transition5, transitionEnd }, target);
  }
});
var useVisualState = makeUseVisualState({
  scrapeMotionValuesFromProps: createObject,
  createRenderState: createObject
});

// node_modules/.pnpm/@chakra-ui+transition@1.4.8_bo2mncqbqi4keti2tn2da66p7q/node_modules/@chakra-ui/transition/dist/chakra-ui-transition.esm.js
var React30 = __toESM(require_react());
function _objectWithoutPropertiesLoose9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends15() {
  _extends15 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends15.apply(this, arguments);
}
var TransitionEasings = {
  ease: [0.25, 0.1, 0.25, 1],
  easeIn: [0.4, 0, 1, 1],
  easeOut: [0, 0, 0.2, 1],
  easeInOut: [0.4, 0, 0.2, 1]
};
var TransitionVariants = {
  scale: {
    enter: {
      scale: 1
    },
    exit: {
      scale: 0.95
    }
  },
  fade: {
    enter: {
      opacity: 1
    },
    exit: {
      opacity: 0
    }
  },
  pushLeft: {
    enter: {
      x: "100%"
    },
    exit: {
      x: "-30%"
    }
  },
  pushRight: {
    enter: {
      x: "-100%"
    },
    exit: {
      x: "30%"
    }
  },
  pushUp: {
    enter: {
      y: "100%"
    },
    exit: {
      y: "-30%"
    }
  },
  pushDown: {
    enter: {
      y: "-100%"
    },
    exit: {
      y: "30%"
    }
  },
  slideLeft: {
    position: {
      left: 0,
      top: 0,
      bottom: 0,
      width: "100%"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: "-100%",
      y: 0
    }
  },
  slideRight: {
    position: {
      right: 0,
      top: 0,
      bottom: 0,
      width: "100%"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: "100%",
      y: 0
    }
  },
  slideUp: {
    position: {
      top: 0,
      left: 0,
      right: 0,
      maxWidth: "100vw"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: 0,
      y: "-100%"
    }
  },
  slideDown: {
    position: {
      bottom: 0,
      left: 0,
      right: 0,
      maxWidth: "100vw"
    },
    enter: {
      x: 0,
      y: 0
    },
    exit: {
      x: 0,
      y: "100%"
    }
  }
};
function slideTransition(options) {
  var _options$direction;
  var side = (_options$direction = options == null ? void 0 : options.direction) != null ? _options$direction : "right";
  switch (side) {
    case "right":
      return TransitionVariants.slideRight;
    case "left":
      return TransitionVariants.slideLeft;
    case "bottom":
      return TransitionVariants.slideDown;
    case "top":
      return TransitionVariants.slideUp;
    default:
      return TransitionVariants.slideRight;
  }
}
var TransitionDefaults = {
  enter: {
    duration: 0.2,
    ease: TransitionEasings.easeOut
  },
  exit: {
    duration: 0.1,
    ease: TransitionEasings.easeIn
  }
};
var withDelay = {
  enter: function enter(transition5, delay) {
    return _extends15({}, transition5, {
      delay: isNumber(delay) ? delay : delay == null ? void 0 : delay["enter"]
    });
  },
  exit: function exit(transition5, delay) {
    return _extends15({}, transition5, {
      delay: isNumber(delay) ? delay : delay == null ? void 0 : delay["exit"]
    });
  }
};
var _excluded$4 = ["in", "unmountOnExit", "animateOpacity", "startingHeight", "endingHeight", "style", "className", "transition", "transitionEnd"];
var isNumeric = function isNumeric2(value) {
  return value != null && parseInt(value.toString(), 10) > 0;
};
var defaultTransitions2 = {
  exit: {
    height: {
      duration: 0.2,
      ease: TransitionEasings.ease
    },
    opacity: {
      duration: 0.3,
      ease: TransitionEasings.ease
    }
  },
  enter: {
    height: {
      duration: 0.3,
      ease: TransitionEasings.ease
    },
    opacity: {
      duration: 0.4,
      ease: TransitionEasings.ease
    }
  }
};
var variants$42 = {
  exit: function exit2(_ref2) {
    var _transition$exit;
    var animateOpacity = _ref2.animateOpacity, startingHeight = _ref2.startingHeight, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return _extends15({}, animateOpacity && {
      opacity: isNumeric(startingHeight) ? 1 : 0
    }, {
      height: startingHeight,
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
      transition: (_transition$exit = transition5 == null ? void 0 : transition5.exit) != null ? _transition$exit : withDelay.exit(defaultTransitions2.exit, delay)
    });
  },
  enter: function enter2(_ref2) {
    var _transition$enter;
    var animateOpacity = _ref2.animateOpacity, endingHeight = _ref2.endingHeight, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return _extends15({}, animateOpacity && {
      opacity: 1
    }, {
      height: endingHeight,
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
      transition: (_transition$enter = transition5 == null ? void 0 : transition5.enter) != null ? _transition$enter : withDelay.enter(defaultTransitions2.enter, delay)
    });
  }
};
var Collapse = React30.forwardRef(function(props, ref) {
  var isOpen = props["in"], unmountOnExit = props.unmountOnExit, _props$animateOpacity = props.animateOpacity, animateOpacity = _props$animateOpacity === void 0 ? true : _props$animateOpacity, _props$startingHeight = props.startingHeight, startingHeight = _props$startingHeight === void 0 ? 0 : _props$startingHeight, _props$endingHeight = props.endingHeight, endingHeight = _props$endingHeight === void 0 ? "auto" : _props$endingHeight, style = props.style, className = props.className, transition5 = props.transition, transitionEnd = props.transitionEnd, rest = _objectWithoutPropertiesLoose9(props, _excluded$4);
  var _React$useState = React30.useState(false), mounted = _React$useState[0], setMounted = _React$useState[1];
  React30.useEffect(function() {
    var timeout = setTimeout(function() {
      setMounted(true);
    });
    return function() {
      return clearTimeout(timeout);
    };
  }, []);
  warn({
    condition: Boolean(startingHeight > 0 && unmountOnExit),
    message: "startingHeight and unmountOnExit are mutually exclusive. You can't use them together"
  });
  var hasStartingHeight = parseFloat(startingHeight.toString()) > 0;
  var custom = {
    startingHeight,
    endingHeight,
    animateOpacity,
    transition: !mounted ? {
      enter: {
        duration: 0
      }
    } : transition5,
    transitionEnd: (0, import_lodash.default)(transitionEnd, {
      exit: unmountOnExit ? void 0 : {
        display: hasStartingHeight ? "block" : "none"
      }
    })
  };
  var show = unmountOnExit ? isOpen : true;
  var animate3 = isOpen || unmountOnExit ? "enter" : "exit";
  return React30.createElement(AnimatePresence, {
    initial: false,
    custom
  }, show && React30.createElement(motion.div, _extends15({
    ref
  }, rest, {
    className: cx("chakra-collapse", className),
    style: _extends15({
      overflow: "hidden",
      display: "block"
    }, style),
    custom,
    variants: variants$42,
    initial: unmountOnExit ? "exit" : false,
    animate: animate3,
    exit: "exit"
  })));
});
if (__DEV__) {
  Collapse.displayName = "Collapse";
}
var _excluded$3 = ["unmountOnExit", "in", "className", "transition", "transitionEnd", "delay"];
var variants$32 = {
  enter: function enter3(_temp) {
    var _transition$enter;
    var _ref2 = _temp === void 0 ? {} : _temp, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return {
      opacity: 1,
      transition: (_transition$enter = transition5 == null ? void 0 : transition5.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    };
  },
  exit: function exit3(_temp2) {
    var _transition$exit;
    var _ref2 = _temp2 === void 0 ? {} : _temp2, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return {
      opacity: 0,
      transition: (_transition$exit = transition5 == null ? void 0 : transition5.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    };
  }
};
var fadeConfig = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants$32
};
var Fade = React30.forwardRef(function(props, ref) {
  var unmountOnExit = props.unmountOnExit, isOpen = props["in"], className = props.className, transition5 = props.transition, transitionEnd = props.transitionEnd, delay = props.delay, rest = _objectWithoutPropertiesLoose9(props, _excluded$3);
  var animate3 = isOpen || unmountOnExit ? "enter" : "exit";
  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var custom = {
    transition: transition5,
    transitionEnd,
    delay
  };
  return React30.createElement(AnimatePresence, {
    custom
  }, show && React30.createElement(motion.div, _extends15({
    ref,
    className: cx("chakra-fade", className),
    custom
  }, fadeConfig, {
    animate: animate3
  }, rest)));
});
if (__DEV__) {
  Fade.displayName = "Fade";
}
var _excluded$2 = ["unmountOnExit", "in", "reverse", "initialScale", "className", "transition", "transitionEnd", "delay"];
var variants$22 = {
  exit: function exit4(_ref2) {
    var _transition$exit;
    var reverse = _ref2.reverse, initialScale = _ref2.initialScale, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return _extends15({
      opacity: 0
    }, reverse ? {
      scale: initialScale,
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    } : {
      transitionEnd: _extends15({
        scale: initialScale
      }, transitionEnd == null ? void 0 : transitionEnd.exit)
    }, {
      transition: (_transition$exit = transition5 == null ? void 0 : transition5.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay)
    });
  },
  enter: function enter4(_ref2) {
    var _transition$enter;
    var transitionEnd = _ref2.transitionEnd, transition5 = _ref2.transition, delay = _ref2.delay;
    return {
      opacity: 1,
      scale: 1,
      transition: (_transition$enter = transition5 == null ? void 0 : transition5.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    };
  }
};
var scaleFadeConfig = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants$22
};
var ScaleFade = React30.forwardRef(function(props, ref) {
  var unmountOnExit = props.unmountOnExit, isOpen = props["in"], _props$reverse = props.reverse, reverse = _props$reverse === void 0 ? true : _props$reverse, _props$initialScale = props.initialScale, initialScale = _props$initialScale === void 0 ? 0.95 : _props$initialScale, className = props.className, transition5 = props.transition, transitionEnd = props.transitionEnd, delay = props.delay, rest = _objectWithoutPropertiesLoose9(props, _excluded$2);
  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var animate3 = isOpen || unmountOnExit ? "enter" : "exit";
  var custom = {
    initialScale,
    reverse,
    transition: transition5,
    transitionEnd,
    delay
  };
  return React30.createElement(AnimatePresence, {
    custom
  }, show && React30.createElement(motion.div, _extends15({
    ref,
    className: cx("chakra-offset-slide", className)
  }, scaleFadeConfig, {
    animate: animate3,
    custom
  }, rest)));
});
if (__DEV__) {
  ScaleFade.displayName = "ScaleFade";
}
var _excluded$13 = ["direction", "style", "unmountOnExit", "in", "className", "transition", "transitionEnd", "delay"];
var defaultTransition = {
  exit: {
    duration: 0.15,
    ease: TransitionEasings.easeInOut
  },
  enter: {
    type: "spring",
    damping: 25,
    stiffness: 180
  }
};
var variants$12 = {
  exit: function exit5(_ref2) {
    var _transition$exit;
    var direction3 = _ref2.direction, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    var _slideTransition = slideTransition({
      direction: direction3
    }), exitStyles = _slideTransition.exit;
    return _extends15({}, exitStyles, {
      transition: (_transition$exit = transition5 == null ? void 0 : transition5.exit) != null ? _transition$exit : withDelay.exit(defaultTransition.exit, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    });
  },
  enter: function enter5(_ref2) {
    var _transition$enter;
    var direction3 = _ref2.direction, transitionEnd = _ref2.transitionEnd, transition5 = _ref2.transition, delay = _ref2.delay;
    var _slideTransition2 = slideTransition({
      direction: direction3
    }), enterStyles = _slideTransition2.enter;
    return _extends15({}, enterStyles, {
      transition: (_transition$enter = transition5 == null ? void 0 : transition5.enter) != null ? _transition$enter : withDelay.enter(defaultTransition.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    });
  }
};
var Slide = React30.forwardRef(function(props, ref) {
  var _props$direction = props.direction, direction3 = _props$direction === void 0 ? "right" : _props$direction, style = props.style, unmountOnExit = props.unmountOnExit, isOpen = props["in"], className = props.className, transition5 = props.transition, transitionEnd = props.transitionEnd, delay = props.delay, rest = _objectWithoutPropertiesLoose9(props, _excluded$13);
  var transitionStyles = slideTransition({
    direction: direction3
  });
  var computedStyle = Object.assign({
    position: "fixed"
  }, transitionStyles.position, style);
  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var animate3 = isOpen || unmountOnExit ? "enter" : "exit";
  var custom = {
    transitionEnd,
    transition: transition5,
    direction: direction3,
    delay
  };
  return React30.createElement(AnimatePresence, {
    custom
  }, show && React30.createElement(motion.div, _extends15({}, rest, {
    ref,
    initial: "exit",
    className: cx("chakra-slide", className),
    animate: animate3,
    exit: "exit",
    custom,
    variants: variants$12,
    style: computedStyle
  })));
});
if (__DEV__) {
  Slide.displayName = "Slide";
}
var _excluded8 = ["unmountOnExit", "in", "reverse", "className", "offsetX", "offsetY", "transition", "transitionEnd", "delay"];
var variants2 = {
  initial: function initial(_ref2) {
    var _transition$exit;
    var offsetX = _ref2.offsetX, offsetY = _ref2.offsetY, transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return {
      opacity: 0,
      x: offsetX,
      y: offsetY,
      transition: (_transition$exit = transition5 == null ? void 0 : transition5.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    };
  },
  enter: function enter6(_ref2) {
    var _transition$enter;
    var transition5 = _ref2.transition, transitionEnd = _ref2.transitionEnd, delay = _ref2.delay;
    return {
      opacity: 1,
      x: 0,
      y: 0,
      transition: (_transition$enter = transition5 == null ? void 0 : transition5.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter
    };
  },
  exit: function exit6(_ref3) {
    var _transition$exit2;
    var offsetY = _ref3.offsetY, offsetX = _ref3.offsetX, transition5 = _ref3.transition, transitionEnd = _ref3.transitionEnd, reverse = _ref3.reverse, delay = _ref3.delay;
    var offset2 = {
      x: offsetX,
      y: offsetY
    };
    return _extends15({
      opacity: 0,
      transition: (_transition$exit2 = transition5 == null ? void 0 : transition5.exit) != null ? _transition$exit2 : withDelay.exit(TransitionDefaults.exit, delay)
    }, reverse ? _extends15({}, offset2, {
      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit
    }) : {
      transitionEnd: _extends15({}, offset2, transitionEnd == null ? void 0 : transitionEnd.exit)
    });
  }
};
var slideFadeConfig = {
  initial: "initial",
  animate: "enter",
  exit: "exit",
  variants: variants2
};
var SlideFade = React30.forwardRef(function(props, ref) {
  var unmountOnExit = props.unmountOnExit, isOpen = props["in"], _props$reverse = props.reverse, reverse = _props$reverse === void 0 ? true : _props$reverse, className = props.className, _props$offsetX = props.offsetX, offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX, _props$offsetY = props.offsetY, offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY, transition5 = props.transition, transitionEnd = props.transitionEnd, delay = props.delay, rest = _objectWithoutPropertiesLoose9(props, _excluded8);
  var show = unmountOnExit ? isOpen && unmountOnExit : true;
  var animate3 = isOpen || unmountOnExit ? "enter" : "exit";
  var custom = {
    offsetX,
    offsetY,
    reverse,
    transition: transition5,
    transitionEnd,
    delay
  };
  return React30.createElement(AnimatePresence, {
    custom
  }, show && React30.createElement(motion.div, _extends15({
    ref,
    className: cx("chakra-offset-slide", className),
    custom
  }, slideFadeConfig, {
    animate: animate3
  }, rest)));
});
if (__DEV__) {
  SlideFade.displayName = "SlideFade";
}

// node_modules/.pnpm/@chakra-ui+accordion@1.4.11_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/accordion/dist/chakra-ui-accordion.esm.js
var React31 = __toESM(require_react());
var import_react69 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+descendant@2.1.3_react@16.14.0/node_modules/@chakra-ui/descendant/dist/chakra-ui-descendant.esm.js
var import_react68 = __toESM(require_react());
function _extends16() {
  _extends16 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends16.apply(this, arguments);
}
function sortNodes(nodes) {
  return nodes.sort(function(a2, b2) {
    var compare = a2.compareDocumentPosition(b2);
    if (compare & Node.DOCUMENT_POSITION_FOLLOWING || compare & Node.DOCUMENT_POSITION_CONTAINED_BY) {
      return -1;
    }
    if (compare & Node.DOCUMENT_POSITION_PRECEDING || compare & Node.DOCUMENT_POSITION_CONTAINS) {
      return 1;
    }
    if (compare & Node.DOCUMENT_POSITION_DISCONNECTED || compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC) {
      throw Error("Cannot sort the given nodes.");
    } else {
      return 0;
    }
  });
}
var isElement2 = function isElement3(el) {
  return typeof el == "object" && "nodeType" in el && el.nodeType === Node.ELEMENT_NODE;
};
function getNextIndex2(current, max2, loop) {
  var next2 = current + 1;
  if (loop && next2 >= max2)
    next2 = 0;
  return next2;
}
function getPrevIndex(current, max2, loop) {
  var next2 = current - 1;
  if (loop && next2 < 0)
    next2 = max2;
  return next2;
}
var useSafeLayoutEffect3 = typeof window !== "undefined" ? import_react68.useLayoutEffect : import_react68.useEffect;
var cast = function cast2(value) {
  return value;
};
var DescendantsManager = function DescendantsManager2() {
  var _this = this;
  this.descendants = /* @__PURE__ */ new Map();
  this.register = function(nodeOrOptions) {
    if (nodeOrOptions == null)
      return;
    if (isElement2(nodeOrOptions)) {
      return _this.registerNode(nodeOrOptions);
    }
    return function(node3) {
      _this.registerNode(node3, nodeOrOptions);
    };
  };
  this.unregister = function(node3) {
    _this.descendants["delete"](node3);
    var sorted = sortNodes(Array.from(_this.descendants.keys()));
    _this.assignIndex(sorted);
  };
  this.destroy = function() {
    _this.descendants.clear();
  };
  this.assignIndex = function(descendants) {
    _this.descendants.forEach(function(descendant) {
      var index2 = descendants.indexOf(descendant.node);
      descendant.index = index2;
      descendant.node.dataset["index"] = descendant.index.toString();
    });
  };
  this.count = function() {
    return _this.descendants.size;
  };
  this.enabledCount = function() {
    return _this.enabledValues().length;
  };
  this.values = function() {
    var values = Array.from(_this.descendants.values());
    return values.sort(function(a2, b2) {
      return a2.index - b2.index;
    });
  };
  this.enabledValues = function() {
    return _this.values().filter(function(descendant) {
      return !descendant.disabled;
    });
  };
  this.item = function(index2) {
    if (_this.count() === 0)
      return void 0;
    return _this.values()[index2];
  };
  this.enabledItem = function(index2) {
    if (_this.enabledCount() === 0)
      return void 0;
    return _this.enabledValues()[index2];
  };
  this.first = function() {
    return _this.item(0);
  };
  this.firstEnabled = function() {
    return _this.enabledItem(0);
  };
  this.last = function() {
    return _this.item(_this.descendants.size - 1);
  };
  this.lastEnabled = function() {
    var lastIndex = _this.enabledValues().length - 1;
    return _this.enabledItem(lastIndex);
  };
  this.indexOf = function(node3) {
    var _this$descendants$get, _this$descendants$get2;
    if (!node3)
      return -1;
    return (_this$descendants$get = (_this$descendants$get2 = _this.descendants.get(node3)) == null ? void 0 : _this$descendants$get2.index) != null ? _this$descendants$get : -1;
  };
  this.enabledIndexOf = function(node3) {
    if (node3 == null)
      return -1;
    return _this.enabledValues().findIndex(function(i) {
      return i.node.isSameNode(node3);
    });
  };
  this.next = function(index2, loop) {
    if (loop === void 0) {
      loop = true;
    }
    var next2 = getNextIndex2(index2, _this.count(), loop);
    return _this.item(next2);
  };
  this.nextEnabled = function(index2, loop) {
    if (loop === void 0) {
      loop = true;
    }
    var item = _this.item(index2);
    if (!item)
      return;
    var enabledIndex = _this.enabledIndexOf(item.node);
    var nextEnabledIndex = getNextIndex2(enabledIndex, _this.enabledCount(), loop);
    return _this.enabledItem(nextEnabledIndex);
  };
  this.prev = function(index2, loop) {
    if (loop === void 0) {
      loop = true;
    }
    var prev2 = getPrevIndex(index2, _this.count() - 1, loop);
    return _this.item(prev2);
  };
  this.prevEnabled = function(index2, loop) {
    if (loop === void 0) {
      loop = true;
    }
    var item = _this.item(index2);
    if (!item)
      return;
    var enabledIndex = _this.enabledIndexOf(item.node);
    var prevEnabledIndex = getPrevIndex(enabledIndex, _this.enabledCount() - 1, loop);
    return _this.enabledItem(prevEnabledIndex);
  };
  this.registerNode = function(node3, options) {
    if (!node3 || _this.descendants.has(node3))
      return;
    var keys4 = Array.from(_this.descendants.keys()).concat(node3);
    var sorted = sortNodes(keys4);
    if (options != null && options.disabled) {
      options.disabled = !!options.disabled;
    }
    var descendant = _extends16({
      node: node3,
      index: -1
    }, options);
    _this.descendants.set(node3, descendant);
    _this.assignIndex(sorted);
  };
};
function useDescendants() {
  var descendants = (0, import_react68.useRef)(new DescendantsManager());
  useSafeLayoutEffect3(function() {
    return function() {
      return descendants.current.destroy();
    };
  });
  return descendants.current;
}
var _createContext4 = createContext3({
  name: "DescendantsProvider",
  errorMessage: "useDescendantsContext must be used within DescendantsProvider"
});
var DescendantsContextProvider = _createContext4[0];
var useDescendantsContext = _createContext4[1];
function useDescendant(options) {
  var descendants = useDescendantsContext();
  var _useState = (0, import_react68.useState)(-1), index2 = _useState[0], setIndex = _useState[1];
  var ref = (0, import_react68.useRef)(null);
  useSafeLayoutEffect3(function() {
    return function() {
      if (!ref.current)
        return;
      descendants.unregister(ref.current);
    };
  }, []);
  useSafeLayoutEffect3(function() {
    if (!ref.current)
      return;
    var dataIndex = Number(ref.current.dataset["index"]);
    if (index2 != dataIndex && !Number.isNaN(dataIndex)) {
      setIndex(dataIndex);
    }
  });
  var refCallback = options ? cast(descendants.register(options)) : cast(descendants.register);
  return {
    descendants,
    index: index2,
    enabledIndex: descendants.enabledIndexOf(ref.current),
    register: mergeRefs(refCallback, ref)
  };
}
function createDescendantContext() {
  var ContextProvider = cast(DescendantsContextProvider);
  var _useDescendantsContext = function _useDescendantsContext2() {
    return cast(useDescendantsContext());
  };
  var _useDescendant = function _useDescendant2(options) {
    return useDescendant(options);
  };
  var _useDescendants = function _useDescendants2() {
    return useDescendants();
  };
  return [
    ContextProvider,
    _useDescendantsContext,
    _useDescendants,
    _useDescendant
  ];
}

// node_modules/.pnpm/@chakra-ui+accordion@1.4.11_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/accordion/dist/chakra-ui-accordion.esm.js
function _extends17() {
  _extends17 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends17.apply(this, arguments);
}
function _objectWithoutPropertiesLoose10(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$14 = ["onChange", "defaultIndex", "index", "allowMultiple", "allowToggle"];
var _excluded2$1 = ["isDisabled", "isFocusable", "id"];
var _createDescendantCont = createDescendantContext();
var AccordionDescendantsProvider = _createDescendantCont[0];
var useAccordionDescendantsContext = _createDescendantCont[1];
var useAccordionDescendants = _createDescendantCont[2];
var useAccordionDescendant = _createDescendantCont[3];
function useAccordion(props) {
  var onChange = props.onChange, defaultIndex = props.defaultIndex, indexProp = props.index, allowMultiple = props.allowMultiple, allowToggle = props.allowToggle, htmlProps = _objectWithoutPropertiesLoose10(props, _excluded$14);
  allowMultipleWarning(props);
  allowMultipleAndAllowToggleWarning(props);
  var descendants = useAccordionDescendants();
  var _useState = (0, import_react69.useState)(-1), focusedIndex = _useState[0], setFocusedIndex = _useState[1];
  useUnmountEffect(function() {
    setFocusedIndex(-1);
  });
  var _useControllableState = useControllableState({
    value: indexProp,
    defaultValue: function defaultValue() {
      if (allowMultiple)
        return defaultIndex != null ? defaultIndex : [];
      return defaultIndex != null ? defaultIndex : -1;
    },
    onChange
  }), index2 = _useControllableState[0], setIndex = _useControllableState[1];
  var getAccordionItemProps = function getAccordionItemProps2(idx) {
    var isOpen = false;
    if (idx !== null) {
      isOpen = isArray(index2) ? index2.includes(idx) : index2 === idx;
    }
    var onChange2 = function onChange3(isOpen2) {
      if (idx === null)
        return;
      if (allowMultiple && isArray(index2)) {
        var nextState = isOpen2 ? addItem(index2, idx) : removeItem(index2, idx);
        setIndex(nextState);
      } else if (isOpen2) {
        setIndex(idx);
      } else if (allowToggle) {
        setIndex(-1);
      }
    };
    return {
      isOpen,
      onChange: onChange2
    };
  };
  return {
    index: index2,
    setIndex,
    htmlProps,
    getAccordionItemProps,
    focusedIndex,
    setFocusedIndex,
    descendants
  };
}
var _createContext$12 = createContext3({
  name: "AccordionContext",
  errorMessage: "useAccordionContext: `context` is undefined. Seems you forgot to wrap the accordion components in `<Accordion />`"
});
var AccordionProvider = _createContext$12[0];
var useAccordionContext = _createContext$12[1];
function useAccordionItem(props) {
  var isDisabled2 = props.isDisabled, isFocusable2 = props.isFocusable, id2 = props.id, htmlProps = _objectWithoutPropertiesLoose10(props, _excluded2$1);
  var _useAccordionContext = useAccordionContext(), getAccordionItemProps = _useAccordionContext.getAccordionItemProps, setFocusedIndex = _useAccordionContext.setFocusedIndex;
  var buttonRef = (0, import_react69.useRef)(null);
  var _useIds = useIds(id2, "accordion-button", "accordion-panel"), buttonId = _useIds[0], panelId = _useIds[1];
  focusableNotDisabledWarning(props);
  var _useAccordionDescenda = useAccordionDescendant({
    disabled: isDisabled2 && !isFocusable2
  }), register = _useAccordionDescenda.register, index2 = _useAccordionDescenda.index, descendants = _useAccordionDescenda.descendants;
  var _getAccordionItemProp = getAccordionItemProps(index2 === -1 ? null : index2), isOpen = _getAccordionItemProp.isOpen, onChange = _getAccordionItemProp.onChange;
  warnIfOpenAndDisabled({
    isOpen,
    isDisabled: isDisabled2
  });
  var onOpen = function onOpen2() {
    onChange == null ? void 0 : onChange(true);
  };
  var onClose = function onClose2() {
    onChange == null ? void 0 : onChange(false);
  };
  var onClick = (0, import_react69.useCallback)(function() {
    onChange == null ? void 0 : onChange(!isOpen);
    setFocusedIndex(index2);
  }, [index2, setFocusedIndex, isOpen, onChange]);
  var onKeyDown = (0, import_react69.useCallback)(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      ArrowDown: function ArrowDown() {
        var next2 = descendants.nextEnabled(index2);
        if (next2)
          focus(next2.node);
      },
      ArrowUp: function ArrowUp() {
        var prev2 = descendants.prevEnabled(index2);
        if (prev2)
          focus(prev2.node);
      },
      Home: function Home() {
        var first = descendants.firstEnabled();
        if (first)
          focus(first.node);
      },
      End: function End() {
        var last3 = descendants.lastEnabled();
        if (last3)
          focus(last3.node);
      }
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [descendants, index2]);
  var onFocus3 = (0, import_react69.useCallback)(function() {
    setFocusedIndex(index2);
  }, [setFocusedIndex, index2]);
  var getButtonProps = (0, import_react69.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends17({}, props2, {
      type: "button",
      ref: mergeRefs(register, buttonRef, ref),
      id: buttonId,
      disabled: !!isDisabled2,
      "aria-expanded": !!isOpen,
      "aria-controls": panelId,
      onClick: callAllHandlers(props2.onClick, onClick),
      onFocus: callAllHandlers(props2.onFocus, onFocus3),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown)
    });
  }, [buttonId, isDisabled2, isOpen, onClick, onFocus3, onKeyDown, panelId, register]);
  var getPanelProps = (0, import_react69.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends17({}, props2, {
      ref,
      role: "region",
      id: panelId,
      "aria-labelledby": buttonId,
      hidden: !isOpen
    });
  }, [buttonId, isOpen, panelId]);
  return {
    isOpen,
    isDisabled: isDisabled2,
    isFocusable: isFocusable2,
    onOpen,
    onClose,
    getButtonProps,
    getPanelProps,
    htmlProps
  };
}
function allowMultipleWarning(props) {
  var index2 = props.index || props.defaultIndex;
  var condition = !isUndefined(index2) && !isArray(index2) && props.allowMultiple;
  warn({
    condition: !!condition,
    message: "If 'allowMultiple' is passed, then 'index' or 'defaultIndex' must be an array. You passed: " + typeof index2 + ","
  });
}
function allowMultipleAndAllowToggleWarning(props) {
  warn({
    condition: !!(props.allowMultiple && props.allowToggle),
    message: "If 'allowMultiple' is passed, 'allowToggle' will be ignored. Either remove 'allowToggle' or 'allowMultiple' depending on whether you want multiple accordions visible or not"
  });
}
function focusableNotDisabledWarning(props) {
  warn({
    condition: !!(props.isFocusable && !props.isDisabled),
    message: "Using only 'isFocusable', this prop is reserved for situations where you pass 'isDisabled' but you still want the element to receive focus (A11y). Either remove it or pass 'isDisabled' as well.\n    "
  });
}
function warnIfOpenAndDisabled(props) {
  warn({
    condition: props.isOpen && !!props.isDisabled,
    message: "Cannot open a disabled accordion item"
  });
}
var _excluded9 = ["children", "reduceMotion"];
var _excluded24 = ["htmlProps", "descendants"];
var _excluded32 = ["htmlProps"];
var Accordion2 = forwardRef5(function(_ref2, ref) {
  var children = _ref2.children, reduceMotion = _ref2.reduceMotion, props = _objectWithoutPropertiesLoose10(_ref2, _excluded9);
  var styles3 = useMultiStyleConfig("Accordion", props);
  var ownProps = omitThemingProps2(props);
  var _useAccordion = useAccordion(ownProps), htmlProps = _useAccordion.htmlProps, descendants = _useAccordion.descendants, context = _objectWithoutPropertiesLoose10(_useAccordion, _excluded24);
  var ctx = React31.useMemo(function() {
    return _extends17({}, context, {
      reduceMotion: !!reduceMotion
    });
  }, [context, reduceMotion]);
  return React31.createElement(AccordionDescendantsProvider, {
    value: descendants
  }, React31.createElement(AccordionProvider, {
    value: ctx
  }, React31.createElement(StylesProvider2, {
    value: styles3
  }, React31.createElement(chakra2.div, _extends17({
    ref
  }, htmlProps, {
    className: cx("chakra-accordion", props.className),
    __css: styles3.root
  }), children))));
});
if (__DEV__) {
  Accordion2.displayName = "Accordion";
}
var _createContext5 = createContext3({
  name: "AccordionItemContext",
  errorMessage: "useAccordionItemContext: `context` is undefined. Seems you forgot to wrap the accordion item parts in `<AccordionItem />` "
});
var AccordionItemProvider = _createContext5[0];
var useAccordionItemContext = _createContext5[1];
var AccordionItem = forwardRef5(function(props, ref) {
  var children = props.children, className = props.className;
  var _useAccordionItem = useAccordionItem(props), htmlProps = _useAccordionItem.htmlProps, context = _objectWithoutPropertiesLoose10(_useAccordionItem, _excluded32);
  var styles3 = useStyles2();
  var containerStyles = _extends17({}, styles3.container, {
    overflowAnchor: "none"
  });
  var ctx = React31.useMemo(function() {
    return context;
  }, [context]);
  return React31.createElement(AccordionItemProvider, {
    value: ctx
  }, React31.createElement(chakra2.div, _extends17({
    ref
  }, htmlProps, {
    className: cx("chakra-accordion__item", className),
    __css: containerStyles
  }), runIfFn(children, {
    isExpanded: !!context.isOpen,
    isDisabled: !!context.isDisabled
  })));
});
if (__DEV__) {
  AccordionItem.displayName = "AccordionItem";
}
function useAccordionItemState() {
  var _useAccordionItemCont = useAccordionItemContext(), isOpen = _useAccordionItemCont.isOpen, isDisabled2 = _useAccordionItemCont.isDisabled, onClose = _useAccordionItemCont.onClose, onOpen = _useAccordionItemCont.onOpen;
  return {
    isOpen,
    onClose,
    isDisabled: isDisabled2,
    onOpen
  };
}
var AccordionButton = forwardRef5(function(props, ref) {
  var _useAccordionItemCont2 = useAccordionItemContext(), getButtonProps = _useAccordionItemCont2.getButtonProps;
  var buttonProps = getButtonProps(props, ref);
  var styles3 = useStyles2();
  var buttonStyles = _extends17({
    display: "flex",
    alignItems: "center",
    width: "100%",
    outline: 0
  }, styles3.button);
  return React31.createElement(chakra2.button, _extends17({}, buttonProps, {
    className: cx("chakra-accordion__button", props.className),
    __css: buttonStyles
  }));
});
if (__DEV__) {
  AccordionButton.displayName = "AccordionButton";
}
var AccordionPanel = forwardRef5(function(props, ref) {
  var _useAccordionContext = useAccordionContext(), reduceMotion = _useAccordionContext.reduceMotion;
  var _useAccordionItemCont3 = useAccordionItemContext(), getPanelProps = _useAccordionItemCont3.getPanelProps, isOpen = _useAccordionItemCont3.isOpen;
  var panelProps = getPanelProps(props, ref);
  var _className = cx("chakra-accordion__panel", props.className);
  var styles3 = useStyles2();
  if (!reduceMotion) {
    delete panelProps.hidden;
  }
  var child = React31.createElement(chakra2.div, _extends17({}, panelProps, {
    __css: styles3.panel,
    className: _className
  }));
  if (!reduceMotion) {
    return React31.createElement(Collapse, {
      "in": isOpen
    }, child);
  }
  return child;
});
if (__DEV__) {
  AccordionPanel.displayName = "AccordionPanel";
}
var AccordionIcon = function AccordionIcon2(props) {
  var _useAccordionItemCont4 = useAccordionItemContext(), isOpen = _useAccordionItemCont4.isOpen, isDisabled2 = _useAccordionItemCont4.isDisabled;
  var _useAccordionContext2 = useAccordionContext(), reduceMotion = _useAccordionContext2.reduceMotion;
  var _className = cx("chakra-accordion__icon", props.className);
  var styles3 = useStyles2();
  var iconStyles = _extends17({
    opacity: isDisabled2 ? 0.4 : 1,
    transform: isOpen ? "rotate(-180deg)" : void 0,
    transition: reduceMotion ? void 0 : "transform 0.2s",
    transformOrigin: "center"
  }, styles3.icon);
  return React31.createElement(Icon, _extends17({
    viewBox: "0 0 24 24",
    "aria-hidden": true,
    className: _className,
    __css: iconStyles
  }, props), React31.createElement("path", {
    fill: "currentColor",
    d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
  }));
};
if (__DEV__) {
  AccordionIcon.displayName = "AccordionIcon";
}

// node_modules/.pnpm/@chakra-ui+alert@1.3.7_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/alert/dist/chakra-ui-alert.esm.js
var React32 = __toESM(require_react());
function _extends18() {
  _extends18 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends18.apply(this, arguments);
}
function _objectWithoutPropertiesLoose11(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var CheckIcon = function CheckIcon2(props) {
  return React32.createElement(Icon, _extends18({
    viewBox: "0 0 24 24"
  }, props), React32.createElement("path", {
    fill: "currentColor",
    d: "M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
  }));
};
var InfoIcon = function InfoIcon2(props) {
  return React32.createElement(Icon, _extends18({
    viewBox: "0 0 24 24"
  }, props), React32.createElement("path", {
    fill: "currentColor",
    d: "M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
  }));
};
var WarningIcon = function WarningIcon2(props) {
  return React32.createElement(Icon, _extends18({
    viewBox: "0 0 24 24"
  }, props), React32.createElement("path", {
    fill: "currentColor",
    d: "M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
  }));
};
var _excluded10 = ["status"];
var STATUSES = {
  info: {
    icon: InfoIcon,
    colorScheme: "blue"
  },
  warning: {
    icon: WarningIcon,
    colorScheme: "orange"
  },
  success: {
    icon: CheckIcon,
    colorScheme: "green"
  },
  error: {
    icon: WarningIcon,
    colorScheme: "red"
  }
};
var _createContext6 = createContext3({
  name: "AlertContext",
  errorMessage: "useAlertContext: `context` is undefined. Seems you forgot to wrap alert components in `<Alert />`"
});
var AlertProvider = _createContext6[0];
var useAlertContext = _createContext6[1];
var Alert2 = forwardRef5(function(props, ref) {
  var _props$colorScheme;
  var _omitThemingProps = omitThemingProps2(props), _omitThemingProps$sta = _omitThemingProps.status, status = _omitThemingProps$sta === void 0 ? "info" : _omitThemingProps$sta, rest = _objectWithoutPropertiesLoose11(_omitThemingProps, _excluded10);
  var colorScheme = (_props$colorScheme = props.colorScheme) != null ? _props$colorScheme : STATUSES[status].colorScheme;
  var styles3 = useMultiStyleConfig("Alert", _extends18({}, props, {
    colorScheme
  }));
  var alertStyles = _extends18({
    width: "100%",
    display: "flex",
    alignItems: "center",
    position: "relative",
    overflow: "hidden"
  }, styles3.container);
  return React32.createElement(AlertProvider, {
    value: {
      status
    }
  }, React32.createElement(StylesProvider2, {
    value: styles3
  }, React32.createElement(chakra2.div, _extends18({
    role: "alert",
    ref
  }, rest, {
    className: cx("chakra-alert", props.className),
    __css: alertStyles
  }))));
});
var AlertTitle = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React32.createElement(chakra2.div, _extends18({
    ref
  }, props, {
    className: cx("chakra-alert__title", props.className),
    __css: styles3.title
  }));
});
var AlertDescription = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  var descriptionStyles = _extends18({
    display: "inline"
  }, styles3.description);
  return React32.createElement(chakra2.div, _extends18({
    ref
  }, props, {
    className: cx("chakra-alert__desc", props.className),
    __css: descriptionStyles
  }));
});
var AlertIcon = function AlertIcon2(props) {
  var _useAlertContext = useAlertContext(), status = _useAlertContext.status;
  var BaseIcon = STATUSES[status].icon;
  var styles3 = useStyles2();
  return React32.createElement(chakra2.span, _extends18({
    display: "inherit"
  }, props, {
    className: cx("chakra-alert__icon", props.className),
    __css: styles3.icon
  }), React32.createElement(BaseIcon, {
    w: "100%",
    h: "100%"
  }));
};

// node_modules/.pnpm/@chakra-ui+image@1.1.10_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js
var React33 = __toESM(require_react());
var import_react70 = __toESM(require_react());
function _extends19() {
  _extends19 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends19.apply(this, arguments);
}
function _objectWithoutPropertiesLoose12(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function useImage(props) {
  var loading = props.loading, src = props.src, srcSet = props.srcSet, onLoad = props.onLoad, onError = props.onError, crossOrigin = props.crossOrigin, sizes5 = props.sizes, ignoreFallback = props.ignoreFallback;
  var _useState = (0, import_react70.useState)("pending"), status = _useState[0], setStatus = _useState[1];
  (0, import_react70.useEffect)(function() {
    setStatus(src ? "loading" : "pending");
  }, [src]);
  var imageRef = (0, import_react70.useRef)();
  var load = (0, import_react70.useCallback)(function() {
    if (!src)
      return;
    flush();
    var img = new Image();
    img.src = src;
    if (crossOrigin)
      img.crossOrigin = crossOrigin;
    if (srcSet)
      img.srcset = srcSet;
    if (sizes5)
      img.sizes = sizes5;
    if (loading)
      img.loading = loading;
    img.onload = function(event) {
      flush();
      setStatus("loaded");
      onLoad == null ? void 0 : onLoad(event);
    };
    img.onerror = function(error3) {
      flush();
      setStatus("failed");
      onError == null ? void 0 : onError(error3);
    };
    imageRef.current = img;
  }, [src, crossOrigin, srcSet, sizes5, onLoad, onError, loading]);
  var flush = function flush2() {
    if (imageRef.current) {
      imageRef.current.onload = null;
      imageRef.current.onerror = null;
      imageRef.current = null;
    }
  };
  useSafeLayoutEffect(function() {
    if (ignoreFallback)
      return void 0;
    if (status === "loading") {
      load();
    }
    return function() {
      flush();
    };
  }, [status, load, ignoreFallback]);
  return ignoreFallback ? "loaded" : status;
}
var _excluded11 = ["htmlWidth", "htmlHeight", "alt"];
var _excluded25 = ["fallbackSrc", "fallback", "src", "srcSet", "align", "fit", "loading", "ignoreFallback", "crossOrigin"];
var NativeImage = React33.forwardRef(function(props, ref) {
  var htmlWidth = props.htmlWidth, htmlHeight = props.htmlHeight, alt = props.alt, rest = _objectWithoutPropertiesLoose12(props, _excluded11);
  return React33.createElement("img", _extends19({
    width: htmlWidth,
    height: htmlHeight,
    ref,
    alt
  }, rest));
});
var Image$1 = forwardRef5(function(props, ref) {
  var fallbackSrc = props.fallbackSrc, fallback = props.fallback, src = props.src, srcSet = props.srcSet, align = props.align, fit = props.fit, loading = props.loading, ignoreFallback = props.ignoreFallback, crossOrigin = props.crossOrigin, rest = _objectWithoutPropertiesLoose12(props, _excluded25);
  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === void 0 && fallback === void 0;
  var status = useImage(_extends19({}, props, {
    ignoreFallback: shouldIgnore
  }));
  var shared = _extends19({
    ref,
    objectFit: fit,
    objectPosition: align
  }, shouldIgnore ? rest : omit(rest, ["onError", "onLoad"]));
  if (status !== "loaded") {
    if (fallback)
      return fallback;
    return React33.createElement(chakra2.img, _extends19({
      as: NativeImage,
      className: "chakra-image__placeholder",
      src: fallbackSrc
    }, shared));
  }
  return React33.createElement(chakra2.img, _extends19({
    as: NativeImage,
    src,
    srcSet,
    crossOrigin,
    loading,
    className: "chakra-image"
  }, shared));
});
var Img = forwardRef5(function(props, ref) {
  return React33.createElement(chakra2.img, _extends19({
    ref,
    as: NativeImage,
    className: "chakra-image"
  }, props));
});
if (__DEV__) {
  Image$1.displayName = "Image";
}

// node_modules/.pnpm/@chakra-ui+avatar@1.3.11_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js
var React34 = __toESM(require_react());
function _objectWithoutPropertiesLoose13(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends20() {
  _extends20 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends20.apply(this, arguments);
}
var _excluded$15 = ["name", "getInitials"];
var _excluded26 = ["src", "srcSet", "name", "showBorder", "borderRadius", "onError", "getInitials", "icon", "iconLabel", "loading", "children", "borderColor", "ignoreFallback"];
var AvatarBadge = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  var badgeStyles = _extends20({
    position: "absolute",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    insetEnd: "0",
    bottom: "0"
  }, styles3.badge);
  return React34.createElement(chakra2.div, _extends20({
    ref
  }, props, {
    className: cx("chakra-avatar__badge", props.className),
    __css: badgeStyles
  }));
});
if (__DEV__) {
  AvatarBadge.displayName = "AvatarBadge";
}
function initials(name) {
  var _name$split = name.split(" "), firstName = _name$split[0], lastName = _name$split[1];
  return firstName && lastName ? "" + firstName.charAt(0) + lastName.charAt(0) : firstName.charAt(0);
}
var AvatarName = function AvatarName2(props) {
  var name = props.name, getInitials = props.getInitials, rest = _objectWithoutPropertiesLoose13(props, _excluded$15);
  var styles3 = useStyles2();
  return React34.createElement(chakra2.div, _extends20({
    role: "img",
    "aria-label": name
  }, rest, {
    __css: styles3.label
  }), name ? getInitials == null ? void 0 : getInitials(name) : null);
};
var DefaultIcon = function DefaultIcon2(props) {
  return React34.createElement(chakra2.svg, _extends20({
    viewBox: "0 0 128 128",
    color: "#fff",
    width: "100%",
    height: "100%",
    className: "chakra-avatar__svg"
  }, props), React34.createElement("path", {
    fill: "currentColor",
    d: "M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z"
  }), React34.createElement("path", {
    fill: "currentColor",
    d: "M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24"
  }));
};
var baseStyle22 = {
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  textAlign: "center",
  textTransform: "uppercase",
  fontWeight: "medium",
  position: "relative",
  flexShrink: 0
};
var Avatar2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Avatar", props);
  var _omitThemingProps = omitThemingProps2(props), src = _omitThemingProps.src, srcSet = _omitThemingProps.srcSet, name = _omitThemingProps.name, showBorder = _omitThemingProps.showBorder, _omitThemingProps$bor = _omitThemingProps.borderRadius, borderRadius = _omitThemingProps$bor === void 0 ? "full" : _omitThemingProps$bor, onError = _omitThemingProps.onError, _omitThemingProps$get = _omitThemingProps.getInitials, getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get, _omitThemingProps$ico = _omitThemingProps.icon, icon = _omitThemingProps$ico === void 0 ? React34.createElement(DefaultIcon, null) : _omitThemingProps$ico, _omitThemingProps$ico2 = _omitThemingProps.iconLabel, iconLabel = _omitThemingProps$ico2 === void 0 ? " avatar" : _omitThemingProps$ico2, loading = _omitThemingProps.loading, children = _omitThemingProps.children, borderColor = _omitThemingProps.borderColor, ignoreFallback = _omitThemingProps.ignoreFallback, rest = _objectWithoutPropertiesLoose13(_omitThemingProps, _excluded26);
  var avatarStyles = _extends20({
    borderRadius,
    borderWidth: showBorder ? "2px" : void 0
  }, baseStyle22, styles3.container);
  if (borderColor) {
    avatarStyles.borderColor = borderColor;
  }
  return React34.createElement(chakra2.span, _extends20({
    ref
  }, rest, {
    className: cx("chakra-avatar", props.className),
    __css: avatarStyles
  }), React34.createElement(StylesProvider2, {
    value: styles3
  }, React34.createElement(AvatarImage, {
    src,
    srcSet,
    loading,
    onError,
    getInitials,
    name,
    borderRadius,
    icon,
    iconLabel,
    ignoreFallback
  }), children));
});
if (__DEV__) {
  Avatar2.displayName = "Avatar";
}
var AvatarImage = function AvatarImage2(props) {
  var src = props.src, srcSet = props.srcSet, onError = props.onError, getInitials = props.getInitials, name = props.name, borderRadius = props.borderRadius, loading = props.loading, iconLabel = props.iconLabel, _props$icon = props.icon, icon = _props$icon === void 0 ? React34.createElement(DefaultIcon, null) : _props$icon, ignoreFallback = props.ignoreFallback;
  var status = useImage({
    src,
    onError,
    ignoreFallback
  });
  var hasLoaded = status === "loaded";
  var showFallback = !src || !hasLoaded;
  if (showFallback) {
    return name ? React34.createElement(AvatarName, {
      className: "chakra-avatar__initials",
      getInitials,
      name
    }) : React34.cloneElement(icon, {
      role: "img",
      "aria-label": iconLabel
    });
  }
  return React34.createElement(chakra2.img, {
    src,
    srcSet,
    alt: name,
    className: "chakra-avatar__img",
    loading,
    __css: {
      width: "100%",
      height: "100%",
      objectFit: "cover",
      borderRadius
    }
  });
};
if (__DEV__) {
  AvatarImage.displayName = "AvatarImage";
}
var _excluded12 = ["children", "borderColor", "max", "spacing", "borderRadius"];
var AvatarGroup = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Avatar", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, borderColor = _omitThemingProps.borderColor, max2 = _omitThemingProps.max, _omitThemingProps$spa = _omitThemingProps.spacing, spacing3 = _omitThemingProps$spa === void 0 ? "-0.75rem" : _omitThemingProps$spa, _omitThemingProps$bor = _omitThemingProps.borderRadius, borderRadius = _omitThemingProps$bor === void 0 ? "full" : _omitThemingProps$bor, rest = _objectWithoutPropertiesLoose13(_omitThemingProps, _excluded12);
  var validChildren = getValidChildren(children);
  var childrenWithinMax = max2 ? validChildren.slice(0, max2) : validChildren;
  var excess = max2 != null && validChildren.length - max2;
  var reversedChildren = childrenWithinMax.reverse();
  var clones = reversedChildren.map(function(child, index2) {
    var _child$props$borderCo;
    var isFirstAvatar = index2 === 0;
    var childProps = {
      marginEnd: isFirstAvatar ? 0 : spacing3,
      size: props.size,
      borderColor: (_child$props$borderCo = child.props.borderColor) != null ? _child$props$borderCo : borderColor,
      showBorder: true
    };
    return React34.cloneElement(child, filterUndefined(childProps));
  });
  var groupStyles = {
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-end",
    flexDirection: "row-reverse"
  };
  var excessStyles = _extends20({
    borderRadius,
    marginStart: spacing3
  }, baseStyle22, styles3.excessLabel);
  return React34.createElement(chakra2.div, _extends20({
    ref,
    role: "group",
    __css: groupStyles
  }, rest, {
    className: cx("chakra-avatar__group", props.className)
  }), excess > 0 && React34.createElement(chakra2.span, {
    className: "chakra-avatar__excess",
    __css: excessStyles
  }, "+" + excess), clones);
});
if (__DEV__) {
  AvatarGroup.displayName = "AvatarGroup";
}

// node_modules/.pnpm/@chakra-ui+breadcrumb@1.3.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js
var React35 = __toESM(require_react());
function _extends21() {
  _extends21 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends21.apply(this, arguments);
}
function _objectWithoutPropertiesLoose14(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded13 = ["spacing"];
var _excluded27 = ["isCurrentPage", "as", "className", "href"];
var _excluded33 = ["isCurrentPage", "separator", "isLastChild", "spacing", "children", "className"];
var _excluded42 = ["children", "spacing", "separator", "className"];
var BreadcrumbSeparator = forwardRef5(function(props, ref) {
  var spacing3 = props.spacing, rest = _objectWithoutPropertiesLoose14(props, _excluded13);
  var styles3 = useStyles2();
  var separatorStyles = _extends21({
    mx: spacing3
  }, styles3.separator);
  return React35.createElement(chakra2.span, _extends21({
    ref,
    role: "presentation"
  }, rest, {
    __css: separatorStyles
  }));
});
if (__DEV__) {
  BreadcrumbSeparator.displayName = "BreadcrumbSeparator";
}
var BreadcrumbLink = forwardRef5(function(props, ref) {
  var isCurrentPage = props.isCurrentPage, as = props.as, className = props.className, href = props.href, rest = _objectWithoutPropertiesLoose14(props, _excluded27);
  var styles3 = useStyles2();
  var sharedProps = _extends21({
    ref,
    as,
    className: cx("chakra-breadcrumb__link", className)
  }, rest);
  if (isCurrentPage) {
    return React35.createElement(chakra2.span, _extends21({
      "aria-current": "page",
      __css: styles3.link
    }, sharedProps));
  }
  return React35.createElement(chakra2.a, _extends21({
    __css: styles3.link,
    href
  }, sharedProps));
});
if (__DEV__) {
  BreadcrumbLink.displayName = "BreadcrumbLink";
}
var BreadcrumbItem = forwardRef5(function(props, ref) {
  var isCurrentPage = props.isCurrentPage, separator = props.separator, isLastChild = props.isLastChild, spacing3 = props.spacing, children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose14(props, _excluded33);
  var validChildren = getValidChildren(children);
  var clones = validChildren.map(function(child) {
    if (child.type === BreadcrumbLink) {
      return React35.cloneElement(child, {
        isCurrentPage
      });
    }
    if (child.type === BreadcrumbSeparator) {
      return React35.cloneElement(child, {
        spacing: spacing3,
        children: child.props.children || separator
      });
    }
    return child;
  });
  var styles3 = useStyles2();
  var itemStyles = _extends21({
    display: "inline-flex",
    alignItems: "center"
  }, styles3.item);
  var _className = cx("chakra-breadcrumb__list-item", className);
  return React35.createElement(chakra2.li, _extends21({
    ref,
    className: _className
  }, rest, {
    __css: itemStyles
  }), clones, !isLastChild && React35.createElement(BreadcrumbSeparator, {
    spacing: spacing3
  }, separator));
});
if (__DEV__) {
  BreadcrumbItem.displayName = "BreadcrumbItem";
}
var Breadcrumb2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Breadcrumb", props);
  var ownProps = omitThemingProps2(props);
  var children = ownProps.children, _ownProps$spacing = ownProps.spacing, spacing3 = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing, _ownProps$separator = ownProps.separator, separator = _ownProps$separator === void 0 ? "/" : _ownProps$separator, className = ownProps.className, rest = _objectWithoutPropertiesLoose14(ownProps, _excluded42);
  var validChildren = getValidChildren(children);
  var count = validChildren.length;
  var clones = validChildren.map(function(child, index2) {
    return React35.cloneElement(child, {
      separator,
      spacing: spacing3,
      isLastChild: count === index2 + 1
    });
  });
  var _className = cx("chakra-breadcrumb", className);
  return React35.createElement(chakra2.nav, _extends21({
    ref,
    "aria-label": "breadcrumb",
    className: _className,
    __css: styles3.container
  }, rest), React35.createElement(StylesProvider2, {
    value: styles3
  }, React35.createElement(chakra2.ol, {
    className: "chakra-breadcrumb__list"
  }, clones)));
});
if (__DEV__) {
  Breadcrumb2.displayName = "Breadcrumb";
}

// node_modules/.pnpm/@chakra-ui+button@1.5.10_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/button/dist/chakra-ui-button.esm.js
var React37 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+visually-hidden@1.1.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/visually-hidden/dist/chakra-ui-visually-hidden.esm.js
var visuallyHiddenStyle = {
  border: "0px",
  clip: "rect(0px, 0px, 0px, 0px)",
  height: "1px",
  width: "1px",
  margin: "-1px",
  padding: "0px",
  overflow: "hidden",
  whiteSpace: "nowrap",
  position: "absolute"
};
var VisuallyHidden = chakra2("span", {
  baseStyle: visuallyHiddenStyle
});
if (__DEV__) {
  VisuallyHidden.displayName = "VisuallyHidden";
}
var VisuallyHiddenInput = chakra2("input", {
  baseStyle: visuallyHiddenStyle
});
if (__DEV__) {
  VisuallyHiddenInput.displayName = "VisuallyHiddenInput";
}

// node_modules/.pnpm/@chakra-ui+spinner@1.2.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/spinner/dist/chakra-ui-spinner.esm.js
var React36 = __toESM(require_react());
function _extends22() {
  _extends22 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends22.apply(this, arguments);
}
function _objectWithoutPropertiesLoose15(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded14 = ["label", "thickness", "speed", "emptyColor", "className"];
var spin = keyframes({
  "0%": {
    transform: "rotate(0deg)"
  },
  "100%": {
    transform: "rotate(360deg)"
  }
});
var Spinner2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Spinner", props);
  var _omitThemingProps = omitThemingProps2(props), _omitThemingProps$lab = _omitThemingProps.label, label = _omitThemingProps$lab === void 0 ? "Loading..." : _omitThemingProps$lab, _omitThemingProps$thi = _omitThemingProps.thickness, thickness = _omitThemingProps$thi === void 0 ? "2px" : _omitThemingProps$thi, _omitThemingProps$spe = _omitThemingProps.speed, speed = _omitThemingProps$spe === void 0 ? "0.45s" : _omitThemingProps$spe, _omitThemingProps$emp = _omitThemingProps.emptyColor, emptyColor = _omitThemingProps$emp === void 0 ? "transparent" : _omitThemingProps$emp, className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose15(_omitThemingProps, _excluded14);
  var _className = cx("chakra-spinner", className);
  var spinnerStyles = _extends22({
    display: "inline-block",
    borderColor: "currentColor",
    borderStyle: "solid",
    borderRadius: "99999px",
    borderWidth: thickness,
    borderBottomColor: emptyColor,
    borderLeftColor: emptyColor,
    animation: spin + " " + speed + " linear infinite"
  }, styles3);
  return React36.createElement(chakra2.div, _extends22({
    ref,
    __css: spinnerStyles,
    className: _className
  }, rest), label && React36.createElement(VisuallyHidden, null, label));
});
if (__DEV__) {
  Spinner2.displayName = "Spinner";
}

// node_modules/.pnpm/@chakra-ui+button@1.5.10_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/button/dist/chakra-ui-button.esm.js
function _objectWithoutPropertiesLoose16(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends23() {
  _extends23 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends23.apply(this, arguments);
}
var _excluded$42 = ["size", "colorScheme", "variant", "className", "spacing", "isAttached", "isDisabled"];
var _createContext7 = createContext3({
  strict: false,
  name: "ButtonGroupContext"
});
var ButtonGroupProvider = _createContext7[0];
var useButtonGroup = _createContext7[1];
var ButtonGroup = forwardRef5(function(props, ref) {
  var size3 = props.size, colorScheme = props.colorScheme, variant = props.variant, className = props.className, _props$spacing = props.spacing, spacing3 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, isAttached = props.isAttached, isDisabled2 = props.isDisabled, rest = _objectWithoutPropertiesLoose16(props, _excluded$42);
  var _className = cx("chakra-button__group", className);
  var context = React37.useMemo(function() {
    return {
      size: size3,
      colorScheme,
      variant,
      isDisabled: isDisabled2
    };
  }, [size3, colorScheme, variant, isDisabled2]);
  var groupStyles = {
    display: "inline-flex"
  };
  if (isAttached) {
    groupStyles = _extends23({}, groupStyles, {
      "> *:first-of-type:not(:last-of-type)": {
        borderEndRadius: 0
      },
      "> *:not(:first-of-type):not(:last-of-type)": {
        borderRadius: 0
      },
      "> *:not(:first-of-type):last-of-type": {
        borderStartRadius: 0
      }
    });
  } else {
    groupStyles = _extends23({}, groupStyles, {
      "& > *:not(style) ~ *:not(style)": {
        marginStart: spacing3
      }
    });
  }
  return React37.createElement(ButtonGroupProvider, {
    value: context
  }, React37.createElement(chakra2.div, _extends23({
    ref,
    role: "group",
    __css: groupStyles,
    className: _className
  }, rest)));
});
if (__DEV__) {
  ButtonGroup.displayName = "ButtonGroup";
}
var _excluded$32 = ["label", "placement", "spacing", "children", "className", "__css"];
var ButtonSpinner = function ButtonSpinner2(props) {
  var label = props.label, placement = props.placement, _props$spacing = props.spacing, spacing3 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, _props$children = props.children, children = _props$children === void 0 ? React37.createElement(Spinner2, {
    color: "currentColor",
    width: "1em",
    height: "1em"
  }) : _props$children, className = props.className, __css = props.__css, rest = _objectWithoutPropertiesLoose16(props, _excluded$32);
  var _className = cx("chakra-button__spinner", className);
  var marginProp = placement === "start" ? "marginEnd" : "marginStart";
  var spinnerStyles = React37.useMemo(function() {
    var _extends210;
    return _extends23((_extends210 = {
      display: "flex",
      alignItems: "center",
      position: label ? "relative" : "absolute"
    }, _extends210[marginProp] = label ? spacing3 : 0, _extends210.fontSize = "1em", _extends210.lineHeight = "normal", _extends210), __css);
  }, [__css, label, marginProp, spacing3]);
  return React37.createElement(chakra2.div, _extends23({
    className: _className
  }, rest, {
    __css: spinnerStyles
  }), children);
};
if (__DEV__) {
  ButtonSpinner.displayName = "ButtonSpinner";
}
var _excluded$22 = ["children", "className"];
var ButtonIcon = function ButtonIcon2(props) {
  var children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose16(props, _excluded$22);
  var _children = React37.isValidElement(children) ? React37.cloneElement(children, {
    "aria-hidden": true,
    focusable: false
  }) : children;
  var _className = cx("chakra-button__icon", className);
  return React37.createElement(chakra2.span, _extends23({
    display: "inline-flex",
    alignSelf: "center",
    flexShrink: 0
  }, rest, {
    className: _className
  }), _children);
};
if (__DEV__) {
  ButtonIcon.displayName = "ButtonIcon";
}
function useButtonType(value) {
  var _React$useState = React37.useState(!value), isButton = _React$useState[0], setIsButton = _React$useState[1];
  var refCallback = React37.useCallback(function(node3) {
    if (!node3)
      return;
    setIsButton(node3.tagName === "BUTTON");
  }, []);
  var type = isButton ? "button" : void 0;
  return {
    ref: refCallback,
    type
  };
}
var _excluded$16 = ["isDisabled", "isLoading", "isActive", "isFullWidth", "children", "leftIcon", "rightIcon", "loadingText", "iconSpacing", "type", "spinner", "spinnerPlacement", "className", "as"];
var Button2 = forwardRef5(function(props, ref) {
  var group = useButtonGroup();
  var styles3 = useStyleConfig2("Button", _extends23({}, group, props));
  var _omitThemingProps = omitThemingProps2(props), _omitThemingProps$isD = _omitThemingProps.isDisabled, isDisabled2 = _omitThemingProps$isD === void 0 ? group == null ? void 0 : group.isDisabled : _omitThemingProps$isD, isLoading = _omitThemingProps.isLoading, isActive = _omitThemingProps.isActive, isFullWidth = _omitThemingProps.isFullWidth, children = _omitThemingProps.children, leftIcon = _omitThemingProps.leftIcon, rightIcon = _omitThemingProps.rightIcon, loadingText = _omitThemingProps.loadingText, _omitThemingProps$ico = _omitThemingProps.iconSpacing, iconSpacing3 = _omitThemingProps$ico === void 0 ? "0.5rem" : _omitThemingProps$ico, type = _omitThemingProps.type, spinner2 = _omitThemingProps.spinner, _omitThemingProps$spi = _omitThemingProps.spinnerPlacement, spinnerPlacement = _omitThemingProps$spi === void 0 ? "start" : _omitThemingProps$spi, className = _omitThemingProps.className, as = _omitThemingProps.as, rest = _objectWithoutPropertiesLoose16(_omitThemingProps, _excluded$16);
  var buttonStyles = React37.useMemo(function() {
    var _styles$_focus;
    var _focus = (0, import_lodash.default)({}, (_styles$_focus = styles3 == null ? void 0 : styles3["_focus"]) != null ? _styles$_focus : {}, {
      zIndex: 1
    });
    return _extends23({
      display: "inline-flex",
      appearance: "none",
      alignItems: "center",
      justifyContent: "center",
      userSelect: "none",
      position: "relative",
      whiteSpace: "nowrap",
      verticalAlign: "middle",
      outline: "none",
      width: isFullWidth ? "100%" : "auto"
    }, styles3, !!group && {
      _focus
    });
  }, [styles3, group, isFullWidth]);
  var _useButtonType = useButtonType(as), _ref2 = _useButtonType.ref, defaultType = _useButtonType.type;
  var contentProps = {
    rightIcon,
    leftIcon,
    iconSpacing: iconSpacing3,
    children
  };
  return React37.createElement(chakra2.button, _extends23({
    disabled: isDisabled2 || isLoading,
    ref: useMergeRefs(ref, _ref2),
    as,
    type: type != null ? type : defaultType,
    "data-active": dataAttr(isActive),
    "data-loading": dataAttr(isLoading),
    __css: buttonStyles,
    className: cx("chakra-button", className)
  }, rest), isLoading && spinnerPlacement === "start" && React37.createElement(ButtonSpinner, {
    className: "chakra-button__spinner--start",
    label: loadingText,
    placement: "start",
    spacing: iconSpacing3
  }, spinner2), isLoading ? loadingText || React37.createElement(chakra2.span, {
    opacity: 0
  }, React37.createElement(ButtonContent, contentProps)) : React37.createElement(ButtonContent, contentProps), isLoading && spinnerPlacement === "end" && React37.createElement(ButtonSpinner, {
    className: "chakra-button__spinner--end",
    label: loadingText,
    placement: "end",
    spacing: iconSpacing3
  }, spinner2));
});
if (__DEV__) {
  Button2.displayName = "Button";
}
function ButtonContent(props) {
  var leftIcon = props.leftIcon, rightIcon = props.rightIcon, children = props.children, iconSpacing3 = props.iconSpacing;
  return React37.createElement(React37.Fragment, null, leftIcon && React37.createElement(ButtonIcon, {
    marginEnd: iconSpacing3
  }, leftIcon), children, rightIcon && React37.createElement(ButtonIcon, {
    marginStart: iconSpacing3
  }, rightIcon));
}
var _excluded15 = ["icon", "children", "isRound", "aria-label"];
var IconButton = forwardRef5(function(props, ref) {
  var icon = props.icon, children = props.children, isRound = props.isRound, ariaLabel = props["aria-label"], rest = _objectWithoutPropertiesLoose16(props, _excluded15);
  var element = icon || children;
  var _children = React37.isValidElement(element) ? React37.cloneElement(element, {
    "aria-hidden": true,
    focusable: false
  }) : null;
  return React37.createElement(Button2, _extends23({
    padding: "0",
    borderRadius: isRound ? "full" : void 0,
    ref,
    "aria-label": ariaLabel
  }, rest), _children);
});
if (__DEV__) {
  IconButton.displayName = "IconButton";
}

// node_modules/.pnpm/@chakra-ui+checkbox@1.7.1_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js
var React39 = __toESM(require_react());
var import_react71 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+form-control@1.6.0_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js
var React38 = __toESM(require_react());
function _extends24() {
  _extends24 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends24.apply(this, arguments);
}
function _objectWithoutPropertiesLoose17(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$23 = ["id", "isRequired", "isInvalid", "isDisabled", "isReadOnly"];
var _excluded2$12 = ["getRootProps", "htmlProps"];
var _createContext8 = createContext3({
  strict: false,
  name: "FormControlContext"
});
var FormControlProvider = _createContext8[0];
var useFormControlContext = _createContext8[1];
function useFormControlProvider(props) {
  var idProp = props.id, isRequired = props.isRequired, isInvalid = props.isInvalid, isDisabled2 = props.isDisabled, isReadOnly = props.isReadOnly, htmlProps = _objectWithoutPropertiesLoose17(props, _excluded$23);
  var uuid = useId();
  var id2 = idProp || "field-" + uuid;
  var labelId = id2 + "-label";
  var feedbackId = id2 + "-feedback";
  var helpTextId = id2 + "-helptext";
  var _React$useState = React38.useState(false), hasFeedbackText = _React$useState[0], setHasFeedbackText = _React$useState[1];
  var _React$useState2 = React38.useState(false), hasHelpText = _React$useState2[0], setHasHelpText = _React$useState2[1];
  var _useBoolean = useBoolean(), isFocused = _useBoolean[0], setFocus2 = _useBoolean[1];
  var getHelpTextProps = React38.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends24({
      id: helpTextId
    }, props2, {
      ref: mergeRefs(forwardedRef, function(node3) {
        if (!node3)
          return;
        setHasHelpText(true);
      })
    });
  }, [helpTextId]);
  var getLabelProps = React38.useCallback(function(props2, forwardedRef) {
    var _props$id, _props$htmlFor;
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends24({}, props2, {
      ref: forwardedRef,
      "data-focus": dataAttr(isFocused),
      "data-disabled": dataAttr(isDisabled2),
      "data-invalid": dataAttr(isInvalid),
      "data-readonly": dataAttr(isReadOnly),
      id: (_props$id = props2.id) != null ? _props$id : labelId,
      htmlFor: (_props$htmlFor = props2.htmlFor) != null ? _props$htmlFor : id2
    });
  }, [id2, isDisabled2, isFocused, isInvalid, isReadOnly, labelId]);
  var getErrorMessageProps = React38.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends24({
      id: feedbackId
    }, props2, {
      ref: mergeRefs(forwardedRef, function(node3) {
        if (!node3)
          return;
        setHasFeedbackText(true);
      }),
      "aria-live": "polite"
    });
  }, [feedbackId]);
  var getRootProps = React38.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends24({}, props2, htmlProps, {
      ref: forwardedRef,
      role: "group"
    });
  }, [htmlProps]);
  var getRequiredIndicatorProps = React38.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends24({}, props2, {
      ref: forwardedRef,
      role: "presentation",
      "aria-hidden": true,
      children: props2.children || "*"
    });
  }, []);
  return {
    isRequired: !!isRequired,
    isInvalid: !!isInvalid,
    isReadOnly: !!isReadOnly,
    isDisabled: !!isDisabled2,
    isFocused: !!isFocused,
    onFocus: setFocus2.on,
    onBlur: setFocus2.off,
    hasFeedbackText,
    setHasFeedbackText,
    hasHelpText,
    setHasHelpText,
    id: id2,
    labelId,
    feedbackId,
    helpTextId,
    htmlProps,
    getHelpTextProps,
    getErrorMessageProps,
    getRootProps,
    getLabelProps,
    getRequiredIndicatorProps
  };
}
var FormControl = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Form", props);
  var ownProps = omitThemingProps2(props);
  var _useFormControlProvid = useFormControlProvider(ownProps), getRootProps = _useFormControlProvid.getRootProps;
  _useFormControlProvid.htmlProps;
  var context = _objectWithoutPropertiesLoose17(_useFormControlProvid, _excluded2$12);
  var className = cx("chakra-form-control", props.className);
  return React38.createElement(FormControlProvider, {
    value: context
  }, React38.createElement(StylesProvider2, {
    value: styles3
  }, React38.createElement(chakra2.div, _extends24({}, getRootProps({}, ref), {
    className,
    __css: styles3["container"]
  }))));
});
if (__DEV__) {
  FormControl.displayName = "FormControl";
}
var FormHelperText = forwardRef5(function(props, ref) {
  var field = useFormControlContext();
  var styles3 = useStyles2();
  var className = cx("chakra-form__helper-text", props.className);
  return React38.createElement(chakra2.div, _extends24({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {
    __css: styles3.helperText,
    className
  }));
});
if (__DEV__) {
  FormHelperText.displayName = "FormHelperText";
}
var _excluded$17 = ["isDisabled", "isInvalid", "isReadOnly", "isRequired"];
var _excluded28 = ["id", "disabled", "readOnly", "required", "isRequired", "isInvalid", "isReadOnly", "isDisabled", "onFocus", "onBlur"];
function useFormControl(props) {
  var _useFormControlProps = useFormControlProps(props), isDisabled2 = _useFormControlProps.isDisabled, isInvalid = _useFormControlProps.isInvalid, isReadOnly = _useFormControlProps.isReadOnly, isRequired = _useFormControlProps.isRequired, rest = _objectWithoutPropertiesLoose17(_useFormControlProps, _excluded$17);
  return _extends24({}, rest, {
    disabled: isDisabled2,
    readOnly: isReadOnly,
    required: isRequired,
    "aria-invalid": ariaAttr(isInvalid),
    "aria-required": ariaAttr(isRequired),
    "aria-readonly": ariaAttr(isReadOnly)
  });
}
function useFormControlProps(props) {
  var _ref2, _ref22, _ref3;
  var field = useFormControlContext();
  var id2 = props.id, disabled3 = props.disabled, readOnly3 = props.readOnly, required = props.required, isRequired = props.isRequired, isInvalid = props.isInvalid, isReadOnly = props.isReadOnly, isDisabled2 = props.isDisabled, onFocus3 = props.onFocus, onBlur3 = props.onBlur, rest = _objectWithoutPropertiesLoose17(props, _excluded28);
  var labelIds = props["aria-describedby"] ? [props["aria-describedby"]] : [];
  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {
    labelIds.push(field.feedbackId);
  }
  if (field != null && field.hasHelpText) {
    labelIds.push(field.helpTextId);
  }
  return _extends24({}, rest, {
    "aria-describedby": labelIds.join(" ") || void 0,
    id: id2 != null ? id2 : field == null ? void 0 : field.id,
    isDisabled: (_ref2 = disabled3 != null ? disabled3 : isDisabled2) != null ? _ref2 : field == null ? void 0 : field.isDisabled,
    isReadOnly: (_ref22 = readOnly3 != null ? readOnly3 : isReadOnly) != null ? _ref22 : field == null ? void 0 : field.isReadOnly,
    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,
    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,
    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus3),
    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur3)
  });
}
var FormErrorMessage = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("FormError", props);
  var ownProps = omitThemingProps2(props);
  var field = useFormControlContext();
  if (!(field != null && field.isInvalid))
    return null;
  return React38.createElement(StylesProvider2, {
    value: styles3
  }, React38.createElement(chakra2.div, _extends24({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {
    className: cx("chakra-form__error-message", props.className),
    __css: _extends24({
      display: "flex",
      alignItems: "center"
    }, styles3.text)
  })));
});
if (__DEV__) {
  FormErrorMessage.displayName = "FormErrorMessage";
}
var FormErrorIcon = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  var field = useFormControlContext();
  if (!(field != null && field.isInvalid))
    return null;
  var _className = cx("chakra-form__error-icon", props.className);
  return React38.createElement(Icon$1, _extends24({
    ref,
    "aria-hidden": true
  }, props, {
    __css: styles3.icon,
    className: _className
  }), React38.createElement("path", {
    fill: "currentColor",
    d: "M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
  }));
});
if (__DEV__) {
  FormErrorIcon.displayName = "FormErrorIcon";
}
var _excluded16 = ["className", "children", "requiredIndicator", "optionalIndicator"];
var FormLabel2 = forwardRef5(function(passedProps, ref) {
  var _field$getLabelProps;
  var styles3 = useStyleConfig2("FormLabel", passedProps);
  var props = omitThemingProps2(passedProps);
  props.className;
  var children = props.children, _props$requiredIndica = props.requiredIndicator, requiredIndicator = _props$requiredIndica === void 0 ? React38.createElement(RequiredIndicator, null) : _props$requiredIndica, _props$optionalIndica = props.optionalIndicator, optionalIndicator = _props$optionalIndica === void 0 ? null : _props$optionalIndica, rest = _objectWithoutPropertiesLoose17(props, _excluded16);
  var field = useFormControlContext();
  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends24({
    ref
  }, rest);
  return React38.createElement(chakra2.label, _extends24({}, ownProps, {
    className: cx("chakra-form__label", props.className),
    __css: _extends24({
      display: "block",
      textAlign: "start"
    }, styles3)
  }), children, field != null && field.isRequired ? requiredIndicator : optionalIndicator);
});
if (__DEV__) {
  FormLabel2.displayName = "FormLabel";
}
var RequiredIndicator = forwardRef5(function(props, ref) {
  var field = useFormControlContext();
  var styles3 = useStyles2();
  if (!(field != null && field.isRequired))
    return null;
  var className = cx("chakra-form__required-indicator", props.className);
  return React38.createElement(chakra2.span, _extends24({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {
    __css: styles3.requiredIndicator,
    className
  }));
});
if (__DEV__) {
  RequiredIndicator.displayName = "RequiredIndicator";
}

// node_modules/.pnpm/@chakra-ui+checkbox@1.7.1_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js
function _extends25() {
  _extends25 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends25.apply(this, arguments);
}
function useCheckboxGroup(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, defaultValue = _props.defaultValue, valueProp = _props.value, onChange = _props.onChange, isDisabled2 = _props.isDisabled, isNative = _props.isNative;
  var onChangeProp = useCallbackRef(onChange);
  var _useControllableState = useControllableState({
    value: valueProp,
    defaultValue: defaultValue || [],
    onChange: onChangeProp
  }), value = _useControllableState[0], setValue = _useControllableState[1];
  var handleChange = (0, import_react71.useCallback)(function(eventOrValue) {
    if (!value)
      return;
    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);
    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;
    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function(v) {
      return String(v) !== String(selectedValue);
    });
    setValue(nextValue);
  }, [setValue, value]);
  var getCheckboxProps = (0, import_react71.useCallback)(function(props2) {
    var _extends210;
    if (props2 === void 0) {
      props2 = {};
    }
    var checkedKey = isNative ? "checked" : "isChecked";
    return _extends25({}, props2, (_extends210 = {}, _extends210[checkedKey] = value.some(function(val) {
      return String(props2.value) === String(val);
    }), _extends210.onChange = handleChange, _extends210));
  }, [handleChange, isNative, value]);
  return {
    value,
    isDisabled: isDisabled2,
    onChange: handleChange,
    setValue,
    getCheckboxProps
  };
}
var _createContext9 = createContext3({
  name: "CheckboxGroupContext",
  strict: false
});
var CheckboxGroupProvider = _createContext9[0];
var useCheckboxGroupContext = _createContext9[1];
var CheckboxGroup = function CheckboxGroup2(props) {
  var colorScheme = props.colorScheme, size3 = props.size, variant = props.variant, children = props.children, isDisabled2 = props.isDisabled;
  var _useCheckboxGroup = useCheckboxGroup(props), value = _useCheckboxGroup.value, onChange = _useCheckboxGroup.onChange;
  var group = React39.useMemo(function() {
    return {
      size: size3,
      onChange,
      colorScheme,
      value,
      variant,
      isDisabled: isDisabled2
    };
  }, [size3, onChange, colorScheme, value, variant, isDisabled2]);
  return React39.createElement(CheckboxGroupProvider, {
    value: group
  }, children);
};
if (__DEV__) {
  CheckboxGroup.displayName = "CheckboxGroup";
}
function _objectWithoutPropertiesLoose18(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$24 = ["isIndeterminate", "isChecked"];
function __motion(el) {
  var m2 = motion;
  if ("custom" in m2 && typeof m2.custom === "function") {
    return m2.custom(el);
  }
  return m2(el);
}
var MotionSvg = __motion(chakra2.svg);
var CheckIcon3 = function CheckIcon4(props) {
  return React39.createElement(MotionSvg, _extends25({
    width: "1.2em",
    viewBox: "0 0 12 10",
    variants: {
      unchecked: {
        opacity: 0,
        strokeDashoffset: 16
      },
      checked: {
        opacity: 1,
        strokeDashoffset: 0,
        transition: {
          duration: 0.2
        }
      }
    },
    style: {
      fill: "none",
      strokeWidth: 2,
      stroke: "currentColor",
      strokeDasharray: 16
    }
  }, props), React39.createElement("polyline", {
    points: "1.5 6 4.5 9 10.5 1"
  }));
};
var IndeterminateIcon = function IndeterminateIcon2(props) {
  return React39.createElement(MotionSvg, _extends25({
    width: "1.2em",
    viewBox: "0 0 24 24",
    variants: {
      unchecked: {
        scaleX: 0.65,
        opacity: 0
      },
      checked: {
        scaleX: 1,
        opacity: 1,
        transition: {
          scaleX: {
            duration: 0
          },
          opacity: {
            duration: 0.02
          }
        }
      }
    },
    style: {
      stroke: "currentColor",
      strokeWidth: 4
    }
  }, props), React39.createElement("line", {
    x1: "21",
    x2: "3",
    y1: "12",
    y2: "12"
  }));
};
var CheckboxTransition = function CheckboxTransition2(_ref2) {
  var open = _ref2.open, children = _ref2.children;
  return React39.createElement(AnimatePresence, {
    initial: false
  }, open && React39.createElement(motion.div, {
    variants: {
      unchecked: {
        scale: 0.5
      },
      checked: {
        scale: 1
      }
    },
    initial: "unchecked",
    animate: "checked",
    exit: "unchecked",
    style: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    }
  }, children));
};
var CheckboxIcon = function CheckboxIcon2(props) {
  var isIndeterminate = props.isIndeterminate, isChecked = props.isChecked, rest = _objectWithoutPropertiesLoose18(props, _excluded$24);
  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon3;
  return React39.createElement(CheckboxTransition, {
    open: isChecked || isIndeterminate
  }, React39.createElement(IconEl, rest));
};
var _excluded$18 = ["defaultIsChecked", "defaultChecked", "isChecked", "isFocusable", "onChange", "isIndeterminate", "name", "value", "tabIndex", "aria-label", "aria-labelledby", "aria-invalid"];
function useCheckbox(props) {
  if (props === void 0) {
    props = {};
  }
  var formControlProps = useFormControlProps(props);
  var isDisabled2 = formControlProps.isDisabled, isReadOnly = formControlProps.isReadOnly, isRequired = formControlProps.isRequired, isInvalid = formControlProps.isInvalid, id2 = formControlProps.id, onBlur3 = formControlProps.onBlur, onFocus3 = formControlProps.onFocus, ariaDescribedBy = formControlProps["aria-describedby"];
  var _props = props, defaultIsChecked = _props.defaultIsChecked, _props$defaultChecked = _props.defaultChecked, defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked, checkedProp = _props.isChecked, isFocusable2 = _props.isFocusable, onChange = _props.onChange, isIndeterminate = _props.isIndeterminate, name = _props.name, value = _props.value, _props$tabIndex = _props.tabIndex, tabIndex = _props$tabIndex === void 0 ? void 0 : _props$tabIndex, ariaLabel = _props["aria-label"], ariaLabelledBy = _props["aria-labelledby"], ariaInvalid = _props["aria-invalid"], rest = _objectWithoutPropertiesLoose18(_props, _excluded$18);
  var htmlProps = omit(rest, ["isDisabled", "isReadOnly", "isRequired", "isInvalid", "id", "onBlur", "onFocus", "aria-describedby"]);
  var onChangeProp = useCallbackRef(onChange);
  var onBlurProp = useCallbackRef(onBlur3);
  var onFocusProp = useCallbackRef(onFocus3);
  var _useBoolean = useBoolean(), isFocused = _useBoolean[0], setFocused = _useBoolean[1];
  var _useBoolean2 = useBoolean(), isHovered = _useBoolean2[0], setHovered = _useBoolean2[1];
  var _useBoolean3 = useBoolean(), isActive = _useBoolean3[0], setActive = _useBoolean3[1];
  var inputRef = (0, import_react71.useRef)(null);
  var _useState = (0, import_react71.useState)(true), rootIsLabelElement = _useState[0], setRootIsLabelElement = _useState[1];
  var _useState2 = (0, import_react71.useState)(!!defaultChecked), checkedState = _useState2[0], setCheckedState = _useState2[1];
  var _useControllableProp = useControllableProp(checkedProp, checkedState), isControlled = _useControllableProp[0], isChecked = _useControllableProp[1];
  warn({
    condition: !!defaultIsChecked,
    message: 'The "defaultIsChecked" prop has been deprecated and will be removed in a future version. Please use the "defaultChecked" prop instead, which mirrors default React checkbox behavior.'
  });
  var handleChange = (0, import_react71.useCallback)(function(event) {
    if (isReadOnly || isDisabled2) {
      event.preventDefault();
      return;
    }
    if (!isControlled) {
      if (isChecked) {
        setCheckedState(event.target.checked);
      } else {
        setCheckedState(isIndeterminate ? true : event.target.checked);
      }
    }
    onChangeProp == null ? void 0 : onChangeProp(event);
  }, [isReadOnly, isDisabled2, isChecked, isControlled, isIndeterminate, onChangeProp]);
  useSafeLayoutEffect(function() {
    if (inputRef.current) {
      inputRef.current.indeterminate = Boolean(isIndeterminate);
    }
  }, [isIndeterminate]);
  useUpdateEffect(function() {
    if (isDisabled2) {
      setFocused.off();
    }
  }, [isDisabled2, setFocused]);
  var trulyDisabled = isDisabled2 && !isFocusable2;
  var onKeyDown = (0, import_react71.useCallback)(function(event) {
    if (event.key === " ") {
      setActive.on();
    }
  }, [setActive]);
  var onKeyUp = (0, import_react71.useCallback)(function(event) {
    if (event.key === " ") {
      setActive.off();
    }
  }, [setActive]);
  useSafeLayoutEffect(function() {
    if (!inputRef.current)
      return;
    var notInSync = inputRef.current.checked !== isChecked;
    if (notInSync) {
      setCheckedState(inputRef.current.checked);
    }
  }, [inputRef.current]);
  var getCheckboxProps = (0, import_react71.useCallback)(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    var onPressDown = function onPressDown2(event) {
      event.preventDefault();
      setActive.on();
    };
    return _extends25({}, props2, {
      ref: forwardedRef,
      "data-active": dataAttr(isActive),
      "data-hover": dataAttr(isHovered),
      "data-checked": dataAttr(isChecked),
      "data-focus": dataAttr(isFocused),
      "data-indeterminate": dataAttr(isIndeterminate),
      "data-disabled": dataAttr(isDisabled2),
      "data-invalid": dataAttr(isInvalid),
      "data-readonly": dataAttr(isReadOnly),
      "aria-hidden": true,
      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),
      onMouseUp: callAllHandlers(props2.onMouseUp, setActive.off),
      onMouseEnter: callAllHandlers(props2.onMouseEnter, setHovered.on),
      onMouseLeave: callAllHandlers(props2.onMouseLeave, setHovered.off)
    });
  }, [isActive, isChecked, isDisabled2, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);
  var getRootProps = (0, import_react71.useCallback)(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends25({}, htmlProps, props2, {
      ref: mergeRefs(forwardedRef, function(node3) {
        if (!node3)
          return;
        setRootIsLabelElement(node3.tagName === "LABEL");
      }),
      onClick: callAllHandlers(props2.onClick, function() {
        if (!rootIsLabelElement) {
          var _inputRef$current;
          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();
          focus(inputRef.current, {
            nextTick: true
          });
        }
      }),
      "data-disabled": dataAttr(isDisabled2),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  }, [htmlProps, isDisabled2, isChecked, isInvalid, rootIsLabelElement]);
  var getInputProps = (0, import_react71.useCallback)(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends25({}, props2, {
      ref: mergeRefs(inputRef, forwardedRef),
      type: "checkbox",
      name,
      value,
      id: id2,
      tabIndex,
      onChange: callAllHandlers(props2.onChange, handleChange),
      onBlur: callAllHandlers(props2.onBlur, onBlurProp, setFocused.off),
      onFocus: callAllHandlers(props2.onFocus, onFocusProp, setFocused.on),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),
      required: isRequired,
      checked: isChecked,
      disabled: trulyDisabled,
      readOnly: isReadOnly,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledBy,
      "aria-invalid": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,
      "aria-describedby": ariaDescribedBy,
      "aria-disabled": isDisabled2,
      style: visuallyHiddenStyle
    });
  }, [name, value, id2, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled2, tabIndex]);
  var getLabelProps = (0, import_react71.useCallback)(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends25({}, props2, {
      ref: forwardedRef,
      onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),
      onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),
      "data-disabled": dataAttr(isDisabled2),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  }, [isChecked, isDisabled2, isInvalid]);
  var state3 = {
    isInvalid,
    isFocused,
    isChecked,
    isActive,
    isHovered,
    isIndeterminate,
    isDisabled: isDisabled2,
    isReadOnly,
    isRequired
  };
  return {
    state: state3,
    getRootProps,
    getCheckboxProps,
    getInputProps,
    getLabelProps,
    htmlProps
  };
}
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
var _excluded17 = ["spacing", "className", "children", "iconColor", "iconSize", "icon", "isChecked", "isDisabled", "onChange", "inputProps"];
var CheckboxControl = chakra2("span", {
  baseStyle: {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    verticalAlign: "top",
    userSelect: "none",
    flexShrink: 0
  }
});
var Label = chakra2("label", {
  baseStyle: {
    cursor: "pointer",
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    position: "relative"
  }
});
var Checkbox2 = forwardRef5(function(props, ref) {
  var group = useCheckboxGroupContext();
  var mergedProps = _extends25({}, group, props);
  var styles3 = useMultiStyleConfig("Checkbox", mergedProps);
  var ownProps = omitThemingProps2(props);
  var _ownProps$spacing = ownProps.spacing, spacing3 = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing, className = ownProps.className, children = ownProps.children, iconColor = ownProps.iconColor, iconSize = ownProps.iconSize, _ownProps$icon = ownProps.icon, icon = _ownProps$icon === void 0 ? React39.createElement(CheckboxIcon, null) : _ownProps$icon, isCheckedProp = ownProps.isChecked, _ownProps$isDisabled = ownProps.isDisabled, isDisabled2 = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled, onChangeProp = ownProps.onChange, inputProps = ownProps.inputProps, rest = _objectWithoutPropertiesLoose18(ownProps, _excluded17);
  var isChecked = isCheckedProp;
  if (group != null && group.value && ownProps.value) {
    isChecked = group.value.includes(ownProps.value);
  }
  var onChange = onChangeProp;
  if (group != null && group.onChange && ownProps.value) {
    onChange = callAll(group.onChange, onChangeProp);
  }
  var _useCheckbox = useCheckbox(_extends25({}, rest, {
    isDisabled: isDisabled2,
    isChecked,
    onChange
  })), state3 = _useCheckbox.state, getInputProps = _useCheckbox.getInputProps, getCheckboxProps = _useCheckbox.getCheckboxProps, getLabelProps = _useCheckbox.getLabelProps, getRootProps = _useCheckbox.getRootProps;
  var iconStyles = React39.useMemo(function() {
    return _extends25({
      opacity: state3.isChecked || state3.isIndeterminate ? 1 : 0,
      transform: state3.isChecked || state3.isIndeterminate ? "scale(1)" : "scale(0.95)",
      fontSize: iconSize,
      color: iconColor
    }, styles3.icon);
  }, [iconColor, iconSize, state3.isChecked, state3.isIndeterminate, styles3.icon]);
  var clonedIcon = React39.cloneElement(icon, {
    __css: iconStyles,
    isIndeterminate: state3.isIndeterminate,
    isChecked: state3.isChecked
  });
  return React39.createElement(Label, _extends25({
    __css: styles3.container,
    className: cx("chakra-checkbox", className)
  }, getRootProps()), React39.createElement("input", _extends25({
    className: "chakra-checkbox__input"
  }, getInputProps(inputProps, ref))), React39.createElement(CheckboxControl, _extends25({
    __css: styles3.control,
    className: "chakra-checkbox__control"
  }, getCheckboxProps()), clonedIcon), children && React39.createElement(chakra2.span, _extends25({
    className: "chakra-checkbox__label"
  }, getLabelProps(), {
    __css: _extends25({
      marginStart: spacing3
    }, styles3.label)
  }), children));
});
if (__DEV__) {
  Checkbox2.displayName = "Checkbox";
}

// node_modules/.pnpm/@chakra-ui+close-button@1.2.7_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/close-button/dist/chakra-ui-close-button.esm.js
var React40 = __toESM(require_react());
function _objectWithoutPropertiesLoose19(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends26() {
  _extends26 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends26.apply(this, arguments);
}
var _excluded18 = ["children", "isDisabled", "__css"];
var CloseIcon = function CloseIcon2(props) {
  return React40.createElement(Icon, _extends26({
    focusable: "false",
    "aria-hidden": true
  }, props), React40.createElement("path", {
    fill: "currentColor",
    d: "M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
  }));
};
var CloseButton2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("CloseButton", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, isDisabled2 = _omitThemingProps.isDisabled, __css = _omitThemingProps.__css, rest = _objectWithoutPropertiesLoose19(_omitThemingProps, _excluded18);
  var baseStyle44 = {
    outline: 0,
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0
  };
  return React40.createElement(chakra2.button, _extends26({
    type: "button",
    "aria-label": "Close",
    ref,
    disabled: isDisabled2,
    __css: _extends26({}, baseStyle44, styles3, __css)
  }, rest), children || React40.createElement(CloseIcon, {
    width: "1em",
    height: "1em"
  }));
});
if (__DEV__) {
  CloseButton2.displayName = "CloseButton";
}

// node_modules/.pnpm/@chakra-ui+counter@1.2.10_react@16.14.0/node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js
var import_react72 = __toESM(require_react());
function useCounter(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, onChange = _props.onChange, precisionProp = _props.precision, defaultValue = _props.defaultValue, valueProp = _props.value, _props$step = _props.step, stepProp = _props$step === void 0 ? 1 : _props$step, _props$min = _props.min, min2 = _props$min === void 0 ? minSafeInteger : _props$min, _props$max = _props.max, max2 = _props$max === void 0 ? maxSafeInteger : _props$max, _props$keepWithinRang = _props.keepWithinRange, keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;
  var onChangeProp = useCallbackRef(onChange);
  var _useState = (0, import_react72.useState)(function() {
    var _cast;
    if (defaultValue == null)
      return "";
    return (_cast = cast3(defaultValue, stepProp, precisionProp)) != null ? _cast : "";
  }), valueState = _useState[0], setValue = _useState[1];
  var _useControllableProp = useControllableProp(valueProp, valueState), isControlled = _useControllableProp[0], value = _useControllableProp[1];
  var decimalPlaces = getDecimalPlaces(parse5(value), stepProp);
  var precision = precisionProp != null ? precisionProp : decimalPlaces;
  var update = (0, import_react72.useCallback)(function(next2) {
    if (next2 === value)
      return;
    if (!isControlled) {
      setValue(next2.toString());
    }
    onChangeProp == null ? void 0 : onChangeProp(next2.toString(), parse5(next2));
  }, [onChangeProp, isControlled, value]);
  var clamp3 = (0, import_react72.useCallback)(function(value2) {
    var nextValue = value2;
    if (keepWithinRange) {
      nextValue = clampValue(nextValue, min2, max2);
    }
    return toPrecision(nextValue, precision);
  }, [precision, keepWithinRange, max2, min2]);
  var increment = (0, import_react72.useCallback)(function(step) {
    if (step === void 0) {
      step = stepProp;
    }
    var next2;
    if (value === "") {
      next2 = parse5(step);
    } else {
      next2 = parse5(value) + step;
    }
    next2 = clamp3(next2);
    update(next2);
  }, [clamp3, stepProp, update, value]);
  var decrement = (0, import_react72.useCallback)(function(step) {
    if (step === void 0) {
      step = stepProp;
    }
    var next2;
    if (value === "") {
      next2 = parse5(-step);
    } else {
      next2 = parse5(value) - step;
    }
    next2 = clamp3(next2);
    update(next2);
  }, [clamp3, stepProp, update, value]);
  var reset = (0, import_react72.useCallback)(function() {
    var next2;
    if (defaultValue == null) {
      next2 = "";
    } else {
      var _cast2;
      next2 = (_cast2 = cast3(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min2;
    }
    update(next2);
  }, [defaultValue, precisionProp, stepProp, update, min2]);
  var castValue = (0, import_react72.useCallback)(function(value2) {
    var _cast3;
    var nextValue = (_cast3 = cast3(value2, stepProp, precision)) != null ? _cast3 : min2;
    update(nextValue);
  }, [precision, stepProp, update, min2]);
  var valueAsNumber = parse5(value);
  var isOutOfRange = valueAsNumber > max2 || valueAsNumber < min2;
  var isAtMax = valueAsNumber === max2;
  var isAtMin = valueAsNumber === min2;
  return {
    isOutOfRange,
    isAtMax,
    isAtMin,
    precision,
    value,
    valueAsNumber,
    update,
    reset,
    increment,
    decrement,
    clamp: clamp3,
    cast: castValue,
    setValue
  };
}
function parse5(value) {
  return parseFloat(value.toString().replace(/[^\w.-]+/g, ""));
}
function getDecimalPlaces(value, step) {
  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));
}
function cast3(value, step, precision) {
  var parsedValue = parse5(value);
  if (Number.isNaN(parsedValue))
    return void 0;
  var decimalPlaces = getDecimalPlaces(parsedValue, step);
  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);
}

// node_modules/.pnpm/@chakra-ui+editable@1.4.2_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/editable/dist/chakra-ui-editable.esm.js
var React41 = __toESM(require_react());
var import_react73 = __toESM(require_react());
function _extends27() {
  _extends27 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends27.apply(this, arguments);
}
function _objectWithoutPropertiesLoose20(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$19 = ["onChange", "onCancel", "onSubmit", "value", "isDisabled", "defaultValue", "startWithEditView", "isPreviewFocusable", "submitOnBlur", "selectAllOnFocus", "placeholder", "onEdit"];
function useEditable(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, onChangeProp = _props.onChange, onCancelProp = _props.onCancel, onSubmitProp = _props.onSubmit, valueProp = _props.value, isDisabled2 = _props.isDisabled, defaultValue = _props.defaultValue, startWithEditView = _props.startWithEditView, _props$isPreviewFocus = _props.isPreviewFocusable, isPreviewFocusable = _props$isPreviewFocus === void 0 ? true : _props$isPreviewFocus, _props$submitOnBlur = _props.submitOnBlur, submitOnBlur = _props$submitOnBlur === void 0 ? true : _props$submitOnBlur, _props$selectAllOnFoc = _props.selectAllOnFocus, selectAllOnFocus = _props$selectAllOnFoc === void 0 ? true : _props$selectAllOnFoc, placeholder = _props.placeholder, onEditProp = _props.onEdit, htmlProps = _objectWithoutPropertiesLoose20(_props, _excluded$19);
  var defaultIsEditing = Boolean(startWithEditView && !isDisabled2);
  var _useState = (0, import_react73.useState)(defaultIsEditing), isEditing = _useState[0], setIsEditing = _useState[1];
  var _useControllableState = useControllableState({
    defaultValue: defaultValue || "",
    value: valueProp,
    onChange: onChangeProp
  }), value = _useControllableState[0], setValue = _useControllableState[1];
  var _useState2 = (0, import_react73.useState)(value), prevValue = _useState2[0], setPrevValue = _useState2[1];
  var inputRef = (0, import_react73.useRef)(null);
  var previewRef = (0, import_react73.useRef)(null);
  var editButtonRef = (0, import_react73.useRef)(null);
  var cancelButtonRef = (0, import_react73.useRef)(null);
  var submitButtonRef = (0, import_react73.useRef)(null);
  useFocusOnPointerDown({
    ref: inputRef,
    enabled: isEditing,
    elements: [cancelButtonRef, submitButtonRef]
  });
  var isInteractive = !isEditing && !isDisabled2;
  useSafeLayoutEffect(function() {
    if (isEditing) {
      focus(inputRef.current, {
        selectTextIfInput: selectAllOnFocus
      });
    }
  }, []);
  useUpdateEffect(function() {
    if (!isEditing) {
      focus(editButtonRef.current);
      return;
    }
    focus(inputRef.current, {
      selectTextIfInput: selectAllOnFocus
    });
    onEditProp == null ? void 0 : onEditProp();
  }, [isEditing, onEditProp, selectAllOnFocus]);
  var onEdit = (0, import_react73.useCallback)(function() {
    if (isInteractive) {
      setIsEditing(true);
    }
  }, [isInteractive]);
  var onUpdatePrevValue = (0, import_react73.useCallback)(function() {
    setPrevValue(value);
  }, [value]);
  var onCancel = (0, import_react73.useCallback)(function() {
    setIsEditing(false);
    setValue(prevValue);
    onCancelProp == null ? void 0 : onCancelProp(prevValue);
  }, [onCancelProp, setValue, prevValue]);
  var onSubmit = (0, import_react73.useCallback)(function() {
    setIsEditing(false);
    setPrevValue(value);
    onSubmitProp == null ? void 0 : onSubmitProp(value);
  }, [value, onSubmitProp]);
  var onChange = (0, import_react73.useCallback)(function(event) {
    setValue(event.currentTarget.value);
  }, [setValue]);
  var onKeyDown = (0, import_react73.useCallback)(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      Escape: onCancel,
      Enter: function Enter(event2) {
        if (!event2.shiftKey && !event2.metaKey) {
          onSubmit();
        }
      }
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [onCancel, onSubmit]);
  var onKeyDownWithoutSubmit = (0, import_react73.useCallback)(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      Escape: onCancel
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [onCancel]);
  var isValueEmpty = isEmpty(value);
  var onBlur3 = (0, import_react73.useCallback)(function(event) {
    var relatedTarget = getRelatedTarget(event);
    var targetIsCancel = contains(cancelButtonRef.current, relatedTarget);
    var targetIsSubmit = contains(submitButtonRef.current, relatedTarget);
    var isValidBlur = !targetIsCancel && !targetIsSubmit;
    if (isValidBlur && submitOnBlur) {
      onSubmit();
    }
  }, [submitOnBlur, onSubmit]);
  var getPreviewProps = (0, import_react73.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var tabIndex = isInteractive && isPreviewFocusable ? 0 : void 0;
    return _extends27({}, props2, {
      ref: mergeRefs(ref, previewRef),
      children: isValueEmpty ? placeholder : value,
      hidden: isEditing,
      "aria-disabled": ariaAttr(isDisabled2),
      tabIndex,
      onFocus: callAllHandlers(props2.onFocus, onEdit, onUpdatePrevValue)
    });
  }, [isDisabled2, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, onUpdatePrevValue, placeholder, value]);
  var getInputProps = (0, import_react73.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends27({}, props2, {
      hidden: !isEditing,
      placeholder,
      ref: mergeRefs(ref, inputRef),
      disabled: isDisabled2,
      "aria-disabled": ariaAttr(isDisabled2),
      value,
      onBlur: callAllHandlers(props2.onBlur, onBlur3),
      onChange: callAllHandlers(props2.onChange, onChange),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onFocus: callAllHandlers(props2.onFocus, onUpdatePrevValue)
    });
  }, [isDisabled2, isEditing, onBlur3, onChange, onKeyDown, onUpdatePrevValue, placeholder, value]);
  var getTextareaProps = (0, import_react73.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends27({}, props2, {
      hidden: !isEditing,
      placeholder,
      ref: mergeRefs(ref, inputRef),
      disabled: isDisabled2,
      "aria-disabled": ariaAttr(isDisabled2),
      value,
      onBlur: callAllHandlers(props2.onBlur, onBlur3),
      onChange: callAllHandlers(props2.onChange, onChange),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDownWithoutSubmit),
      onFocus: callAllHandlers(props2.onFocus, onUpdatePrevValue)
    });
  }, [isDisabled2, isEditing, onBlur3, onChange, onKeyDownWithoutSubmit, onUpdatePrevValue, placeholder, value]);
  var getEditButtonProps = (0, import_react73.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends27({
      "aria-label": "Edit"
    }, props2, {
      type: "button",
      onClick: callAllHandlers(props2.onClick, onEdit),
      ref: mergeRefs(ref, editButtonRef),
      disabled: isDisabled2
    });
  }, [onEdit, isDisabled2]);
  var getSubmitButtonProps = (0, import_react73.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends27({}, props2, {
      "aria-label": "Submit",
      ref: mergeRefs(submitButtonRef, ref),
      type: "button",
      onClick: callAllHandlers(props2.onClick, onSubmit),
      disabled: isDisabled2
    });
  }, [onSubmit, isDisabled2]);
  var getCancelButtonProps = (0, import_react73.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends27({
      "aria-label": "Cancel",
      id: "cancel"
    }, props2, {
      ref: mergeRefs(cancelButtonRef, ref),
      type: "button",
      onClick: callAllHandlers(props2.onClick, onCancel),
      disabled: isDisabled2
    });
  }, [onCancel, isDisabled2]);
  return {
    isEditing,
    isDisabled: isDisabled2,
    isValueEmpty,
    value,
    onEdit,
    onCancel,
    onSubmit,
    getPreviewProps,
    getInputProps,
    getTextareaProps,
    getEditButtonProps,
    getSubmitButtonProps,
    getCancelButtonProps,
    htmlProps
  };
}
var _excluded19 = ["htmlProps"];
var _createContext10 = createContext3({
  name: "EditableContext",
  errorMessage: "useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`"
});
var EditableProvider = _createContext10[0];
var useEditableContext = _createContext10[1];
var Editable2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Editable", props);
  var ownProps = omitThemingProps2(props);
  var _useEditable = useEditable(ownProps), htmlProps = _useEditable.htmlProps, context = _objectWithoutPropertiesLoose20(_useEditable, _excluded19);
  var isEditing = context.isEditing, onSubmit = context.onSubmit, onCancel = context.onCancel, onEdit = context.onEdit;
  var _className = cx("chakra-editable", props.className);
  var children = runIfFn(props.children, {
    isEditing,
    onSubmit,
    onCancel,
    onEdit
  });
  return React41.createElement(EditableProvider, {
    value: context
  }, React41.createElement(StylesProvider2, {
    value: styles3
  }, React41.createElement(chakra2.div, _extends27({
    ref
  }, htmlProps, {
    className: _className
  }), children)));
});
if (__DEV__) {
  Editable2.displayName = "Editable";
}
var commonStyles = {
  fontSize: "inherit",
  fontWeight: "inherit",
  textAlign: "inherit",
  bg: "transparent"
};
var EditablePreview = forwardRef5(function(props, ref) {
  var _useEditableContext = useEditableContext(), getPreviewProps = _useEditableContext.getPreviewProps;
  var styles3 = useStyles2();
  var previewProps = getPreviewProps(props, ref);
  var _className = cx("chakra-editable__preview", props.className);
  return React41.createElement(chakra2.span, _extends27({}, previewProps, {
    __css: _extends27({
      cursor: "text",
      display: "inline-block"
    }, commonStyles, styles3.preview),
    className: _className
  }));
});
if (__DEV__) {
  EditablePreview.displayName = "EditablePreview";
}
var EditableInput = forwardRef5(function(props, ref) {
  var _useEditableContext2 = useEditableContext(), getInputProps = _useEditableContext2.getInputProps;
  var styles3 = useStyles2();
  var inputProps = getInputProps(props, ref);
  var _className = cx("chakra-editable__input", props.className);
  return React41.createElement(chakra2.input, _extends27({}, inputProps, {
    __css: _extends27({
      outline: 0
    }, commonStyles, styles3.input),
    className: _className
  }));
});
if (__DEV__) {
  EditableInput.displayName = "EditableInput";
}
var EditableTextarea = forwardRef5(function(props, ref) {
  var _useEditableContext3 = useEditableContext(), getTextareaProps = _useEditableContext3.getTextareaProps;
  var styles3 = useStyles2();
  var textareaProps = getTextareaProps(props, ref);
  var _className = cx("chakra-editable__textarea", props.className);
  return React41.createElement(chakra2.textarea, _extends27({}, textareaProps, {
    __css: _extends27({
      outline: 0
    }, commonStyles, styles3.textarea),
    className: _className
  }));
});
if (__DEV__) {
  EditableTextarea.displayName = "EditableTextarea";
}
function useEditableState() {
  var _useEditableContext4 = useEditableContext(), isEditing = _useEditableContext4.isEditing, onSubmit = _useEditableContext4.onSubmit, onCancel = _useEditableContext4.onCancel, onEdit = _useEditableContext4.onEdit, isDisabled2 = _useEditableContext4.isDisabled;
  return {
    isEditing,
    onSubmit,
    onCancel,
    onEdit,
    isDisabled: isDisabled2
  };
}
function useEditableControls() {
  var _useEditableContext5 = useEditableContext(), isEditing = _useEditableContext5.isEditing, getEditButtonProps = _useEditableContext5.getEditButtonProps, getCancelButtonProps = _useEditableContext5.getCancelButtonProps, getSubmitButtonProps = _useEditableContext5.getSubmitButtonProps;
  return {
    isEditing,
    getEditButtonProps,
    getCancelButtonProps,
    getSubmitButtonProps
  };
}

// node_modules/.pnpm/@chakra-ui+control-box@1.1.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/control-box/dist/chakra-ui-control-box.esm.js
var React42 = __toESM(require_react());
function _extends28() {
  _extends28 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends28.apply(this, arguments);
}
function _objectWithoutPropertiesLoose21(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded20 = ["type", "_hover", "_invalid", "_disabled", "_focus", "_checked", "_child", "_checkedAndChild", "_checkedAndDisabled", "_checkedAndFocus", "_checkedAndHover", "children"];
var ControlBox = function ControlBox2(props) {
  var _extends210, _ref2;
  var _props$type = props.type, type = _props$type === void 0 ? "checkbox" : _props$type, _hover = props._hover, _invalid = props._invalid, _disabled = props._disabled, _focus = props._focus, _checked = props._checked, _props$_child = props._child, _child = _props$_child === void 0 ? {
    opacity: 0
  } : _props$_child, _props$_checkedAndChi = props._checkedAndChild, _checkedAndChild = _props$_checkedAndChi === void 0 ? {
    opacity: 1
  } : _props$_checkedAndChi, _checkedAndDisabled = props._checkedAndDisabled, _checkedAndFocus = props._checkedAndFocus, _checkedAndHover = props._checkedAndHover, children = props.children, rest = _objectWithoutPropertiesLoose21(props, _excluded20);
  var checkedAndDisabled = "input[type=" + type + "]:checked:disabled + &";
  var checkedAndHover = "input[type=" + type + "]:checked:hover:not(:disabled) + &";
  var checkedAndFocus = "input[type=" + type + "]:checked:focus + &";
  var disabled3 = "input[type=" + type + "]:disabled + &";
  var focus5 = "input[type=" + type + "]:focus + &";
  var hover3 = "input[type=" + type + "]:hover:not(:disabled):not(:checked) + &";
  var checked3 = "input[type=" + type + "]:checked + &, input[type=" + type + "][aria-checked=mixed] + &";
  var invalid3 = "input[type=" + type + "][aria-invalid=true] + &";
  var child = "& > *";
  return React42.createElement(chakra2.div, _extends28({}, rest, {
    "aria-hidden": true,
    __css: (_ref2 = {
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      transitionProperty: "common",
      transitionDuration: "fast",
      flexShrink: 0
    }, _ref2[focus5] = _focus, _ref2[hover3] = _hover, _ref2[disabled3] = _disabled, _ref2[invalid3] = _invalid, _ref2[checkedAndDisabled] = _checkedAndDisabled, _ref2[checkedAndFocus] = _checkedAndFocus, _ref2[checkedAndHover] = _checkedAndHover, _ref2[child] = _child, _ref2[checked3] = _extends28({}, _checked, (_extends210 = {}, _extends210[child] = _checkedAndChild, _extends210)), _ref2)
  }), children);
};
if (__DEV__) {
  ControlBox.displayName = "ControlBox";
}

// node_modules/.pnpm/@chakra-ui+input@1.4.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/input/dist/chakra-ui-input.esm.js
var React43 = __toESM(require_react());
function _extends29() {
  _extends29 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends29.apply(this, arguments);
}
function _objectWithoutPropertiesLoose22(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$33 = ["htmlSize"];
var Input2 = forwardRef5(function(props, ref) {
  var htmlSize = props.htmlSize, rest = _objectWithoutPropertiesLoose22(props, _excluded$33);
  var styles3 = useMultiStyleConfig("Input", rest);
  var ownProps = omitThemingProps2(rest);
  var input = useFormControl(ownProps);
  var _className = cx("chakra-input", props.className);
  return React43.createElement(chakra2.input, _extends29({
    size: htmlSize
  }, input, {
    __css: styles3.field,
    ref,
    className: _className
  }));
});
if (__DEV__) {
  Input2.displayName = "Input";
}
Input2.id = "Input";
var _excluded$25 = ["placement"];
var placements = {
  left: {
    marginEnd: "-1px",
    borderEndRadius: 0,
    borderEndColor: "transparent"
  },
  right: {
    marginStart: "-1px",
    borderStartRadius: 0,
    borderStartColor: "transparent"
  }
};
var StyledAddon = chakra2("div", {
  baseStyle: {
    flex: "0 0 auto",
    width: "auto",
    display: "flex",
    alignItems: "center",
    whiteSpace: "nowrap"
  }
});
var InputAddon = forwardRef5(function(props, ref) {
  var _placements$placement;
  var _props$placement = props.placement, placement = _props$placement === void 0 ? "left" : _props$placement, rest = _objectWithoutPropertiesLoose22(props, _excluded$25);
  var placementStyles = (_placements$placement = placements[placement]) != null ? _placements$placement : {};
  var styles3 = useStyles2();
  return React43.createElement(StyledAddon, _extends29({
    ref
  }, rest, {
    __css: _extends29({}, styles3.addon, placementStyles)
  }));
});
if (__DEV__) {
  InputAddon.displayName = "InputAddon";
}
var InputLeftAddon = forwardRef5(function(props, ref) {
  return React43.createElement(InputAddon, _extends29({
    ref,
    placement: "left"
  }, props, {
    className: cx("chakra-input__left-addon", props.className)
  }));
});
if (__DEV__) {
  InputLeftAddon.displayName = "InputLeftAddon";
}
InputLeftAddon.id = "InputLeftAddon";
var InputRightAddon = forwardRef5(function(props, ref) {
  return React43.createElement(InputAddon, _extends29({
    ref,
    placement: "right"
  }, props, {
    className: cx("chakra-input__right-addon", props.className)
  }));
});
if (__DEV__) {
  InputRightAddon.displayName = "InputRightAddon";
}
InputRightAddon.id = "InputRightAddon";
var _excluded$110 = ["children", "className"];
var InputGroup = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Input", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose22(_omitThemingProps, _excluded$110);
  var _className = cx("chakra-input__group", className);
  var groupStyles = {};
  var validChildren = getValidChildren(children);
  var input = styles3.field;
  validChildren.forEach(function(child) {
    if (!styles3)
      return;
    if (input && child.type.id === "InputLeftElement") {
      var _input$height;
      groupStyles.paddingStart = (_input$height = input.height) != null ? _input$height : input.h;
    }
    if (input && child.type.id === "InputRightElement") {
      var _input$height2;
      groupStyles.paddingEnd = (_input$height2 = input.height) != null ? _input$height2 : input.h;
    }
    if (child.type.id === "InputRightAddon") {
      groupStyles.borderEndRadius = 0;
    }
    if (child.type.id === "InputLeftAddon") {
      groupStyles.borderStartRadius = 0;
    }
  });
  var clones = validChildren.map(function(child) {
    var _child$props, _child$props2;
    var theming = filterUndefined({
      size: ((_child$props = child.props) == null ? void 0 : _child$props.size) || props.size,
      variant: ((_child$props2 = child.props) == null ? void 0 : _child$props2.variant) || props.variant
    });
    return child.type.id !== "Input" ? React43.cloneElement(child, theming) : React43.cloneElement(child, Object.assign(theming, groupStyles, child.props));
  });
  return React43.createElement(chakra2.div, _extends29({
    className: _className,
    ref,
    __css: {
      width: "100%",
      display: "flex",
      position: "relative"
    }
  }, rest), React43.createElement(StylesProvider2, {
    value: styles3
  }, clones));
});
if (__DEV__) {
  InputGroup.displayName = "InputGroup";
}
var _excluded21 = ["placement"];
var _excluded29 = ["className"];
var _excluded34 = ["className"];
var StyledElement = chakra2("div", {
  baseStyle: {
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    top: "0",
    zIndex: 2
  }
});
var InputElement = forwardRef5(function(props, ref) {
  var _input$height, _input$height2, _extends210;
  var _props$placement = props.placement, placement = _props$placement === void 0 ? "left" : _props$placement, rest = _objectWithoutPropertiesLoose22(props, _excluded21);
  var styles3 = useStyles2();
  var input = styles3.field;
  var attr = placement === "left" ? "insetStart" : "insetEnd";
  var elementStyles = _extends29((_extends210 = {}, _extends210[attr] = "0", _extends210.width = (_input$height = input == null ? void 0 : input.height) != null ? _input$height : input == null ? void 0 : input.h, _extends210.height = (_input$height2 = input == null ? void 0 : input.height) != null ? _input$height2 : input == null ? void 0 : input.h, _extends210.fontSize = input == null ? void 0 : input.fontSize, _extends210), styles3.element);
  return React43.createElement(StyledElement, _extends29({
    ref,
    __css: elementStyles
  }, rest));
});
InputElement.id = "InputElement";
if (__DEV__) {
  InputElement.displayName = "InputElement";
}
var InputLeftElement = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose22(props, _excluded29);
  var _className = cx("chakra-input__left-element", className);
  return React43.createElement(InputElement, _extends29({
    ref,
    placement: "left",
    className: _className
  }, rest));
});
InputLeftElement.id = "InputLeftElement";
if (__DEV__) {
  InputLeftElement.displayName = "InputLeftElement";
}
var InputRightElement = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose22(props, _excluded34);
  var _className = cx("chakra-input__right-element", className);
  return React43.createElement(InputElement, _extends29({
    ref,
    placement: "right",
    className: _className
  }, rest));
});
InputRightElement.id = "InputRightElement";
if (__DEV__) {
  InputRightElement.displayName = "InputRightElement";
}

// node_modules/.pnpm/@chakra-ui+layout@1.8.0_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/layout/dist/chakra-ui-layout.esm.js
var React44 = __toESM(require_react());
function _extends30() {
  _extends30 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends30.apply(this, arguments);
}
function _objectWithoutPropertiesLoose23(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$h = ["ratio", "children", "className"];
var AspectRatio = forwardRef5(function(props, ref) {
  var _props$ratio = props.ratio, ratio = _props$ratio === void 0 ? 4 / 3 : _props$ratio, children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose23(props, _excluded$h);
  var child = React44.Children.only(children);
  var _className = cx("chakra-aspect-ratio", className);
  return React44.createElement(chakra2.div, _extends30({
    ref,
    position: "relative",
    className: _className,
    _before: {
      height: 0,
      content: '""',
      display: "block",
      paddingBottom: mapResponsive(ratio, function(r) {
        return 1 / r * 100 + "%";
      })
    },
    __css: {
      "& > *:not(style)": {
        overflow: "hidden",
        position: "absolute",
        top: "0",
        right: "0",
        bottom: "0",
        left: "0",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        width: "100%",
        height: "100%"
      },
      "& > img, & > video": {
        objectFit: "cover"
      }
    }
  }, rest), child);
});
if (__DEV__) {
  AspectRatio.displayName = "AspectRatio";
}
var _excluded$g = ["className"];
var Badge2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Badge", props);
  var _omitThemingProps = omitThemingProps2(props);
  _omitThemingProps.className;
  var rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$g);
  return React44.createElement(chakra2.span, _extends30({
    ref,
    className: cx("chakra-badge", props.className)
  }, rest, {
    __css: _extends30({
      display: "inline-block",
      whiteSpace: "nowrap",
      verticalAlign: "middle"
    }, styles3)
  }));
});
if (__DEV__) {
  Badge2.displayName = "Badge";
}
var _excluded$f = ["size", "centerContent"];
var _excluded2$5 = ["size"];
var Box = chakra2("div");
if (__DEV__) {
  Box.displayName = "Box";
}
var Square = forwardRef5(function(props, ref) {
  var size3 = props.size, _props$centerContent = props.centerContent, centerContent = _props$centerContent === void 0 ? true : _props$centerContent, rest = _objectWithoutPropertiesLoose23(props, _excluded$f);
  var styles3 = centerContent ? {
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  } : {};
  return React44.createElement(Box, _extends30({
    ref,
    boxSize: size3,
    __css: _extends30({}, styles3, {
      flexShrink: 0,
      flexGrow: 0
    })
  }, rest));
});
if (__DEV__) {
  Square.displayName = "Square";
}
var Circle = forwardRef5(function(props, ref) {
  var size3 = props.size, rest = _objectWithoutPropertiesLoose23(props, _excluded2$5);
  return React44.createElement(Square, _extends30({
    size: size3,
    ref,
    borderRadius: "9999px"
  }, rest));
});
if (__DEV__) {
  Circle.displayName = "Circle";
}
var _excluded$e = ["axis"];
var Center = chakra2("div", {
  baseStyle: {
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }
});
if (__DEV__) {
  Center.displayName = "Center";
}
var centerStyles = {
  horizontal: {
    insetStart: "50%",
    transform: "translateX(-50%)"
  },
  vertical: {
    top: "50%",
    transform: "translateY(-50%)"
  },
  both: {
    insetStart: "50%",
    top: "50%",
    transform: "translate(-50%, -50%)"
  }
};
var AbsoluteCenter = forwardRef5(function(props, ref) {
  var _props$axis = props.axis, axis = _props$axis === void 0 ? "both" : _props$axis, rest = _objectWithoutPropertiesLoose23(props, _excluded$e);
  return React44.createElement(chakra2.div, _extends30({
    ref,
    __css: centerStyles[axis]
  }, rest, {
    position: "absolute"
  }));
});
var _excluded$d = ["className"];
var Code2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Code", props);
  var _omitThemingProps = omitThemingProps2(props);
  _omitThemingProps.className;
  var rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$d);
  return React44.createElement(chakra2.code, _extends30({
    ref,
    className: cx("chakra-code", props.className)
  }, rest, {
    __css: _extends30({
      display: "inline-block"
    }, styles3)
  }));
});
if (__DEV__) {
  Code2.displayName = "Code";
}
var _excluded$c = ["className", "centerContent"];
var Container4 = forwardRef5(function(props, ref) {
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, centerContent = _omitThemingProps.centerContent, rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$c);
  var styles3 = useStyleConfig2("Container", props);
  return React44.createElement(chakra2.div, _extends30({
    ref,
    className: cx("chakra-container", className)
  }, rest, {
    __css: _extends30({}, styles3, centerContent && {
      display: "flex",
      flexDirection: "column",
      alignItems: "center"
    })
  }));
});
if (__DEV__) {
  Container4.displayName = "Container";
}
var _excluded$b = ["borderLeftWidth", "borderBottomWidth", "borderTopWidth", "borderRightWidth", "borderWidth", "borderStyle", "borderColor"];
var _excluded2$4 = ["className", "orientation", "__css"];
var Divider2 = forwardRef5(function(props, ref) {
  var _useStyleConfig = useStyleConfig2("Divider", props), borderLeftWidth = _useStyleConfig.borderLeftWidth, borderBottomWidth = _useStyleConfig.borderBottomWidth, borderTopWidth = _useStyleConfig.borderTopWidth, borderRightWidth = _useStyleConfig.borderRightWidth, borderWidth = _useStyleConfig.borderWidth, borderStyle = _useStyleConfig.borderStyle, borderColor = _useStyleConfig.borderColor, styles3 = _objectWithoutPropertiesLoose23(_useStyleConfig, _excluded$b);
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, _omitThemingProps$ori = _omitThemingProps.orientation, orientation = _omitThemingProps$ori === void 0 ? "horizontal" : _omitThemingProps$ori, __css = _omitThemingProps.__css, rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded2$4);
  var dividerStyles = {
    vertical: {
      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || "1px",
      height: "100%"
    },
    horizontal: {
      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || "1px",
      width: "100%"
    }
  };
  return React44.createElement(chakra2.hr, _extends30({
    ref,
    "aria-orientation": orientation
  }, rest, {
    __css: _extends30({}, styles3, {
      border: "0",
      borderColor,
      borderStyle
    }, dividerStyles[orientation], __css),
    className: cx("chakra-divider", className)
  }));
});
if (__DEV__) {
  Divider2.displayName = "Divider";
}
var _excluded$a = ["direction", "align", "justify", "wrap", "basis", "grow", "shrink"];
var Flex = forwardRef5(function(props, ref) {
  var direction3 = props.direction, align = props.align, justify = props.justify, wrap6 = props.wrap, basis = props.basis, grow = props.grow, shrink3 = props.shrink, rest = _objectWithoutPropertiesLoose23(props, _excluded$a);
  var styles3 = {
    display: "flex",
    flexDirection: direction3,
    alignItems: align,
    justifyContent: justify,
    flexWrap: wrap6,
    flexBasis: basis,
    flexGrow: grow,
    flexShrink: shrink3
  };
  return React44.createElement(chakra2.div, _extends30({
    ref,
    __css: styles3
  }, rest));
});
if (__DEV__) {
  Flex.displayName = "Flex";
}
var _excluded$9 = ["area", "templateAreas", "gap", "rowGap", "columnGap", "column", "row", "autoFlow", "autoRows", "templateRows", "autoColumns", "templateColumns"];
var _excluded2$3 = ["area", "colSpan", "colStart", "colEnd", "rowEnd", "rowSpan", "rowStart"];
var Grid = forwardRef5(function(props, ref) {
  var area = props.area, templateAreas = props.templateAreas, gap = props.gap, rowGap = props.rowGap, columnGap = props.columnGap, column2 = props.column, row = props.row, autoFlow = props.autoFlow, autoRows = props.autoRows, templateRows = props.templateRows, autoColumns = props.autoColumns, templateColumns = props.templateColumns, rest = _objectWithoutPropertiesLoose23(props, _excluded$9);
  var styles3 = {
    display: "grid",
    gridArea: area,
    gridTemplateAreas: templateAreas,
    gridGap: gap,
    gridRowGap: rowGap,
    gridColumnGap: columnGap,
    gridAutoColumns: autoColumns,
    gridColumn: column2,
    gridRow: row,
    gridAutoFlow: autoFlow,
    gridAutoRows: autoRows,
    gridTemplateRows: templateRows,
    gridTemplateColumns: templateColumns
  };
  return React44.createElement(chakra2.div, _extends30({
    ref,
    __css: styles3
  }, rest));
});
if (__DEV__) {
  Grid.displayName = "Grid";
}
function spanFn(span) {
  return mapResponsive(span, function(value) {
    return value === "auto" ? "auto" : "span " + value + "/span " + value;
  });
}
var GridItem = forwardRef5(function(props, ref) {
  var area = props.area, colSpan = props.colSpan, colStart = props.colStart, colEnd = props.colEnd, rowEnd = props.rowEnd, rowSpan = props.rowSpan, rowStart = props.rowStart, rest = _objectWithoutPropertiesLoose23(props, _excluded2$3);
  var styles3 = filterUndefined({
    gridArea: area,
    gridColumn: spanFn(colSpan),
    gridRow: spanFn(rowSpan),
    gridColumnStart: colStart,
    gridColumnEnd: colEnd,
    gridRowStart: rowStart,
    gridRowEnd: rowEnd
  });
  return React44.createElement(chakra2.div, _extends30({
    ref,
    __css: styles3
  }, rest));
});
var _excluded$8 = ["className"];
var Heading2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Heading", props);
  var _omitThemingProps = omitThemingProps2(props);
  _omitThemingProps.className;
  var rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$8);
  return React44.createElement(chakra2.h2, _extends30({
    ref,
    className: cx("chakra-heading", props.className)
  }, rest, {
    __css: styles3
  }));
});
if (__DEV__) {
  Heading2.displayName = "Heading";
}
var _excluded$7 = ["className"];
var Kbd2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Kbd", props);
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$7);
  return React44.createElement(chakra2.kbd, _extends30({
    ref,
    className: cx("chakra-kbd", className)
  }, rest, {
    __css: _extends30({
      fontFamily: "mono"
    }, styles3)
  }));
});
if (__DEV__) {
  Kbd2.displayName = "Kbd";
}
var _excluded$6 = ["className", "isExternal"];
var Link2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Link", props);
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, isExternal = _omitThemingProps.isExternal, rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$6);
  return React44.createElement(chakra2.a, _extends30({
    target: isExternal ? "_blank" : void 0,
    rel: isExternal ? "noopener" : void 0,
    ref,
    className: cx("chakra-link", className)
  }, rest, {
    __css: styles3
  }));
});
if (__DEV__) {
  Link2.displayName = "Link";
}
var _excluded$5 = ["children", "styleType", "stylePosition", "spacing"];
var _excluded2$2 = ["as"];
var _excluded35 = ["as"];
var _createContext11 = createContext3({
  name: "StylesContext",
  errorMessage: "useStyles: `styles` is undefined. Seems you forgot to wrap the components in a `<*List />` "
});
var StylesProvider3 = _createContext11[0];
var useStyles3 = _createContext11[1];
var List2 = forwardRef5(function(props, ref) {
  var _ref2;
  var styles3 = useMultiStyleConfig("List", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, _omitThemingProps$sty = _omitThemingProps.styleType, styleType = _omitThemingProps$sty === void 0 ? "none" : _omitThemingProps$sty, stylePosition = _omitThemingProps.stylePosition, spacing3 = _omitThemingProps.spacing, rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$5);
  var validChildren = getValidChildren(children);
  var selector2 = "& > *:not(style) ~ *:not(style)";
  var spacingStyle = spacing3 ? (_ref2 = {}, _ref2[selector2] = {
    mt: spacing3
  }, _ref2) : {};
  return React44.createElement(StylesProvider3, {
    value: styles3
  }, React44.createElement(chakra2.ul, _extends30({
    ref,
    listStyleType: styleType,
    listStylePosition: stylePosition,
    role: "list",
    __css: _extends30({}, styles3.container, spacingStyle)
  }, rest), validChildren));
});
if (__DEV__) {
  List2.displayName = "List";
}
var OrderedList = forwardRef5(function(props, ref) {
  props.as;
  var rest = _objectWithoutPropertiesLoose23(props, _excluded2$2);
  return React44.createElement(List2, _extends30({
    ref,
    as: "ol",
    styleType: "decimal",
    marginStart: "1em"
  }, rest));
});
if (__DEV__) {
  OrderedList.displayName = "OrderedList";
}
var UnorderedList = forwardRef5(function(props, ref) {
  props.as;
  var rest = _objectWithoutPropertiesLoose23(props, _excluded35);
  return React44.createElement(List2, _extends30({
    ref,
    as: "ul",
    styleType: "initial",
    marginStart: "1em"
  }, rest));
});
if (__DEV__) {
  UnorderedList.displayName = "UnorderedList";
}
var ListItem = forwardRef5(function(props, ref) {
  var styles3 = useStyles3();
  return React44.createElement(chakra2.li, _extends30({
    ref
  }, props, {
    __css: styles3.item
  }));
});
if (__DEV__) {
  ListItem.displayName = "ListItem";
}
var ListIcon = forwardRef5(function(props, ref) {
  var styles3 = useStyles3();
  return React44.createElement(Icon, _extends30({
    ref,
    role: "presentation"
  }, props, {
    __css: styles3.icon
  }));
});
if (__DEV__) {
  ListIcon.displayName = "ListIcon";
}
var _excluded$43 = ["columns", "spacingX", "spacingY", "spacing", "minChildWidth"];
var SimpleGrid = forwardRef5(function(props, ref) {
  var columns = props.columns, spacingX = props.spacingX, spacingY = props.spacingY, spacing3 = props.spacing, minChildWidth = props.minChildWidth, rest = _objectWithoutPropertiesLoose23(props, _excluded$43);
  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);
  return React44.createElement(Grid, _extends30({
    ref,
    gap: spacing3,
    columnGap: spacingX,
    rowGap: spacingY,
    templateColumns
  }, rest));
});
if (__DEV__) {
  SimpleGrid.displayName = "SimpleGrid";
}
function toPx(n) {
  return isNumber(n) ? n + "px" : n;
}
function widthToColumns(width) {
  return mapResponsive(width, function(value) {
    return isNull(value) ? null : "repeat(auto-fit, minmax(" + toPx(value) + ", 1fr))";
  });
}
function countToColumns(count) {
  return mapResponsive(count, function(value) {
    return isNull(value) ? null : "repeat(" + value + ", minmax(0, 1fr))";
  });
}
var Spacer = chakra2("div", {
  baseStyle: {
    flex: 1,
    justifySelf: "stretch",
    alignSelf: "stretch"
  }
});
if (__DEV__) {
  Spacer.displayName = "Spacer";
}
var selector = "& > *:not(style) ~ *:not(style)";
function getStackStyles(options) {
  var _ref2;
  var spacing3 = options.spacing, direction3 = options.direction;
  var directionStyles = {
    column: {
      marginTop: spacing3,
      marginEnd: 0,
      marginBottom: 0,
      marginStart: 0
    },
    row: {
      marginTop: 0,
      marginEnd: 0,
      marginBottom: 0,
      marginStart: spacing3
    },
    "column-reverse": {
      marginTop: 0,
      marginEnd: 0,
      marginBottom: spacing3,
      marginStart: 0
    },
    "row-reverse": {
      marginTop: 0,
      marginEnd: spacing3,
      marginBottom: 0,
      marginStart: 0
    }
  };
  return _ref2 = {
    flexDirection: direction3
  }, _ref2[selector] = mapResponsive(direction3, function(value) {
    return directionStyles[value];
  }), _ref2;
}
function getDividerStyles(options) {
  var spacing3 = options.spacing, direction3 = options.direction;
  var dividerStyles = {
    column: {
      my: spacing3,
      mx: 0,
      borderLeftWidth: 0,
      borderBottomWidth: "1px"
    },
    "column-reverse": {
      my: spacing3,
      mx: 0,
      borderLeftWidth: 0,
      borderBottomWidth: "1px"
    },
    row: {
      mx: spacing3,
      my: 0,
      borderLeftWidth: "1px",
      borderBottomWidth: 0
    },
    "row-reverse": {
      mx: spacing3,
      my: 0,
      borderLeftWidth: "1px",
      borderBottomWidth: 0
    }
  };
  return {
    "&": mapResponsive(direction3, function(value) {
      return dividerStyles[value];
    })
  };
}
var _excluded$34 = ["isInline", "direction", "align", "justify", "spacing", "wrap", "children", "divider", "className", "shouldWrapChildren"];
var StackDivider = function StackDivider2(props) {
  return React44.createElement(chakra2.div, _extends30({
    className: "chakra-stack__divider"
  }, props, {
    __css: _extends30({}, props["__css"], {
      borderWidth: 0,
      alignSelf: "stretch",
      borderColor: "inherit",
      width: "auto",
      height: "auto"
    })
  }));
};
var StackItem = function StackItem2(props) {
  return React44.createElement(chakra2.div, _extends30({
    className: "chakra-stack__item"
  }, props, {
    __css: _extends30({
      display: "inline-block",
      flex: "0 0 auto",
      minWidth: 0
    }, props["__css"])
  }));
};
var Stack = forwardRef5(function(props, ref) {
  var _ref2;
  var isInline = props.isInline, directionProp = props.direction, align = props.align, justify = props.justify, _props$spacing = props.spacing, spacing3 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, wrap6 = props.wrap, children = props.children, divider2 = props.divider, className = props.className, shouldWrapChildren = props.shouldWrapChildren, rest = _objectWithoutPropertiesLoose23(props, _excluded$34);
  var direction3 = isInline ? "row" : directionProp != null ? directionProp : "column";
  var styles3 = React44.useMemo(function() {
    return getStackStyles({
      direction: direction3,
      spacing: spacing3
    });
  }, [direction3, spacing3]);
  var dividerStyle = React44.useMemo(function() {
    return getDividerStyles({
      spacing: spacing3,
      direction: direction3
    });
  }, [spacing3, direction3]);
  var hasDivider = !!divider2;
  var shouldUseChildren = !shouldWrapChildren && !hasDivider;
  var validChildren = getValidChildren(children);
  var clones = shouldUseChildren ? validChildren : validChildren.map(function(child, index2) {
    var key = typeof child.key !== "undefined" ? child.key : index2;
    var isLast = index2 + 1 === validChildren.length;
    var wrappedChild = React44.createElement(StackItem, {
      key
    }, child);
    var _child = shouldWrapChildren ? wrappedChild : child;
    if (!hasDivider)
      return _child;
    var clonedDivider = React44.cloneElement(divider2, {
      __css: dividerStyle
    });
    var _divider = isLast ? null : clonedDivider;
    return React44.createElement(React44.Fragment, {
      key
    }, _child, _divider);
  });
  var _className = cx("chakra-stack", className);
  return React44.createElement(chakra2.div, _extends30({
    ref,
    display: "flex",
    alignItems: align,
    justifyContent: justify,
    flexDirection: styles3.flexDirection,
    flexWrap: wrap6,
    className: _className,
    __css: hasDivider ? {} : (_ref2 = {}, _ref2[selector] = styles3[selector], _ref2)
  }, rest), clones);
});
if (__DEV__) {
  Stack.displayName = "Stack";
}
var HStack = forwardRef5(function(props, ref) {
  return React44.createElement(Stack, _extends30({
    align: "center"
  }, props, {
    direction: "row",
    ref
  }));
});
if (__DEV__) {
  HStack.displayName = "HStack";
}
var VStack = forwardRef5(function(props, ref) {
  return React44.createElement(Stack, _extends30({
    align: "center"
  }, props, {
    direction: "column",
    ref
  }));
});
if (__DEV__) {
  VStack.displayName = "VStack";
}
var _excluded$26 = ["className", "align", "decoration", "casing"];
var Text = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Text", props);
  var _omitThemingProps = omitThemingProps2(props);
  _omitThemingProps.className;
  _omitThemingProps.align;
  _omitThemingProps.decoration;
  _omitThemingProps.casing;
  var rest = _objectWithoutPropertiesLoose23(_omitThemingProps, _excluded$26);
  var aliasedProps = filterUndefined({
    textAlign: props.align,
    textDecoration: props.decoration,
    textTransform: props.casing
  });
  return React44.createElement(chakra2.p, _extends30({
    ref,
    className: cx("chakra-text", props.className)
  }, aliasedProps, rest, {
    __css: styles3
  }));
});
if (__DEV__) {
  Text.displayName = "Text";
}
var _excluded$111 = ["spacing", "spacingX", "spacingY", "children", "justify", "direction", "align", "className", "shouldWrapChildren"];
var _excluded2$13 = ["className"];
var Wrap = forwardRef5(function(props, ref) {
  var _props$spacing = props.spacing, spacing3 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, spacingX = props.spacingX, spacingY = props.spacingY, children = props.children, justify = props.justify, direction3 = props.direction, align = props.align, className = props.className, shouldWrapChildren = props.shouldWrapChildren, rest = _objectWithoutPropertiesLoose23(props, _excluded$111);
  var styles3 = React44.useMemo(function() {
    var _spacingX$spacingY = {
      spacingX,
      spacingY
    }, _spacingX$spacingY$sp = _spacingX$spacingY.spacingX, x = _spacingX$spacingY$sp === void 0 ? spacing3 : _spacingX$spacingY$sp, _spacingX$spacingY$sp2 = _spacingX$spacingY.spacingY, y = _spacingX$spacingY$sp2 === void 0 ? spacing3 : _spacingX$spacingY$sp2;
    return {
      "--chakra-wrap-x-spacing": function chakraWrapXSpacing(theme3) {
        return mapResponsive(x, function(value) {
          return tokenToCSSVar3("space", value)(theme3);
        });
      },
      "--chakra-wrap-y-spacing": function chakraWrapYSpacing(theme3) {
        return mapResponsive(y, function(value) {
          return tokenToCSSVar3("space", value)(theme3);
        });
      },
      "--wrap-x-spacing": "calc(var(--chakra-wrap-x-spacing) / 2)",
      "--wrap-y-spacing": "calc(var(--chakra-wrap-y-spacing) / 2)",
      display: "flex",
      flexWrap: "wrap",
      justifyContent: justify,
      alignItems: align,
      flexDirection: direction3,
      listStyleType: "none",
      padding: "0",
      margin: "calc(var(--wrap-y-spacing) * -1) calc(var(--wrap-x-spacing) * -1)",
      "& > *:not(style)": {
        margin: "var(--wrap-y-spacing) var(--wrap-x-spacing)"
      }
    };
  }, [spacing3, spacingX, spacingY, justify, align, direction3]);
  var childrenToRender = shouldWrapChildren ? React44.Children.map(children, function(child, index2) {
    return React44.createElement(WrapItem, {
      key: index2
    }, child);
  }) : children;
  return React44.createElement(chakra2.div, _extends30({
    ref,
    className: cx("chakra-wrap", className)
  }, rest), React44.createElement(chakra2.ul, {
    className: "chakra-wrap__list",
    __css: styles3
  }, childrenToRender));
});
if (__DEV__) {
  Wrap.displayName = "Wrap";
}
var WrapItem = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose23(props, _excluded2$13);
  return React44.createElement(chakra2.li, _extends30({
    ref,
    __css: {
      display: "flex",
      alignItems: "flex-start"
    },
    className: cx("chakra-wrap__listitem", className)
  }, rest));
});
if (__DEV__) {
  WrapItem.displayName = "WrapItem";
}
var _excluded30 = ["isExternal", "target", "rel", "className"];
var _excluded210 = ["className"];
var LinkOverlay = forwardRef5(function(props, ref) {
  var isExternal = props.isExternal, target = props.target, rel = props.rel, className = props.className, rest = _objectWithoutPropertiesLoose23(props, _excluded30);
  return React44.createElement(chakra2.a, _extends30({}, rest, {
    ref,
    className: cx("chakra-linkbox__overlay", className),
    rel: isExternal ? "noopener noreferrer" : rel,
    target: isExternal ? "_blank" : target,
    __css: {
      position: "static",
      "&::before": {
        content: "''",
        cursor: "inherit",
        display: "block",
        position: "absolute",
        top: 0,
        left: 0,
        zIndex: 1,
        width: "100%",
        height: "100%"
      }
    }
  }));
});
var LinkBox = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose23(props, _excluded210);
  return React44.createElement(chakra2.div, _extends30({
    ref,
    position: "relative"
  }, rest, {
    className: cx("chakra-linkbox", className),
    __css: {
      "a[href]:not(.chakra-linkbox__overlay), abbr[title], button": {
        position: "relative",
        zIndex: 1
      }
    }
  }));
});

// node_modules/.pnpm/@chakra-ui+media-query@2.0.4_xdgzsz6t5qhemgncqqjddm2md4/node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js
var React45 = __toESM(require_react());
var import_react74 = __toESM(require_react());
var useSafeLayoutEffect4 = isBrowser2 ? React45.useLayoutEffect : React45.useEffect;
function useMediaQuery(query) {
  var env3 = useEnvironment();
  var queries2 = Array.isArray(query) ? query : [query];
  var isSupported = isBrowser2 && "matchMedia" in env3.window;
  var _React$useState = React45.useState(queries2.map(function(query2) {
    return isSupported ? !!env3.window.matchMedia(query2).matches : false;
  })), matches = _React$useState[0], setMatches = _React$useState[1];
  useSafeLayoutEffect4(function() {
    if (!isSupported)
      return void 0;
    var mediaQueryList = queries2.map(function(query2) {
      return env3.window.matchMedia(query2);
    });
    var listenerList = mediaQueryList.map(function(_, index2) {
      var listener = function listener2(mqlEvent) {
        var queryIndex = mediaQueryList.findIndex(function(mediaQuery) {
          return mediaQuery.media === mqlEvent.media;
        });
        setMatches(function(matches2) {
          var currentMatches = matches2.map(function(x) {
            return x;
          });
          currentMatches[queryIndex] = mqlEvent.matches;
          return currentMatches;
        });
      };
      if (typeof mediaQueryList[index2].addEventListener === "function") {
        mediaQueryList[index2].addEventListener("change", listener);
      } else {
        mediaQueryList[index2].addListener(listener);
      }
      return listener;
    });
    return function() {
      mediaQueryList.forEach(function(_, index2) {
        if (typeof mediaQueryList[index2].removeEventListener === "function") {
          mediaQueryList[index2].removeEventListener("change", listenerList[index2]);
        } else {
          mediaQueryList[index2].removeListener(listenerList[index2]);
        }
      });
    };
  }, []);
  return matches;
}
var Visibility = function Visibility2(props) {
  var breakpoint = props.breakpoint, hide2 = props.hide, children = props.children;
  var _useMediaQuery = useMediaQuery(breakpoint), show = _useMediaQuery[0];
  var isVisible = hide2 ? !show : show;
  var rendered = isVisible ? children : null;
  return rendered;
};
var Hide = function Hide2(props) {
  var children = props.children;
  var query = useQuery(props);
  return React45.createElement(Visibility, {
    breakpoint: query,
    hide: true
  }, children);
};
if (__DEV__) {
  Hide.displayName = "Hide";
}
var Show = function Show2(props) {
  var children = props.children;
  var query = useQuery(props);
  return React45.createElement(Visibility, {
    breakpoint: query
  }, children);
};
if (__DEV__) {
  Show.displayName = "Show";
}
var getBreakpoint = function getBreakpoint2(theme3, value) {
  return memoizedGet(theme3, "breakpoints." + value, value);
};
function useQuery(props) {
  var _props$breakpoint = props.breakpoint, breakpoint = _props$breakpoint === void 0 ? "" : _props$breakpoint, below = props.below, above = props.above;
  var theme3 = useTheme3();
  var bpBelow = getBreakpoint(theme3, below);
  var bpAbove = getBreakpoint(theme3, above);
  var query = breakpoint;
  if (bpBelow) {
    query = "(max-width: " + bpBelow + ")";
  } else if (bpAbove) {
    query = "(min-width: " + bpAbove + ")";
  }
  return query;
}
function usePrefersReducedMotion() {
  var _useMediaQuery = useMediaQuery("(prefers-reduced-motion: reduce)"), prefersReducedMotion2 = _useMediaQuery[0];
  return prefersReducedMotion2;
}
function useColorModePreference() {
  var _useMediaQuery2 = useMediaQuery(["(prefers-color-scheme: light)", "(prefers-color-scheme: dark)"]), isLight = _useMediaQuery2[0], isDark5 = _useMediaQuery2[1];
  if (isLight)
    return "light";
  if (isDark5)
    return "dark";
  return void 0;
}
function useBreakpoint(defaultBreakpoint) {
  if (defaultBreakpoint === void 0) {
    defaultBreakpoint = "base";
  }
  var _useTheme = useTheme3(), __breakpoints = _useTheme.__breakpoints;
  var env3 = useEnvironment();
  var queries2 = import_react74.default.useMemo(function() {
    var _breakpoints$details;
    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function(_ref2) {
      var minMaxQuery = _ref2.minMaxQuery, breakpoint = _ref2.breakpoint;
      return {
        breakpoint,
        query: minMaxQuery.replace("@media screen and ", "")
      };
    })) != null ? _breakpoints$details : [];
  }, [__breakpoints]);
  var _React$useState = import_react74.default.useState(function() {
    if (defaultBreakpoint) {
      var fallbackBreakpointDetail = queries2.find(function(_ref2) {
        var breakpoint = _ref2.breakpoint;
        return breakpoint === defaultBreakpoint;
      });
      if (fallbackBreakpointDetail) {
        return fallbackBreakpointDetail.breakpoint;
      }
    }
    if (env3.window.matchMedia) {
      var matchingBreakpointDetail = queries2.find(function(_ref3) {
        var query = _ref3.query;
        return env3.window.matchMedia(query).matches;
      });
      if (matchingBreakpointDetail) {
        return matchingBreakpointDetail.breakpoint;
      }
    }
    return void 0;
  }), currentBreakpoint = _React$useState[0], setCurrentBreakpoint = _React$useState[1];
  import_react74.default.useEffect(function() {
    var allUnregisterFns = queries2.map(function(_ref4) {
      var breakpoint = _ref4.breakpoint, query = _ref4.query;
      var mediaQueryList = env3.window.matchMedia(query);
      if (mediaQueryList.matches) {
        setCurrentBreakpoint(breakpoint);
      }
      var handleChange = function handleChange2(ev) {
        if (ev.matches) {
          setCurrentBreakpoint(breakpoint);
        }
      };
      if (typeof mediaQueryList.addEventListener === "function") {
        mediaQueryList.addEventListener("change", handleChange);
      } else {
        mediaQueryList.addListener(handleChange);
      }
      return function() {
        if (typeof mediaQueryList.removeEventListener === "function") {
          mediaQueryList.removeEventListener("change", handleChange);
        } else {
          mediaQueryList.removeListener(handleChange);
        }
      };
    });
    return function() {
      allUnregisterFns.forEach(function(unregister) {
        return unregister();
      });
    };
  }, [queries2, __breakpoints, env3.window]);
  return currentBreakpoint;
}
function getClosestValue(values, breakpoint, breakpoints$1) {
  if (breakpoints$1 === void 0) {
    breakpoints$1 = breakpoints;
  }
  var index2 = Object.keys(values).indexOf(breakpoint);
  if (index2 !== -1) {
    return values[breakpoint];
  }
  var stopIndex = breakpoints$1.indexOf(breakpoint);
  while (stopIndex >= 0) {
    var key = breakpoints$1[stopIndex];
    if (values[key] != null) {
      index2 = stopIndex;
      break;
    }
    stopIndex -= 1;
  }
  if (index2 !== -1) {
    var _key = breakpoints$1[index2];
    return values[_key];
  }
  return void 0;
}
function useBreakpointValue(values, defaultBreakpoint) {
  var _theme$__breakpoints;
  var breakpoint = useBreakpoint(defaultBreakpoint);
  var theme3 = useTheme3();
  if (!breakpoint)
    return void 0;
  var breakpoints5 = Array.from(((_theme$__breakpoints = theme3.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);
  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints5)).map(function(_ref2) {
    var key = _ref2[0], value = _ref2[1];
    return [key, value];
  })) : values;
  return getClosestValue(obj, breakpoint, breakpoints5);
}

// node_modules/.pnpm/@chakra-ui+table@1.3.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js
var React46 = __toESM(require_react());
function _extends31() {
  _extends31 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends31.apply(this, arguments);
}
function _objectWithoutPropertiesLoose24(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded31 = ["overflow", "overflowX", "className"];
var _excluded211 = ["className"];
var _excluded36 = ["placement"];
var _excluded43 = ["isNumeric"];
var _excluded52 = ["isNumeric"];
var TableContainer = forwardRef5(function(props, ref) {
  var _ref2;
  var overflow = props.overflow, overflowX = props.overflowX, className = props.className, rest = _objectWithoutPropertiesLoose24(props, _excluded31);
  return React46.createElement(chakra2.div, _extends31({
    ref,
    className: cx("chakra-table__container", className)
  }, rest, {
    __css: {
      display: "block",
      whiteSpace: "nowrap",
      WebkitOverflowScrolling: "touch",
      overflowX: (_ref2 = overflow != null ? overflow : overflowX) != null ? _ref2 : "auto",
      overflowY: "hidden",
      maxWidth: "100%"
    }
  }));
});
var Table2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Table", props);
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, tableProps = _objectWithoutPropertiesLoose24(_omitThemingProps, _excluded211);
  return React46.createElement(StylesProvider2, {
    value: styles3
  }, React46.createElement(chakra2.table, _extends31({
    role: "table",
    ref,
    __css: styles3.table,
    className: cx("chakra-table", className)
  }, tableProps)));
});
if (__DEV__) {
  Table2.displayName = "Table";
}
var TableCaption = forwardRef5(function(props, ref) {
  var _props$placement = props.placement, placement = _props$placement === void 0 ? "bottom" : _props$placement, rest = _objectWithoutPropertiesLoose24(props, _excluded36);
  var styles3 = useStyles2();
  return React46.createElement(chakra2.caption, _extends31({}, rest, {
    ref,
    __css: _extends31({}, styles3.caption, {
      captionSide: placement
    })
  }));
});
if (__DEV__) {
  TableCaption.displayName = "TableCaption";
}
var Thead = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React46.createElement(chakra2.thead, _extends31({}, props, {
    ref,
    __css: styles3.thead
  }));
});
var Tbody = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React46.createElement(chakra2.tbody, _extends31({}, props, {
    ref,
    __css: styles3.tbody
  }));
});
var Tfoot = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React46.createElement(chakra2.tfoot, _extends31({}, props, {
    ref,
    __css: styles3.tfoot
  }));
});
var Th = forwardRef5(function(_ref2, ref) {
  var isNumeric3 = _ref2.isNumeric, rest = _objectWithoutPropertiesLoose24(_ref2, _excluded43);
  var styles3 = useStyles2();
  return React46.createElement(chakra2.th, _extends31({}, rest, {
    ref,
    __css: styles3.th,
    "data-is-numeric": isNumeric3
  }));
});
var Tr = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React46.createElement(chakra2.tr, _extends31({
    role: "row"
  }, props, {
    ref,
    __css: styles3.tr
  }));
});
var Td = forwardRef5(function(_ref3, ref) {
  var isNumeric3 = _ref3.isNumeric, rest = _objectWithoutPropertiesLoose24(_ref3, _excluded52);
  var styles3 = useStyles2();
  return React46.createElement(chakra2.td, _extends31({
    role: "gridcell"
  }, rest, {
    ref,
    __css: styles3.td,
    "data-is-numeric": isNumeric3
  }));
});

// node_modules/.pnpm/@chakra-ui+menu@1.8.11_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/menu/dist/chakra-ui-menu.esm.js
var React48 = __toESM(require_react());

// node_modules/.pnpm/@chakra-ui+clickable@1.2.6_react@16.14.0/node_modules/@chakra-ui/clickable/dist/chakra-ui-clickable.esm.js
var React47 = __toESM(require_react());
function _extends32() {
  _extends32 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends32.apply(this, arguments);
}
function _objectWithoutPropertiesLoose25(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function useEventListeners() {
  var listeners = React47.useRef(/* @__PURE__ */ new Map());
  var currentListeners = listeners.current;
  var add6 = React47.useCallback(function(el, type, listener, options) {
    listeners.current.set(listener, {
      type,
      el,
      options
    });
    el.addEventListener(type, listener, options);
  }, []);
  var remove2 = React47.useCallback(function(el, type, listener, options) {
    el.removeEventListener(type, listener, options);
    listeners.current["delete"](listener);
  }, []);
  React47.useEffect(function() {
    return function() {
      currentListeners.forEach(function(value, key) {
        remove2(value.el, value.type, key, value.options);
      });
    };
  }, [remove2, currentListeners]);
  return {
    add: add6,
    remove: remove2
  };
}
var _excluded37 = ["ref", "isDisabled", "isFocusable", "clickOnEnter", "clickOnSpace", "onMouseDown", "onMouseUp", "onClick", "onKeyDown", "onKeyUp", "tabIndex", "onMouseOver", "onMouseLeave"];
function isValidElement5(event) {
  var element = event.target;
  var tagName = element.tagName, isContentEditable2 = element.isContentEditable;
  return tagName !== "INPUT" && tagName !== "TEXTAREA" && isContentEditable2 !== true;
}
function useClickable(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, htmlRef = _props.ref, isDisabled2 = _props.isDisabled, isFocusable2 = _props.isFocusable, _props$clickOnEnter = _props.clickOnEnter, clickOnEnter = _props$clickOnEnter === void 0 ? true : _props$clickOnEnter, _props$clickOnSpace = _props.clickOnSpace, clickOnSpace = _props$clickOnSpace === void 0 ? true : _props$clickOnSpace, onMouseDown = _props.onMouseDown, onMouseUp = _props.onMouseUp, onClick = _props.onClick, onKeyDown = _props.onKeyDown, onKeyUp = _props.onKeyUp, tabIndexProp = _props.tabIndex, onMouseOver = _props.onMouseOver, onMouseLeave = _props.onMouseLeave, htmlProps = _objectWithoutPropertiesLoose25(_props, _excluded37);
  var _React$useState = React47.useState(true), isButton = _React$useState[0], setIsButton = _React$useState[1];
  var _React$useState2 = React47.useState(false), isPressed = _React$useState2[0], setIsPressed = _React$useState2[1];
  var listeners = useEventListeners();
  var refCallback = function refCallback2(node3) {
    if (!node3)
      return;
    if (node3.tagName !== "BUTTON") {
      setIsButton(false);
    }
  };
  var tabIndex = isButton ? tabIndexProp : tabIndexProp || 0;
  var trulyDisabled = isDisabled2 && !isFocusable2;
  var handleClick = React47.useCallback(function(event) {
    if (isDisabled2) {
      event.stopPropagation();
      event.preventDefault();
      return;
    }
    var self2 = event.currentTarget;
    self2.focus();
    onClick == null ? void 0 : onClick(event);
  }, [isDisabled2, onClick]);
  var onDocumentKeyUp = React47.useCallback(function(e) {
    if (isPressed && isValidElement5(e)) {
      e.preventDefault();
      e.stopPropagation();
      setIsPressed(false);
      listeners.remove(document, "keyup", onDocumentKeyUp, false);
    }
  }, [isPressed, listeners]);
  var handleKeyDown = React47.useCallback(function(event) {
    onKeyDown == null ? void 0 : onKeyDown(event);
    if (isDisabled2 || event.defaultPrevented || event.metaKey) {
      return;
    }
    if (!isValidElement5(event.nativeEvent) || isButton)
      return;
    var shouldClickOnEnter = clickOnEnter && event.key === "Enter";
    var shouldClickOnSpace = clickOnSpace && event.key === " ";
    if (shouldClickOnSpace) {
      event.preventDefault();
      setIsPressed(true);
    }
    if (shouldClickOnEnter) {
      event.preventDefault();
      var self2 = event.currentTarget;
      self2.click();
    }
    listeners.add(document, "keyup", onDocumentKeyUp, false);
  }, [isDisabled2, isButton, onKeyDown, clickOnEnter, clickOnSpace, listeners, onDocumentKeyUp]);
  var handleKeyUp = React47.useCallback(function(event) {
    onKeyUp == null ? void 0 : onKeyUp(event);
    if (isDisabled2 || event.defaultPrevented || event.metaKey)
      return;
    if (!isValidElement5(event.nativeEvent) || isButton)
      return;
    var shouldClickOnSpace = clickOnSpace && event.key === " ";
    if (shouldClickOnSpace) {
      event.preventDefault();
      setIsPressed(false);
      var self2 = event.currentTarget;
      self2.click();
    }
  }, [clickOnSpace, isButton, isDisabled2, onKeyUp]);
  var onDocumentMouseUp = React47.useCallback(function(event) {
    if (event.button !== 0)
      return;
    setIsPressed(false);
    listeners.remove(document, "mouseup", onDocumentMouseUp, false);
  }, [listeners]);
  var handleMouseDown = React47.useCallback(function(event) {
    if (isRightClick(event))
      return;
    if (isDisabled2) {
      event.stopPropagation();
      event.preventDefault();
      return;
    }
    if (!isButton) {
      setIsPressed(true);
    }
    var target = event.currentTarget;
    target.focus({
      preventScroll: true
    });
    listeners.add(document, "mouseup", onDocumentMouseUp, false);
    onMouseDown == null ? void 0 : onMouseDown(event);
  }, [isDisabled2, isButton, onMouseDown, listeners, onDocumentMouseUp]);
  var handleMouseUp = React47.useCallback(function(event) {
    if (isRightClick(event))
      return;
    if (!isButton) {
      setIsPressed(false);
    }
    onMouseUp == null ? void 0 : onMouseUp(event);
  }, [onMouseUp, isButton]);
  var handleMouseOver = React47.useCallback(function(event) {
    if (isDisabled2) {
      event.preventDefault();
      return;
    }
    onMouseOver == null ? void 0 : onMouseOver(event);
  }, [isDisabled2, onMouseOver]);
  var handleMouseLeave = React47.useCallback(function(event) {
    if (isPressed) {
      event.preventDefault();
      setIsPressed(false);
    }
    onMouseLeave == null ? void 0 : onMouseLeave(event);
  }, [isPressed, onMouseLeave]);
  var ref = mergeRefs(htmlRef, refCallback);
  if (isButton) {
    return _extends32({}, htmlProps, {
      ref,
      type: "button",
      "aria-disabled": trulyDisabled ? void 0 : isDisabled2,
      disabled: trulyDisabled,
      onClick: handleClick,
      onMouseDown,
      onMouseUp,
      onKeyUp,
      onKeyDown,
      onMouseOver,
      onMouseLeave
    });
  }
  return _extends32({}, htmlProps, {
    ref,
    role: "button",
    "data-active": dataAttr(isPressed),
    "aria-disabled": isDisabled2 ? "true" : void 0,
    tabIndex: trulyDisabled ? void 0 : tabIndex,
    onClick: handleClick,
    onMouseDown: handleMouseDown,
    onMouseUp: handleMouseUp,
    onKeyUp: handleKeyUp,
    onKeyDown: handleKeyDown,
    onMouseOver: handleMouseOver,
    onMouseLeave: handleMouseLeave
  });
}

// node_modules/.pnpm/@chakra-ui+hooks@1.9.1_react@16.14.0/node_modules/@chakra-ui/hooks/use-animation-state/dist/chakra-ui-hooks-use-animation-state.esm.js
var import_react75 = __toESM(require_react());

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto2 = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements2 = [].concat(basePlacements, [auto2]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node3) {
  if (node3 == null) {
    return window;
  }
  if (node3.toString() !== "[object Window]") {
    var ownerDocument = node3.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node3;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement4(node3) {
  var OwnElement = getWindow(node3).Element;
  return node3 instanceof OwnElement || node3 instanceof Element;
}
function isHTMLElement2(node3) {
  var OwnElement = getWindow(node3).HTMLElement;
  return node3 instanceof OwnElement || node3 instanceof HTMLElement;
}
function isShadowRoot(node3) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node3).ShadowRoot;
  return node3 instanceof OwnElement || node3 instanceof ShadowRoot;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref2) {
  var state3 = _ref2.state;
  Object.keys(state3.elements).forEach(function(name) {
    var style = state3.styles[name] || {};
    var attributes = state3.attributes[name] || {};
    var element = state3.elements[name];
    if (!isHTMLElement2(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect3(_ref2) {
  var state3 = _ref2.state;
  var initialStyles = {
    popper: {
      position: state3.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state3.elements.popper.style, initialStyles.popper);
  state3.styles = initialStyles;
  if (state3.elements.arrow) {
    Object.assign(state3.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state3.elements).forEach(function(name) {
      var element = state3.elements[name];
      var attributes = state3.attributes[name] || {};
      var styleProperties = Object.keys(state3.styles.hasOwnProperty(name) ? state3.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement2(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect: effect3,
  requires: ["computeStyles"]
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (isHTMLElement2(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth;
    if (offsetWidth > 0) {
      scaleX = round(rect.width) / offsetWidth || 1;
    }
    if (offsetHeight > 0) {
      scaleY = round(rect.height) / offsetHeight || 1;
    }
  }
  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains3(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next2 = child;
    do {
      if (next2 && parent.isSameNode(next2)) {
        return true;
      }
      next2 = next2.parentNode || next2.host;
    } while (next2);
  }
  return false;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle4(element) {
  return getWindow(element).getComputedStyle(element);
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement4(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement2(element) || getComputedStyle4(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
  var isIE = navigator.userAgent.indexOf("Trident") !== -1;
  if (isIE && isHTMLElement2(element)) {
    var elementCss = getComputedStyle4(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement2(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css6 = getComputedStyle4(currentNode);
    if (css6.transform !== "none" || css6.perspective !== "none" || css6.contain === "paint" || ["transform", "perspective"].indexOf(css6.willChange) !== -1 || isFirefox && css6.willChange === "filter" || isFirefox && css6.filter && css6.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle4(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle4(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/within.js
function within(min2, value, max2) {
  return max(min2, min(value, max2));
}
function withinMaxClamp(min2, value, max2) {
  var v = within(min2, value, max2);
  return v > max2 ? max2 : v;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys4) {
  return keys4.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding, state3) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state3.rects, {
    placement: state3.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref2) {
  var _state$modifiersData$;
  var state3 = _ref2.state, name = _ref2.name, options = _ref2.options;
  var arrowElement = state3.elements.arrow;
  var popperOffsets2 = state3.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state3.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state3);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state3.rects.reference[len] + state3.rects.reference[axis] - popperOffsets2[axis] - state3.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state3.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state3.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect4(_ref2) {
  var state3 = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state3.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (true) {
    if (!isHTMLElement2(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
    }
  }
  if (!contains3(state3.elements.popper, arrowElement)) {
    if (true) {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
    }
    return;
  }
  state3.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect4,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref2) {
  var x = _ref2.x, y = _ref2.y;
  var win2 = window;
  var dpr = win2.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position4 = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win2 = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle4(offsetParent).position !== "static" && position4 === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win2 && win2.visualViewport ? win2.visualViewport.height : offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win2 && win2.visualViewport ? win2.visualViewport.width : offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles2 = Object.assign({
    position: position4
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles2, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win2.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles2, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state3 = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  if (true) {
    var transitionProperty3 = getComputedStyle4(state3.elements.popper).transitionProperty || "";
    if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
      return transitionProperty3.indexOf(property) >= 0;
    })) {
      console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
    }
  }
  var commonStyles2 = {
    placement: getBasePlacement(state3.placement),
    variation: getVariation(state3.placement),
    popper: state3.elements.popper,
    popperRect: state3.rects.popper,
    gpuAcceleration,
    isFixed: state3.options.strategy === "fixed"
  };
  if (state3.modifiersData.popperOffsets != null) {
    state3.styles.popper = Object.assign({}, state3.styles.popper, mapToStyles(Object.assign({}, commonStyles2, {
      offsets: state3.modifiersData.popperOffsets,
      position: state3.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state3.modifiersData.arrow != null) {
    state3.styles.arrow = Object.assign({}, state3.styles.arrow, mapToStyles(Object.assign({}, commonStyles2, {
      offsets: state3.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state3.attributes.popper = Object.assign({}, state3.attributes.popper, {
    "data-popper-placement": state3.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect5(_ref2) {
  var state3 = _ref2.state, instance = _ref2.instance, options = _ref2.options;
  var _options$scroll = options.scroll, scroll3 = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state3.elements.popper);
  var scrollParents = [].concat(state3.scrollParents.reference, state3.scrollParents.popper);
  if (scroll3) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll3) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect5,
  data: {}
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash2 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash3 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash3[matched];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node3) {
  var win2 = getWindow(node3);
  var scrollLeft = win2.pageXOffset;
  var scrollTop = win2.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element) {
  var win2 = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win2.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element),
    y
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle4(body || html).direction === "rtl") {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle4(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node3) {
  if (["html", "body", "#document"].indexOf(getNodeName(node3)) >= 0) {
    return node3.ownerDocument.body;
  }
  if (isHTMLElement2(node3) && isScrollParent(node3)) {
    return node3;
  }
  return getScrollParent(getParentNode(node3));
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list4) {
  var _element$ownerDocumen;
  if (list4 === void 0) {
    list4 = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win2 = getWindow(scrollParent);
  var target = isBody ? [win2].concat(win2.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list4.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement4(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle4(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement2(element) ? getOffsetParent(element) : element;
  if (!isElement4(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement4(clippingParent) && contains3(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref2) {
  var reference2 = _ref2.reference, element = _ref2.element, placement = _ref2.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state3, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state3.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state3.rects.popper;
  var element = state3.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement4(element) ? element : element.contextElement || getDocumentElement(state3.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(state3.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state3.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply5 = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply5;
    });
  }
  return overflowOffsets;
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state3, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements2 : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements3 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements3.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements3;
    if (true) {
      console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
    }
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state3, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a2, b2) {
    return overflows[a2] - overflows[b2];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto2) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref2) {
  var state3 = _ref2.state, options = _ref2.options, name = _ref2.name;
  if (state3.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state3.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements3 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto2 ? computeAutoPlacement(state3, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state3.rects.reference;
  var popperRect = state3.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements3[0];
  for (var i = 0; i < placements3.length; i++) {
    var placement = placements3[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state3, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements3.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state3.placement !== firstFittingPlacement) {
    state3.modifiersData[name]._skip = true;
    state3.placement = firstFittingPlacement;
    state3.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref2) {
  var state3 = _ref2.state, name = _ref2.name;
  var referenceRect = state3.rects.reference;
  var popperRect = state3.rects.popper;
  var preventedOffsets = state3.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state3, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state3, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state3.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state3.attributes.popper = Object.assign({}, state3.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref2 = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref2[0], distance4 = _ref2[1];
  skidding = skidding || 0;
  distance4 = (distance4 || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance4,
    y: skidding
  } : {
    x: skidding,
    y: distance4
  };
}
function offset(_ref2) {
  var state3 = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements2.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state3.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state3.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state3.modifiersData.popperOffsets != null) {
    state3.modifiersData.popperOffsets.x += x;
    state3.modifiersData.popperOffsets.y += y;
  }
  state3.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref2) {
  var state3 = _ref2.state, name = _ref2.name;
  state3.modifiersData[name] = computeOffsets({
    reference: state3.rects.reference,
    element: state3.rects.popper,
    strategy: "absolute",
    placement: state3.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref2) {
  var state3 = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state3, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state3.placement);
  var variation = getVariation(state3.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state3.modifiersData.popperOffsets;
  var referenceRect = state3.rects.reference;
  var popperRect = state3.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state3.rects, {
    placement: state3.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state3.modifiersData.offset ? state3.modifiersData.offset[state3.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min2 = offset2 + overflow[mainSide];
    var max2 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state3.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state3.modifiersData["arrow#persistent"] ? state3.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state3.elements.arrow && getOffsetParent(state3.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min2, tetherMin) : min2, offset2, tether ? max(max2, tetherMax) : max2);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state3.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node3) {
  if (node3 === getWindow(node3) || !isHTMLElement2(node3)) {
    return getWindowScroll(node3);
  } else {
    return getHTMLElementScroll(node3);
  }
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement2(offsetParent);
  var offsetParentIsScaled = isHTMLElement2(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
  var scroll3 = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll3 = getNodeScroll(offsetParent);
    }
    if (isHTMLElement2(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll3.scrollLeft - offsets.x,
    y: rect.top + scroll3.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order2(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order2(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn6) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn6());
        });
      });
    }
    return pending;
  };
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/format.js
function format(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return [].concat(args).reduce(function(p, c2) {
    return p.replace(/%s/, c2);
  }, str);
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/validateModifiers.js
var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ["name", "enabled", "phase", "fn", "effect", "requires", "options"];
function validateModifiers(modifiers) {
  modifiers.forEach(function(modifier) {
    [].concat(Object.keys(modifier), VALID_PROPERTIES).filter(function(value, index2, self2) {
      return self2.indexOf(value) === index2;
    }).forEach(function(key) {
      switch (key) {
        case "name":
          if (typeof modifier.name !== "string") {
            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', '"' + String(modifier.name) + '"'));
          }
          break;
        case "enabled":
          if (typeof modifier.enabled !== "boolean") {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', '"' + String(modifier.enabled) + '"'));
          }
          break;
        case "phase":
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(", "), '"' + String(modifier.phase) + '"'));
          }
          break;
        case "fn":
          if (typeof modifier.fn !== "function") {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', '"' + String(modifier.fn) + '"'));
          }
          break;
        case "effect":
          if (modifier.effect != null && typeof modifier.effect !== "function") {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', '"' + String(modifier.fn) + '"'));
          }
          break;
        case "requires":
          if (modifier.requires != null && !Array.isArray(modifier.requires)) {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', '"' + String(modifier.requires) + '"'));
          }
          break;
        case "requiresIfExists":
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', '"' + String(modifier.requiresIfExists) + '"'));
          }
          break;
        case "options":
        case "data":
          break;
        default:
          console.error('PopperJS: an invalid property has been provided to the "' + modifier.name + '" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s) {
            return '"' + s + '"';
          }).join(", ") + '; but "' + key + '" was provided.');
      }
      modifier.requires && modifier.requires.forEach(function(requirement) {
        if (modifiers.find(function(mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/uniqueBy.js
function uniqueBy(arr, fn6) {
  var identifiers = /* @__PURE__ */ new Set();
  return arr.filter(function(item) {
    var identifier2 = fn6(item);
    if (!identifiers.has(identifier2)) {
      identifiers.add(identifier2);
      return true;
    }
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/createPopper.js
var INVALID_ELEMENT_ERROR = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
var INFINITE_LOOP_ERROR = "Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.";
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers3 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions2 = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper4(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions2;
    }
    var state3 = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions2),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state3,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state3.options) : setOptionsAction;
        cleanupModifierEffects();
        state3.options = Object.assign({}, defaultOptions2, state3.options, options2);
        state3.scrollParents = {
          reference: isElement4(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers3, state3.options.modifiers)));
        state3.orderedModifiers = orderedModifiers.filter(function(m2) {
          return m2.enabled;
        });
        if (true) {
          var modifiers = uniqueBy([].concat(orderedModifiers, state3.options.modifiers), function(_ref2) {
            var name = _ref2.name;
            return name;
          });
          validateModifiers(modifiers);
          if (getBasePlacement(state3.options.placement) === auto2) {
            var flipModifier = state3.orderedModifiers.find(function(_ref2) {
              var name = _ref2.name;
              return name === "flip";
            });
            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
            }
          }
          var _getComputedStyle = getComputedStyle4(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
          if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
          }
        }
        runModifierEffects();
        return instance.update();
      },
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state3.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          if (true) {
            console.error(INVALID_ELEMENT_ERROR);
          }
          return;
        }
        state3.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state3.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state3.reset = false;
        state3.placement = state3.options.placement;
        state3.orderedModifiers.forEach(function(modifier) {
          return state3.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;
        for (var index2 = 0; index2 < state3.orderedModifiers.length; index2++) {
          if (true) {
            __debug_loops__ += 1;
            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }
          if (state3.reset === true) {
            state3.reset = false;
            index2 = -1;
            continue;
          }
          var _state$orderedModifie = state3.orderedModifiers[index2], fn6 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn6 === "function") {
            state3 = fn6({
              state: state3,
              options: _options,
              name,
              instance
            }) || state3;
          }
        }
      },
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state3);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      if (true) {
        console.error(INVALID_ELEMENT_ERROR);
      }
      return instance;
    }
    instance.setOptions(options).then(function(state4) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state4);
      }
    });
    function runModifierEffects() {
      state3.orderedModifiers.forEach(function(_ref3) {
        var name = _ref3.name, _ref3$options = _ref3.options, options2 = _ref3$options === void 0 ? {} : _ref3$options, effect9 = _ref3.effect;
        if (typeof effect9 === "function") {
          var cleanupFn = effect9({
            state: state3,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn6) {
        return fn6();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = popperGenerator();

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/popper-lite.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default];
var createPopper2 = popperGenerator({
  defaultModifiers
});

// node_modules/.pnpm/@popperjs+core@2.11.5/node_modules/@popperjs/core/lib/popper.js
var defaultModifiers2 = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper3 = popperGenerator({
  defaultModifiers: defaultModifiers2
});

// node_modules/.pnpm/@chakra-ui+popper@2.4.3_react@16.14.0/node_modules/@chakra-ui/popper/dist/chakra-ui-popper.esm.js
var import_react76 = __toESM(require_react());
function _objectWithoutPropertiesLoose26(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends33() {
  _extends33 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends33.apply(this, arguments);
}
var toVar2 = function toVar3(value, fallback) {
  return {
    "var": value,
    varRef: fallback ? "var(" + value + ", " + fallback + ")" : "var(" + value + ")"
  };
};
var cssVars = {
  arrowShadowColor: toVar2("--popper-arrow-shadow-color"),
  arrowSize: toVar2("--popper-arrow-size", "8px"),
  arrowSizeHalf: toVar2("--popper-arrow-size-half"),
  arrowBg: toVar2("--popper-arrow-bg"),
  transformOrigin: toVar2("--popper-transform-origin"),
  arrowOffset: toVar2("--popper-arrow-offset")
};
function getBoxShadow(placement) {
  if (placement.includes("top"))
    return "1px 1px 1px 0 var(--popper-arrow-shadow-color)";
  if (placement.includes("bottom"))
    return "-1px -1px 1px 0 var(--popper-arrow-shadow-color)";
  if (placement.includes("right"))
    return "-1px 1px 1px 0 var(--popper-arrow-shadow-color)";
  if (placement.includes("left"))
    return "1px -1px 1px 0 var(--popper-arrow-shadow-color)";
}
var transforms = {
  top: "bottom center",
  "top-start": "bottom left",
  "top-end": "bottom right",
  bottom: "top center",
  "bottom-start": "top left",
  "bottom-end": "top right",
  left: "right center",
  "left-start": "right top",
  "left-end": "right bottom",
  right: "left center",
  "right-start": "left top",
  "right-end": "left bottom"
};
var toTransformOrigin = function toTransformOrigin2(placement) {
  return transforms[placement];
};
var defaultEventListeners = {
  scroll: true,
  resize: true
};
function getEventListenerOptions(value) {
  var eventListeners;
  if (typeof value === "object") {
    eventListeners = {
      enabled: true,
      options: _extends33({}, defaultEventListeners, value)
    };
  } else {
    eventListeners = {
      enabled: value,
      options: defaultEventListeners
    };
  }
  return eventListeners;
}
var matchWidth = {
  name: "matchWidth",
  enabled: true,
  phase: "beforeWrite",
  requires: ["computeStyles"],
  fn: function fn2(_ref2) {
    var state3 = _ref2.state;
    state3.styles.popper.width = state3.rects.reference.width + "px";
  },
  effect: function effect6(_ref2) {
    var state3 = _ref2.state;
    return function() {
      var reference2 = state3.elements.reference;
      state3.elements.popper.style.width = reference2.offsetWidth + "px";
    };
  }
};
var transformOrigin = {
  name: "transformOrigin",
  enabled: true,
  phase: "write",
  fn: function fn3(_ref3) {
    var state3 = _ref3.state;
    setTransformOrigin(state3);
  },
  effect: function effect7(_ref4) {
    var state3 = _ref4.state;
    return function() {
      setTransformOrigin(state3);
    };
  }
};
var setTransformOrigin = function setTransformOrigin2(state3) {
  state3.elements.popper.style.setProperty(cssVars.transformOrigin["var"], toTransformOrigin(state3.placement));
};
var positionArrow = {
  name: "positionArrow",
  enabled: true,
  phase: "afterWrite",
  fn: function fn4(_ref5) {
    var state3 = _ref5.state;
    setArrowStyles(state3);
  }
};
var setArrowStyles = function setArrowStyles2(state3) {
  var _state$elements;
  if (!state3.placement)
    return;
  var overrides = getArrowStyle$1(state3.placement);
  if ((_state$elements = state3.elements) != null && _state$elements.arrow && overrides) {
    var _Object$assign, _vars;
    Object.assign(state3.elements.arrow.style, (_Object$assign = {}, _Object$assign[overrides.property] = overrides.value, _Object$assign.width = cssVars.arrowSize.varRef, _Object$assign.height = cssVars.arrowSize.varRef, _Object$assign.zIndex = -1, _Object$assign));
    var vars = (_vars = {}, _vars[cssVars.arrowSizeHalf["var"]] = "calc(" + cssVars.arrowSize.varRef + " / 2)", _vars[cssVars.arrowOffset["var"]] = "calc(" + cssVars.arrowSizeHalf.varRef + " * -1)", _vars);
    for (var property in vars) {
      state3.elements.arrow.style.setProperty(property, vars[property]);
    }
  }
};
var getArrowStyle$1 = function getArrowStyle(placement) {
  if (placement.startsWith("top")) {
    return {
      property: "bottom",
      value: cssVars.arrowOffset.varRef
    };
  }
  if (placement.startsWith("bottom")) {
    return {
      property: "top",
      value: cssVars.arrowOffset.varRef
    };
  }
  if (placement.startsWith("left")) {
    return {
      property: "right",
      value: cssVars.arrowOffset.varRef
    };
  }
  if (placement.startsWith("right")) {
    return {
      property: "left",
      value: cssVars.arrowOffset.varRef
    };
  }
};
var innerArrow = {
  name: "innerArrow",
  enabled: true,
  phase: "main",
  requires: ["arrow"],
  fn: function fn5(_ref6) {
    var state3 = _ref6.state;
    setInnerArrowStyles(state3);
  },
  effect: function effect8(_ref7) {
    var state3 = _ref7.state;
    return function() {
      setInnerArrowStyles(state3);
    };
  }
};
var setInnerArrowStyles = function setInnerArrowStyles2(state3) {
  if (!state3.elements.arrow)
    return;
  var inner = state3.elements.arrow.querySelector("[data-popper-arrow-inner]");
  if (!inner)
    return;
  Object.assign(inner.style, {
    transform: "rotate(45deg)",
    background: cssVars.arrowBg.varRef,
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    position: "absolute",
    zIndex: "inherit",
    boxShadow: getBoxShadow(state3.placement)
  });
};
var logicals = {
  "start-start": {
    ltr: "left-start",
    rtl: "right-start"
  },
  "start-end": {
    ltr: "left-end",
    rtl: "right-end"
  },
  "end-start": {
    ltr: "right-start",
    rtl: "left-start"
  },
  "end-end": {
    ltr: "right-end",
    rtl: "left-end"
  },
  start: {
    ltr: "left",
    rtl: "right"
  },
  end: {
    ltr: "right",
    rtl: "left"
  }
};
var opposites = {
  "auto-start": "auto-end",
  "auto-end": "auto-start",
  "top-start": "top-end",
  "top-end": "top-start",
  "bottom-start": "bottom-end",
  "bottom-end": "bottom-start"
};
function getPopperPlacement(placement, dir) {
  var _logicals$placement, _opposites$placement;
  if (dir === void 0) {
    dir = "ltr";
  }
  var value = ((_logicals$placement = logicals[placement]) == null ? void 0 : _logicals$placement[dir]) || placement;
  if (dir === "ltr")
    return value;
  return (_opposites$placement = opposites[placement]) != null ? _opposites$placement : value;
}
var _excluded38 = ["size", "shadowColor", "bg", "style"];
function usePopper(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, _props$enabled = _props.enabled, enabled = _props$enabled === void 0 ? true : _props$enabled, modifiers = _props.modifiers, _props$placement = _props.placement, placementProp = _props$placement === void 0 ? "bottom" : _props$placement, _props$strategy = _props.strategy, strategy = _props$strategy === void 0 ? "absolute" : _props$strategy, _props$arrowPadding = _props.arrowPadding, arrowPadding = _props$arrowPadding === void 0 ? 8 : _props$arrowPadding, _props$eventListeners = _props.eventListeners, eventListeners = _props$eventListeners === void 0 ? true : _props$eventListeners, offset2 = _props.offset, _props$gutter = _props.gutter, gutter = _props$gutter === void 0 ? 8 : _props$gutter, _props$flip = _props.flip, flip2 = _props$flip === void 0 ? true : _props$flip, _props$boundary = _props.boundary, boundary = _props$boundary === void 0 ? "clippingParents" : _props$boundary, _props$preventOverflo = _props.preventOverflow, preventOverflow2 = _props$preventOverflo === void 0 ? true : _props$preventOverflo, matchWidth$1 = _props.matchWidth, _props$direction = _props.direction, direction3 = _props$direction === void 0 ? "ltr" : _props$direction;
  var reference2 = (0, import_react76.useRef)(null);
  var popper2 = (0, import_react76.useRef)(null);
  var instance = (0, import_react76.useRef)(null);
  var placement = getPopperPlacement(placementProp, direction3);
  var cleanup = (0, import_react76.useRef)(function() {
  });
  var setupPopper = (0, import_react76.useCallback)(function() {
    if (!enabled || !reference2.current || !popper2.current)
      return;
    cleanup.current == null ? void 0 : cleanup.current();
    instance.current = createPopper3(reference2.current, popper2.current, {
      placement,
      modifiers: [innerArrow, positionArrow, transformOrigin, _extends33({}, matchWidth, {
        enabled: !!matchWidth$1
      }), _extends33({
        name: "eventListeners"
      }, getEventListenerOptions(eventListeners)), {
        name: "arrow",
        options: {
          padding: arrowPadding
        }
      }, {
        name: "offset",
        options: {
          offset: offset2 != null ? offset2 : [0, gutter]
        }
      }, {
        name: "flip",
        enabled: !!flip2,
        options: {
          padding: 8
        }
      }, {
        name: "preventOverflow",
        enabled: !!preventOverflow2,
        options: {
          boundary
        }
      }].concat(modifiers != null ? modifiers : []),
      strategy
    });
    instance.current.forceUpdate();
    cleanup.current = instance.current.destroy;
  }, [placement, enabled, modifiers, matchWidth$1, eventListeners, arrowPadding, offset2, gutter, flip2, preventOverflow2, boundary, strategy]);
  (0, import_react76.useEffect)(function() {
    return function() {
      if (!reference2.current && !popper2.current) {
        var _instance$current;
        (_instance$current = instance.current) == null ? void 0 : _instance$current.destroy();
        instance.current = null;
      }
    };
  }, []);
  var referenceRef = (0, import_react76.useCallback)(function(node3) {
    reference2.current = node3;
    setupPopper();
  }, [setupPopper]);
  var getReferenceProps = (0, import_react76.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends33({}, props2, {
      ref: mergeRefs(referenceRef, ref)
    });
  }, [referenceRef]);
  var popperRef = (0, import_react76.useCallback)(function(node3) {
    popper2.current = node3;
    setupPopper();
  }, [setupPopper]);
  var getPopperProps = (0, import_react76.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends33({}, props2, {
      ref: mergeRefs(popperRef, ref),
      style: _extends33({}, props2.style, {
        position: strategy,
        minWidth: "max-content",
        inset: "0 auto auto 0"
      })
    });
  }, [strategy, popperRef]);
  var getArrowProps = (0, import_react76.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var _props2 = props2;
    _props2.size;
    _props2.shadowColor;
    _props2.bg;
    _props2.style;
    var rest = _objectWithoutPropertiesLoose26(_props2, _excluded38);
    return _extends33({}, rest, {
      ref,
      "data-popper-arrow": "",
      style: getArrowStyle2(props2)
    });
  }, []);
  var getArrowInnerProps = (0, import_react76.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends33({}, props2, {
      ref,
      "data-popper-arrow-inner": ""
    });
  }, []);
  return {
    update: function update() {
      var _instance$current2;
      (_instance$current2 = instance.current) == null ? void 0 : _instance$current2.update();
    },
    forceUpdate: function forceUpdate() {
      var _instance$current3;
      (_instance$current3 = instance.current) == null ? void 0 : _instance$current3.forceUpdate();
    },
    transformOrigin: cssVars.transformOrigin.varRef,
    referenceRef,
    popperRef,
    getPopperProps,
    getArrowProps,
    getArrowInnerProps,
    getReferenceProps
  };
}
function getArrowStyle2(props) {
  var size3 = props.size, shadowColor = props.shadowColor, bg = props.bg, style = props.style;
  var computedStyle = _extends33({}, style, {
    position: "absolute"
  });
  if (size3) {
    computedStyle["--popper-arrow-size"] = size3;
  }
  if (shadowColor) {
    computedStyle["--popper-arrow-shadow-color"] = shadowColor;
  }
  if (bg) {
    computedStyle["--popper-arrow-bg"] = bg;
  }
  return computedStyle;
}

// node_modules/.pnpm/@chakra-ui+menu@1.8.11_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/menu/dist/chakra-ui-menu.esm.js
function _extends34() {
  _extends34 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends34.apply(this, arguments);
}
function _objectWithoutPropertiesLoose27(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$112 = ["id", "closeOnSelect", "closeOnBlur", "autoSelect", "isLazy", "isOpen", "defaultIsOpen", "onClose", "onOpen", "placement", "lazyBehavior", "direction", "computePositionOnMount"];
var _excluded2$14 = ["onMouseEnter", "onMouseMove", "onMouseLeave", "onClick", "isDisabled", "isFocusable", "closeOnSelect", "type"];
var _excluded3$1 = ["type", "isChecked"];
var _excluded4$1 = ["children", "type", "value", "defaultValue", "onChange"];
var _createDescendantCont2 = createDescendantContext();
var MenuDescendantsProvider = _createDescendantCont2[0];
var useMenuDescendantsContext = _createDescendantCont2[1];
var useMenuDescendants = _createDescendantCont2[2];
var useMenuDescendant = _createDescendantCont2[3];
var _createContext12 = createContext3({
  strict: false,
  name: "MenuContext"
});
var MenuProvider = _createContext12[0];
var useMenuContext = _createContext12[1];
function useMenu(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, id2 = _props.id, _props$closeOnSelect = _props.closeOnSelect, closeOnSelect = _props$closeOnSelect === void 0 ? true : _props$closeOnSelect, _props$closeOnBlur = _props.closeOnBlur, closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur, _props$autoSelect = _props.autoSelect, autoSelect = _props$autoSelect === void 0 ? true : _props$autoSelect, isLazy = _props.isLazy, isOpenProp = _props.isOpen, defaultIsOpen = _props.defaultIsOpen, onCloseProp = _props.onClose, onOpenProp = _props.onOpen, _props$placement = _props.placement, placement = _props$placement === void 0 ? "bottom-start" : _props$placement, _props$lazyBehavior = _props.lazyBehavior, lazyBehavior = _props$lazyBehavior === void 0 ? "unmount" : _props$lazyBehavior, direction3 = _props.direction, _props$computePositio = _props.computePositionOnMount, computePositionOnMount = _props$computePositio === void 0 ? false : _props$computePositio, popperProps = _objectWithoutPropertiesLoose27(_props, _excluded$112);
  var menuRef = React48.useRef(null);
  var buttonRef = React48.useRef(null);
  var descendants = useMenuDescendants();
  var focusMenu = React48.useCallback(function() {
    focus(menuRef.current, {
      nextTick: true,
      selectTextIfInput: false
    });
  }, []);
  var focusFirstItem = React48.useCallback(function() {
    var id3 = setTimeout(function() {
      var first = descendants.firstEnabled();
      if (first)
        setFocusedIndex(first.index);
    });
    timeoutIds.current.add(id3);
  }, [descendants]);
  var focusLastItem = React48.useCallback(function() {
    var id3 = setTimeout(function() {
      var last3 = descendants.lastEnabled();
      if (last3)
        setFocusedIndex(last3.index);
    });
    timeoutIds.current.add(id3);
  }, [descendants]);
  var onOpenInternal = React48.useCallback(function() {
    onOpenProp == null ? void 0 : onOpenProp();
    if (autoSelect) {
      focusFirstItem();
    } else {
      focusMenu();
    }
  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp]);
  var _useDisclosure = useDisclosure({
    isOpen: isOpenProp,
    defaultIsOpen,
    onClose: onCloseProp,
    onOpen: onOpenInternal
  }), isOpen = _useDisclosure.isOpen, onOpen = _useDisclosure.onOpen, onClose = _useDisclosure.onClose, onToggle = _useDisclosure.onToggle;
  useOutsideClick({
    enabled: isOpen && closeOnBlur,
    ref: menuRef,
    handler: function handler(event) {
      var _buttonRef$current;
      if (!((_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target))) {
        onClose();
      }
    }
  });
  var popper2 = usePopper(_extends34({}, popperProps, {
    enabled: isOpen || computePositionOnMount,
    placement,
    direction: direction3
  }));
  var _React$useState = React48.useState(-1), focusedIndex = _React$useState[0], setFocusedIndex = _React$useState[1];
  useUpdateEffect(function() {
    if (!isOpen) {
      setFocusedIndex(-1);
    }
  }, [isOpen]);
  useFocusOnHide(menuRef, {
    focusRef: buttonRef,
    visible: isOpen,
    shouldFocus: true
  });
  var animationState = useAnimationState({
    isOpen,
    ref: menuRef
  });
  var _useIds = useIds(id2, "menu-button", "menu-list"), buttonId = _useIds[0], menuId = _useIds[1];
  var openAndFocusMenu = React48.useCallback(function() {
    onOpen();
    focusMenu();
  }, [onOpen, focusMenu]);
  var timeoutIds = React48.useRef(/* @__PURE__ */ new Set([]));
  useUnmountEffect(function() {
    timeoutIds.current.forEach(function(id3) {
      return clearTimeout(id3);
    });
    timeoutIds.current.clear();
  });
  var openAndFocusFirstItem = React48.useCallback(function() {
    onOpen();
    focusFirstItem();
  }, [focusFirstItem, onOpen]);
  var openAndFocusLastItem = React48.useCallback(function() {
    onOpen();
    focusLastItem();
  }, [onOpen, focusLastItem]);
  var refocus = React48.useCallback(function() {
    var _menuRef$current, _descendants$item;
    var doc2 = getOwnerDocument(menuRef.current);
    var hasFocusWithin3 = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(doc2.activeElement);
    var shouldRefocus = isOpen && !hasFocusWithin3;
    if (!shouldRefocus)
      return;
    var node3 = (_descendants$item = descendants.item(focusedIndex)) == null ? void 0 : _descendants$item.node;
    if (node3) {
      focus(node3, {
        selectTextIfInput: false,
        preventScroll: false
      });
    }
  }, [isOpen, focusedIndex, descendants]);
  return {
    openAndFocusMenu,
    openAndFocusFirstItem,
    openAndFocusLastItem,
    onTransitionEnd: refocus,
    unstable__animationState: animationState,
    descendants,
    popper: popper2,
    buttonId,
    menuId,
    forceUpdate: popper2.forceUpdate,
    orientation: "vertical",
    isOpen,
    onToggle,
    onOpen,
    onClose,
    menuRef,
    buttonRef,
    focusedIndex,
    closeOnSelect,
    closeOnBlur,
    autoSelect,
    setFocusedIndex,
    isLazy,
    lazyBehavior
  };
}
function useMenuButton(props, externalRef) {
  if (props === void 0) {
    props = {};
  }
  if (externalRef === void 0) {
    externalRef = null;
  }
  var menu2 = useMenuContext();
  var onToggle = menu2.onToggle, popper2 = menu2.popper, openAndFocusFirstItem = menu2.openAndFocusFirstItem, openAndFocusLastItem = menu2.openAndFocusLastItem;
  var onKeyDown = React48.useCallback(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      Enter: openAndFocusFirstItem,
      ArrowDown: openAndFocusFirstItem,
      ArrowUp: openAndFocusLastItem
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      event.stopPropagation();
      action(event);
    }
  }, [openAndFocusFirstItem, openAndFocusLastItem]);
  return _extends34({}, props, {
    ref: mergeRefs(menu2.buttonRef, externalRef, popper2.referenceRef),
    id: menu2.buttonId,
    "data-active": dataAttr(menu2.isOpen),
    "aria-expanded": menu2.isOpen,
    "aria-haspopup": "menu",
    "aria-controls": menu2.menuId,
    onClick: callAllHandlers(props.onClick, onToggle),
    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)
  });
}
function isTargetMenuItem(target) {
  var _target$getAttribute;
  return isHTMLElement(target) && !!((_target$getAttribute = target.getAttribute("role")) != null && _target$getAttribute.startsWith("menuitem"));
}
function useMenuList(props, ref) {
  if (props === void 0) {
    props = {};
  }
  if (ref === void 0) {
    ref = null;
  }
  var menu2 = useMenuContext();
  if (!menu2) {
    throw new Error("useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>");
  }
  var focusedIndex = menu2.focusedIndex, setFocusedIndex = menu2.setFocusedIndex, menuRef = menu2.menuRef, isOpen = menu2.isOpen, onClose = menu2.onClose, menuId = menu2.menuId, isLazy = menu2.isLazy, lazyBehavior = menu2.lazyBehavior, animated = menu2.unstable__animationState;
  var descendants = useMenuDescendantsContext();
  var createTypeaheadHandler = useShortcut({
    preventDefault: function preventDefault(event) {
      return event.key !== " " && isTargetMenuItem(event.target);
    }
  });
  var onKeyDown = React48.useCallback(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      Tab: function Tab2(event2) {
        return event2.preventDefault();
      },
      Escape: onClose,
      ArrowDown: function ArrowDown() {
        var next2 = descendants.nextEnabled(focusedIndex);
        if (next2)
          setFocusedIndex(next2.index);
      },
      ArrowUp: function ArrowUp() {
        var prev2 = descendants.prevEnabled(focusedIndex);
        if (prev2)
          setFocusedIndex(prev2.index);
      }
    };
    var fn6 = keyMap[eventKey];
    if (fn6) {
      event.preventDefault();
      fn6(event);
      return;
    }
    var onTypeahead = createTypeaheadHandler(function(character2) {
      var nextItem = getNextItemFromSearch(descendants.values(), character2, function(item) {
        var _item$node$textConten, _item$node;
        return (_item$node$textConten = item == null ? void 0 : (_item$node = item.node) == null ? void 0 : _item$node.textContent) != null ? _item$node$textConten : "";
      }, descendants.item(focusedIndex));
      if (nextItem) {
        var index2 = descendants.indexOf(nextItem.node);
        setFocusedIndex(index2);
      }
    });
    if (isTargetMenuItem(event.target)) {
      onTypeahead(event);
    }
  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);
  var hasBeenOpened = React48.useRef(false);
  if (isOpen) {
    hasBeenOpened.current = true;
  }
  var shouldRenderChildren = determineLazyBehavior({
    hasBeenSelected: hasBeenOpened.current,
    isLazy,
    lazyBehavior,
    isSelected: animated.present
  });
  return _extends34({}, props, {
    ref: mergeRefs(menuRef, ref),
    children: shouldRenderChildren ? props.children : null,
    tabIndex: -1,
    role: "menu",
    id: menuId,
    style: _extends34({}, props.style, {
      transformOrigin: "var(--popper-transform-origin)"
    }),
    "aria-orientation": "vertical",
    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)
  });
}
function useMenuPositioner(props) {
  if (props === void 0) {
    props = {};
  }
  var _useMenuContext = useMenuContext(), popper2 = _useMenuContext.popper, isOpen = _useMenuContext.isOpen;
  return popper2.getPopperProps(_extends34({}, props, {
    style: _extends34({
      visibility: isOpen ? "visible" : "hidden"
    }, props.style)
  }));
}
function useMenuItem(props, externalRef) {
  if (props === void 0) {
    props = {};
  }
  if (externalRef === void 0) {
    externalRef = null;
  }
  var _props2 = props, onMouseEnterProp = _props2.onMouseEnter, onMouseMoveProp = _props2.onMouseMove, onMouseLeaveProp = _props2.onMouseLeave, onClickProp = _props2.onClick, isDisabled2 = _props2.isDisabled, isFocusable2 = _props2.isFocusable, closeOnSelect = _props2.closeOnSelect, typeProp = _props2.type, htmlProps = _objectWithoutPropertiesLoose27(_props2, _excluded2$14);
  var menu2 = useMenuContext();
  var setFocusedIndex = menu2.setFocusedIndex, focusedIndex = menu2.focusedIndex, menuCloseOnSelect = menu2.closeOnSelect, onClose = menu2.onClose, menuRef = menu2.menuRef, isOpen = menu2.isOpen, menuId = menu2.menuId;
  var ref = React48.useRef(null);
  var id2 = menuId + "-menuitem-" + useId();
  var _useMenuDescendant = useMenuDescendant({
    disabled: isDisabled2 && !isFocusable2
  }), index2 = _useMenuDescendant.index, register = _useMenuDescendant.register;
  var onMouseEnter = React48.useCallback(function(event) {
    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);
    if (isDisabled2)
      return;
    setFocusedIndex(index2);
  }, [setFocusedIndex, index2, isDisabled2, onMouseEnterProp]);
  var onMouseMove = React48.useCallback(function(event) {
    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);
    if (ref.current && !isActiveElement(ref.current)) {
      onMouseEnter(event);
    }
  }, [onMouseEnter, onMouseMoveProp]);
  var onMouseLeave = React48.useCallback(function(event) {
    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);
    if (isDisabled2)
      return;
    setFocusedIndex(-1);
  }, [setFocusedIndex, isDisabled2, onMouseLeaveProp]);
  var onClick = React48.useCallback(function(event) {
    onClickProp == null ? void 0 : onClickProp(event);
    if (!isTargetMenuItem(event.currentTarget))
      return;
    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {
      onClose();
    }
  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);
  var isFocused = index2 === focusedIndex;
  var trulyDisabled = isDisabled2 && !isFocusable2;
  useUpdateEffect(function() {
    if (!isOpen)
      return;
    if (isFocused && !trulyDisabled && ref.current) {
      focus(ref.current, {
        nextTick: true,
        selectTextIfInput: false,
        preventScroll: false
      });
    } else if (menuRef.current && !isActiveElement(menuRef.current)) {
      focus(menuRef.current, {
        preventScroll: false
      });
    }
  }, [isFocused, trulyDisabled, menuRef, isOpen]);
  var clickableProps = useClickable({
    onClick,
    onMouseEnter,
    onMouseMove,
    onMouseLeave,
    ref: mergeRefs(register, ref, externalRef),
    isDisabled: isDisabled2,
    isFocusable: isFocusable2
  });
  return _extends34({}, htmlProps, clickableProps, {
    type: typeProp != null ? typeProp : clickableProps.type,
    id: id2,
    role: "menuitem",
    tabIndex: isFocused ? 0 : -1
  });
}
function useMenuOption(props, ref) {
  if (props === void 0) {
    props = {};
  }
  if (ref === void 0) {
    ref = null;
  }
  var _props3 = props, _props3$type = _props3.type, type = _props3$type === void 0 ? "radio" : _props3$type, isChecked = _props3.isChecked, rest = _objectWithoutPropertiesLoose27(_props3, _excluded3$1);
  var ownProps = useMenuItem(rest, ref);
  return _extends34({}, ownProps, {
    role: "menuitem" + type,
    "aria-checked": isChecked
  });
}
function useMenuOptionGroup(props) {
  if (props === void 0) {
    props = {};
  }
  var _props4 = props, children = _props4.children, _props4$type = _props4.type, type = _props4$type === void 0 ? "radio" : _props4$type, valueProp = _props4.value, defaultValue = _props4.defaultValue, onChangeProp = _props4.onChange, htmlProps = _objectWithoutPropertiesLoose27(_props4, _excluded4$1);
  var isRadio2 = type === "radio";
  var fallback = isRadio2 ? "" : [];
  var _useControllableState = useControllableState({
    defaultValue: defaultValue != null ? defaultValue : fallback,
    value: valueProp,
    onChange: onChangeProp
  }), value = _useControllableState[0], setValue = _useControllableState[1];
  var onChange = React48.useCallback(function(selectedValue) {
    if (type === "radio" && isString(value)) {
      setValue(selectedValue);
    }
    if (type === "checkbox" && isArray(value)) {
      var nextValue = value.includes(selectedValue) ? removeItem(value, selectedValue) : addItem(value, selectedValue);
      setValue(nextValue);
    }
  }, [value, setValue, type]);
  var validChildren = getValidChildren(children);
  var clones = validChildren.map(function(child) {
    if (child.type.id !== "MenuItemOption")
      return child;
    var onClick = function onClick2(event) {
      onChange(child.props.value);
      child.props.onClick == null ? void 0 : child.props.onClick(event);
    };
    var isChecked = type === "radio" ? child.props.value === value : value.includes(child.props.value);
    return React48.cloneElement(child, {
      type,
      onClick,
      isChecked
    });
  });
  return _extends34({}, htmlProps, {
    children: clones
  });
}
function useMenuState() {
  var _useMenuContext2 = useMenuContext(), isOpen = _useMenuContext2.isOpen, onClose = _useMenuContext2.onClose;
  return {
    isOpen,
    onClose
  };
}
var _excluded39 = ["descendants"];
var _excluded212 = ["children", "as"];
var _excluded310 = ["rootProps"];
var _excluded44 = ["type"];
var _excluded53 = ["icon", "iconSpacing", "command", "commandSpacing", "children"];
var _excluded62 = ["icon", "iconSpacing"];
var _excluded72 = ["className", "title"];
var _excluded82 = ["title", "children", "className"];
var _excluded92 = ["className", "children"];
var _excluded102 = ["className"];
var Menu2 = function Menu3(props) {
  var children = props.children;
  var styles3 = useMultiStyleConfig("Menu", props);
  var ownProps = omitThemingProps2(props);
  var _useTheme = useTheme3(), direction3 = _useTheme.direction;
  var _useMenu = useMenu(_extends34({}, ownProps, {
    direction: direction3
  })), descendants = _useMenu.descendants, ctx = _objectWithoutPropertiesLoose27(_useMenu, _excluded39);
  var context = React48.useMemo(function() {
    return ctx;
  }, [ctx]);
  var isOpen = context.isOpen, onClose = context.onClose, forceUpdate = context.forceUpdate;
  return React48.createElement(MenuDescendantsProvider, {
    value: descendants
  }, React48.createElement(MenuProvider, {
    value: context
  }, React48.createElement(StylesProvider2, {
    value: styles3
  }, runIfFn(children, {
    isOpen,
    onClose,
    forceUpdate
  }))));
};
if (__DEV__) {
  Menu2.displayName = "Menu";
}
var StyledMenuButton = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React48.createElement(chakra2.button, _extends34({
    ref
  }, props, {
    __css: _extends34({
      display: "inline-flex",
      appearance: "none",
      alignItems: "center",
      outline: 0
    }, styles3.button)
  }));
});
var MenuButton = forwardRef5(function(props, ref) {
  props.children;
  var As = props.as, rest = _objectWithoutPropertiesLoose27(props, _excluded212);
  var buttonProps = useMenuButton(rest, ref);
  var Element2 = As || StyledMenuButton;
  return React48.createElement(Element2, _extends34({}, buttonProps, {
    className: cx("chakra-menu__menu-button", props.className)
  }), React48.createElement(chakra2.span, {
    __css: {
      pointerEvents: "none",
      flex: "1 1 auto",
      minW: 0
    }
  }, props.children));
});
if (__DEV__) {
  MenuButton.displayName = "MenuButton";
}
var motionVariants = {
  enter: {
    visibility: "visible",
    opacity: 1,
    scale: 1,
    transition: {
      duration: 0.2,
      ease: [0.4, 0, 0.2, 1]
    }
  },
  exit: {
    transitionEnd: {
      visibility: "hidden"
    },
    opacity: 0,
    scale: 0.8,
    transition: {
      duration: 0.1,
      easings: "easeOut"
    }
  }
};
function __motion2(el) {
  var m2 = motion;
  if ("custom" in m2 && typeof m2.custom === "function") {
    return m2.custom(el);
  }
  return m2(el);
}
var MenuTransition = __motion2(chakra2.div);
var MenuList = forwardRef5(function(props, ref) {
  var _props$zIndex, _styles$list;
  var rootProps = props.rootProps, rest = _objectWithoutPropertiesLoose27(props, _excluded310);
  var _useMenuContext = useMenuContext(), isOpen = _useMenuContext.isOpen, onTransitionEnd = _useMenuContext.onTransitionEnd, animated = _useMenuContext.unstable__animationState;
  var ownProps = useMenuList(rest, ref);
  var positionerProps = useMenuPositioner(rootProps);
  var styles3 = useStyles2();
  return React48.createElement(chakra2.div, _extends34({}, positionerProps, {
    __css: {
      zIndex: (_props$zIndex = props.zIndex) != null ? _props$zIndex : (_styles$list = styles3.list) == null ? void 0 : _styles$list.zIndex
    }
  }), React48.createElement(MenuTransition, _extends34({}, ownProps, {
    onUpdate: onTransitionEnd,
    onAnimationComplete: callAll(animated.onComplete, ownProps.onAnimationComplete),
    className: cx("chakra-menu__menu-list", ownProps.className),
    variants: motionVariants,
    initial: false,
    animate: isOpen ? "enter" : "exit",
    __css: _extends34({
      outline: 0
    }, styles3.list)
  })));
});
if (__DEV__) {
  MenuList.displayName = "MenuList";
}
var StyledMenuItem = forwardRef5(function(props, ref) {
  var type = props.type, rest = _objectWithoutPropertiesLoose27(props, _excluded44);
  var styles3 = useStyles2();
  var btnType = rest.as || type ? type != null ? type : void 0 : "button";
  var buttonStyles = React48.useMemo(function() {
    return _extends34({
      textDecoration: "none",
      color: "inherit",
      userSelect: "none",
      display: "flex",
      width: "100%",
      alignItems: "center",
      textAlign: "start",
      flex: "0 0 auto",
      outline: 0
    }, styles3.item);
  }, [styles3.item]);
  return React48.createElement(chakra2.button, _extends34({
    ref,
    type: btnType
  }, rest, {
    __css: buttonStyles
  }));
});
var MenuItem = forwardRef5(function(props, ref) {
  var icon = props.icon, _props$iconSpacing = props.iconSpacing, iconSpacing3 = _props$iconSpacing === void 0 ? "0.75rem" : _props$iconSpacing, command = props.command, _props$commandSpacing = props.commandSpacing, commandSpacing = _props$commandSpacing === void 0 ? "0.75rem" : _props$commandSpacing, children = props.children, rest = _objectWithoutPropertiesLoose27(props, _excluded53);
  var menuitemProps = useMenuItem(rest, ref);
  var shouldWrap = icon || command;
  var _children = shouldWrap ? React48.createElement("span", {
    style: {
      pointerEvents: "none",
      flex: 1
    }
  }, children) : children;
  return React48.createElement(StyledMenuItem, _extends34({}, menuitemProps, {
    className: cx("chakra-menu__menuitem", menuitemProps.className)
  }), icon && React48.createElement(MenuIcon, {
    fontSize: "0.8em",
    marginEnd: iconSpacing3
  }, icon), _children, command && React48.createElement(MenuCommand, {
    marginStart: commandSpacing
  }, command));
});
if (__DEV__) {
  MenuItem.displayName = "MenuItem";
}
var CheckIcon5 = function CheckIcon6(props) {
  return React48.createElement("svg", _extends34({
    viewBox: "0 0 14 14",
    width: "1em",
    height: "1em"
  }, props), React48.createElement("polygon", {
    fill: "currentColor",
    points: "5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039"
  }));
};
var MenuItemOption = forwardRef5(function(props, ref) {
  var icon = props.icon, _props$iconSpacing2 = props.iconSpacing, iconSpacing3 = _props$iconSpacing2 === void 0 ? "0.75rem" : _props$iconSpacing2, rest = _objectWithoutPropertiesLoose27(props, _excluded62);
  var optionProps = useMenuOption(rest, ref);
  return React48.createElement(StyledMenuItem, _extends34({}, optionProps, {
    className: cx("chakra-menu__menuitem-option", rest.className)
  }), icon !== null && React48.createElement(MenuIcon, {
    fontSize: "0.8em",
    marginEnd: iconSpacing3,
    opacity: props.isChecked ? 1 : 0
  }, icon || React48.createElement(CheckIcon5, null)), React48.createElement("span", {
    style: {
      flex: 1
    }
  }, optionProps.children));
});
MenuItemOption.id = "MenuItemOption";
if (__DEV__) {
  MenuItemOption.displayName = "MenuItemOption";
}
var MenuOptionGroup = function MenuOptionGroup2(props) {
  var className = props.className, title = props.title, rest = _objectWithoutPropertiesLoose27(props, _excluded72);
  var ownProps = useMenuOptionGroup(rest);
  return React48.createElement(MenuGroup, _extends34({
    title,
    className: cx("chakra-menu__option-group", className)
  }, ownProps));
};
if (__DEV__) {
  MenuOptionGroup.displayName = "MenuOptionGroup";
}
var MenuGroup = forwardRef5(function(props, ref) {
  var title = props.title, children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose27(props, _excluded82);
  var _className = cx("chakra-menu__group__title", className);
  var styles3 = useStyles2();
  return React48.createElement("div", {
    ref,
    className: "chakra-menu__group",
    role: "group"
  }, title && React48.createElement(chakra2.p, _extends34({
    className: _className
  }, rest, {
    __css: styles3.groupTitle
  }), title), children);
});
if (__DEV__) {
  MenuGroup.displayName = "MenuGroup";
}
var MenuCommand = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React48.createElement(chakra2.span, _extends34({
    ref
  }, props, {
    __css: styles3.command,
    className: "chakra-menu__command"
  }));
});
if (__DEV__) {
  MenuCommand.displayName = "MenuCommand";
}
var MenuIcon = function MenuIcon2(props) {
  var className = props.className, children = props.children, rest = _objectWithoutPropertiesLoose27(props, _excluded92);
  var child = React48.Children.only(children);
  var clone = React48.isValidElement(child) ? React48.cloneElement(child, {
    focusable: "false",
    "aria-hidden": true,
    className: cx("chakra-menu__icon", child.props.className)
  }) : null;
  var _className = cx("chakra-menu__icon-wrapper", className);
  return React48.createElement(chakra2.span, _extends34({
    className: _className
  }, rest, {
    __css: {
      flexShrink: 0
    }
  }), clone);
};
if (__DEV__) {
  MenuIcon.displayName = "MenuIcon";
}
var MenuDivider = function MenuDivider2(props) {
  var className = props.className, rest = _objectWithoutPropertiesLoose27(props, _excluded102);
  var styles3 = useStyles2();
  return React48.createElement(chakra2.hr, _extends34({
    role: "separator",
    "aria-orientation": "horizontal",
    className: cx("chakra-menu__divider", className)
  }, rest, {
    __css: styles3.divider
  }));
};
if (__DEV__) {
  MenuDivider.displayName = "MenuDivider";
}

// node_modules/.pnpm/@chakra-ui+focus-lock@1.2.6_awjwow2nl7sxfgmpupsl3xjf64/node_modules/@chakra-ui/focus-lock/dist/chakra-ui-focus-lock.esm.js
var React60 = __toESM(require_react());

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/Combination.js
init_objectWithoutPropertiesLoose();
init_extends();
var React56 = __toESM(require_react());

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/Lock.js
init_extends();
var React53 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/constants.js
var FOCUS_GROUP = "data-focus-lock";
var FOCUS_DISABLED = "data-focus-lock-disabled";
var FOCUS_ALLOW = "data-no-focus-lock";
var FOCUS_AUTO = "data-autofocus-inside";

// node_modules/.pnpm/use-callback-ref@1.3.0_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef3(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// node_modules/.pnpm/use-callback-ref@1.3.0_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react77 = __toESM(require_react());
function useCallbackRef3(initialValue, callback) {
  var ref = (0, import_react77.useState)(function() {
    return {
      value: initialValue,
      callback,
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last3 = ref.value;
          if (last3 !== value) {
            ref.value = value;
            ref.callback(value, last3);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// node_modules/.pnpm/use-callback-ref@1.3.0_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-callback-ref/dist/es2015/useMergeRef.js
function useMergeRefs2(refs, defaultValue) {
  return useCallbackRef3(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef3(ref, newValue);
    });
  });
}

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/FocusGuard.js
var React49 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var hiddenGuard = {
  width: "1px",
  height: "0px",
  padding: 0,
  overflow: "hidden",
  position: "fixed",
  top: "1px",
  left: "1px"
};
var InFocusGuard = function InFocusGuard2(_ref2) {
  var children = _ref2.children;
  return React49.createElement(React49.Fragment, null, React49.createElement("div", {
    key: "guard-first",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }), children, children && React49.createElement("div", {
    key: "guard-last",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }));
};
InFocusGuard.propTypes = true ? {
  children: import_prop_types.default.node
} : {};
InFocusGuard.defaultProps = {
  children: null
};

// node_modules/.pnpm/use-sidecar@1.1.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-sidecar/dist/es2015/hoc.js
var React50 = __toESM(require_react());

// node_modules/.pnpm/use-sidecar@1.1.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-sidecar/dist/es2015/hook.js
var import_react78 = __toESM(require_react());

// node_modules/.pnpm/use-sidecar@1.1.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a2) {
  return a2;
}
function innerCreateMedium(defaults2, middleware2) {
  if (middleware2 === void 0) {
    middleware2 = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults2;
    },
    useMedium: function(data) {
      var item = middleware2(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x) {
          return x !== item;
        });
      };
    },
    assignSyncMedium: function(cb2) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
      }
      buffer = {
        push: function(x) {
          return cb2(x);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb2) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb2);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb2);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x) {
          pendingQueue.push(x);
          cycle();
        },
        filter: function(filter6) {
          pendingQueue = pendingQueue.filter(filter6);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createMedium(defaults2, middleware2) {
  if (middleware2 === void 0) {
    middleware2 = ItoI;
  }
  return innerCreateMedium(defaults2, middleware2);
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}

// node_modules/.pnpm/use-sidecar@1.1.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-sidecar/dist/es2015/renderProp.js
var React51 = __toESM(require_react());
var import_react79 = __toESM(require_react());

// node_modules/.pnpm/use-sidecar@1.1.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/use-sidecar/dist/es2015/exports.js
var React52 = __toESM(require_react());
var SideCar = function(_a) {
  var sideCar2 = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar2) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar2.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React52.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/medium.js
var mediumFocus = createMedium({}, function(_ref2) {
  var target = _ref2.target, currentTarget = _ref2.currentTarget;
  return {
    target,
    currentTarget
  };
});
var mediumBlur = createMedium();
var mediumEffect = createMedium();
var mediumSidecar = createSidecarMedium({
  async: true
});

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/Lock.js
var emptyArray = [];
var FocusLock = React53.forwardRef(function FocusLockUI(props, parentRef) {
  var _extends210;
  var _React$useState = React53.useState(), realObserved = _React$useState[0], setObserved = _React$useState[1];
  var observed = React53.useRef();
  var isActive = React53.useRef(false);
  var originalFocusedElement = React53.useRef(null);
  var children = props.children, disabled3 = props.disabled, noFocusGuards = props.noFocusGuards, persistentFocus = props.persistentFocus, crossFrame = props.crossFrame, autoFocus = props.autoFocus, allowTextSelection = props.allowTextSelection, group = props.group, className = props.className, whiteList = props.whiteList, _props$shards = props.shards, shards = _props$shards === void 0 ? emptyArray : _props$shards, _props$as = props.as, Container5 = _props$as === void 0 ? "div" : _props$as, _props$lockProps = props.lockProps, containerProps = _props$lockProps === void 0 ? {} : _props$lockProps, SideCar2 = props.sideCar, shouldReturnFocus = props.returnFocus, onActivationCallback = props.onActivation, onDeactivationCallback = props.onDeactivation;
  var _React$useState2 = React53.useState({}), id2 = _React$useState2[0];
  var onActivation = React53.useCallback(function() {
    originalFocusedElement.current = originalFocusedElement.current || document && document.activeElement;
    if (observed.current && onActivationCallback) {
      onActivationCallback(observed.current);
    }
    isActive.current = true;
  }, [onActivationCallback]);
  var onDeactivation = React53.useCallback(function() {
    isActive.current = false;
    if (onDeactivationCallback) {
      onDeactivationCallback(observed.current);
    }
  }, [onDeactivationCallback]);
  var returnFocus = React53.useCallback(function(allowDefer) {
    var current = originalFocusedElement.current;
    if (Boolean(shouldReturnFocus) && current && current.focus) {
      var focusOptions = typeof shouldReturnFocus === "object" ? shouldReturnFocus : void 0;
      originalFocusedElement.current = null;
      if (allowDefer) {
        Promise.resolve().then(function() {
          return current.focus(focusOptions);
        });
      } else {
        current.focus(focusOptions);
      }
    }
  }, [shouldReturnFocus]);
  var onFocus3 = React53.useCallback(function(event) {
    if (isActive.current) {
      mediumFocus.useMedium(event);
    }
  }, []);
  var onBlur3 = mediumBlur.useMedium;
  var setObserveNode = React53.useCallback(function(newObserved) {
    if (observed.current !== newObserved) {
      observed.current = newObserved;
      setObserved(newObserved);
    }
  }, []);
  if (true) {
    if (typeof allowTextSelection !== "undefined") {
      console.warn("React-Focus-Lock: allowTextSelection is deprecated and enabled by default");
    }
    React53.useEffect(function() {
      if (!observed.current) {
        console.error("FocusLock: could not obtain ref to internal node");
      }
    }, []);
  }
  var lockProps = _extends((_extends210 = {}, _extends210[FOCUS_DISABLED] = disabled3 && "disabled", _extends210[FOCUS_GROUP] = group, _extends210), containerProps);
  var hasLeadingGuards = noFocusGuards !== true;
  var hasTailingGuards = hasLeadingGuards && noFocusGuards !== "tail";
  var mergedRef = useMergeRefs2([parentRef, setObserveNode]);
  return React53.createElement(React53.Fragment, null, hasLeadingGuards && [
    React53.createElement("div", {
      key: "guard-first",
      "data-focus-guard": true,
      tabIndex: disabled3 ? -1 : 0,
      style: hiddenGuard
    }),
    React53.createElement("div", {
      key: "guard-nearest",
      "data-focus-guard": true,
      tabIndex: disabled3 ? -1 : 1,
      style: hiddenGuard
    })
  ], !disabled3 && React53.createElement(SideCar2, {
    id: id2,
    sideCar: mediumSidecar,
    observed: realObserved,
    disabled: disabled3,
    persistentFocus,
    crossFrame,
    autoFocus,
    whiteList,
    shards,
    onActivation,
    onDeactivation,
    returnFocus
  }), React53.createElement(Container5, _extends({
    ref: mergedRef
  }, lockProps, {
    className,
    onBlur: onBlur3,
    onFocus: onFocus3
  }), children), hasTailingGuards && React53.createElement("div", {
    "data-focus-guard": true,
    tabIndex: disabled3 ? -1 : 0,
    style: hiddenGuard
  }));
});
FocusLock.propTypes = true ? {
  children: import_prop_types2.node,
  disabled: import_prop_types2.bool,
  returnFocus: (0, import_prop_types2.oneOfType)([import_prop_types2.bool, import_prop_types2.object]),
  noFocusGuards: import_prop_types2.bool,
  allowTextSelection: import_prop_types2.bool,
  autoFocus: import_prop_types2.bool,
  persistentFocus: import_prop_types2.bool,
  crossFrame: import_prop_types2.bool,
  group: import_prop_types2.string,
  className: import_prop_types2.string,
  whiteList: import_prop_types2.func,
  shards: (0, import_prop_types2.arrayOf)(import_prop_types2.any),
  as: (0, import_prop_types2.oneOfType)([import_prop_types2.string, import_prop_types2.func, import_prop_types2.object]),
  lockProps: import_prop_types2.object,
  onActivation: import_prop_types2.func,
  onDeactivation: import_prop_types2.func,
  sideCar: import_prop_types2.any.isRequired
} : {};
FocusLock.defaultProps = {
  children: void 0,
  disabled: false,
  returnFocus: false,
  noFocusGuards: false,
  autoFocus: true,
  persistentFocus: false,
  crossFrame: true,
  allowTextSelection: void 0,
  group: void 0,
  className: void 0,
  whiteList: void 0,
  shards: void 0,
  as: "div",
  lockProps: {},
  onActivation: void 0,
  onDeactivation: void 0
};
var Lock_default = FocusLock;

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/Trap.js
var React55 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/.pnpm/@babel+runtime@7.18.3/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
init_setPrototypeOf();
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/.pnpm/react-clientside-effect@1.2.6_react@16.14.0/node_modules/react-clientside-effect/lib/index.es.js
init_defineProperty();
var import_react80 = __toESM(require_react());
function withSideEffect(reducePropsToState2, handleStateChangeOnClient2) {
  if (true) {
    if (typeof reducePropsToState2 !== "function") {
      throw new Error("Expected reducePropsToState to be a function.");
    }
    if (typeof handleStateChangeOnClient2 !== "function") {
      throw new Error("Expected handleStateChangeOnClient to be a function.");
    }
  }
  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || "Component";
  }
  return function wrap6(WrappedComponent) {
    if (true) {
      if (typeof WrappedComponent !== "function") {
        throw new Error("Expected WrappedComponent to be a React component.");
      }
    }
    var mountedInstances = [];
    var state3;
    function emitChange() {
      state3 = reducePropsToState2(mountedInstances.map(function(instance) {
        return instance.props;
      }));
      handleStateChangeOnClient2(state3);
    }
    var SideEffect = function(_PureComponent) {
      _inheritsLoose(SideEffect2, _PureComponent);
      function SideEffect2() {
        return _PureComponent.apply(this, arguments) || this;
      }
      SideEffect2.peek = function peek2() {
        return state3;
      };
      var _proto = SideEffect2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        mountedInstances.push(this);
        emitChange();
      };
      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        var index2 = mountedInstances.indexOf(this);
        mountedInstances.splice(index2, 1);
        emitChange();
      };
      _proto.render = function render3() {
        return import_react80.default.createElement(WrappedComponent, this.props);
      };
      return SideEffect2;
    }(import_react80.PureComponent);
    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");
    return SideEffect;
  };
}
var index_es_default = withSideEffect;

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/array.js
var toArray = function(a2) {
  var ret = Array(a2.length);
  for (var i = 0; i < a2.length; ++i) {
    ret[i] = a2[i];
  }
  return ret;
};
var asArray = function(a2) {
  return Array.isArray(a2) ? a2 : [a2];
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/all-affected.js
var filterNested = function(nodes) {
  var contained = /* @__PURE__ */ new Set();
  var l = nodes.length;
  for (var i = 0; i < l; i += 1) {
    for (var j = i + 1; j < l; j += 1) {
      var position4 = nodes[i].compareDocumentPosition(nodes[j]);
      if ((position4 & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) {
        contained.add(j);
      }
      if ((position4 & Node.DOCUMENT_POSITION_CONTAINS) > 0) {
        contained.add(i);
      }
    }
  }
  return nodes.filter(function(_, index2) {
    return !contained.has(index2);
  });
};
var getTopParent = function(node3) {
  return node3.parentNode ? getTopParent(node3.parentNode) : node3;
};
var getAllAffectedNodes = function(node3) {
  var nodes = asArray(node3);
  return nodes.filter(Boolean).reduce(function(acc, currentNode) {
    var group = currentNode.getAttribute(FOCUS_GROUP);
    acc.push.apply(acc, group ? filterNested(toArray(getTopParent(currentNode).querySelectorAll("[" + FOCUS_GROUP + '="' + group + '"]:not([' + FOCUS_DISABLED + '="disabled"])'))) : [currentNode]);
    return acc;
  }, []);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/is.js
var isElementHidden = function(node3) {
  if (node3.nodeType !== Node.ELEMENT_NODE) {
    return false;
  }
  var computedStyle = window.getComputedStyle(node3, null);
  if (!computedStyle || !computedStyle.getPropertyValue) {
    return false;
  }
  return computedStyle.getPropertyValue("display") === "none" || computedStyle.getPropertyValue("visibility") === "hidden";
};
var isVisibleUncached = function(node3, checkParent) {
  return !node3 || node3 === document || node3 && node3.nodeType === Node.DOCUMENT_NODE || !isElementHidden(node3) && checkParent(node3.parentNode && node3.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? node3.parentNode.host : node3.parentNode);
};
var isVisibleCached = function(visibilityCache, node3) {
  var cached = visibilityCache.get(node3);
  if (cached !== void 0) {
    return cached;
  }
  var result = isVisibleUncached(node3, isVisibleCached.bind(void 0, visibilityCache));
  visibilityCache.set(node3, result);
  return result;
};
var notHiddenInput = function(node3) {
  return !((node3.tagName === "INPUT" || node3.tagName === "BUTTON") && (node3.type === "hidden" || node3.disabled));
};
var isGuard = function(node3) {
  return Boolean(node3 && node3.dataset && node3.dataset.focusGuard);
};
var isNotAGuard = function(node3) {
  return !isGuard(node3);
};
var isDefined = function(x) {
  return Boolean(x);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/tabOrder.js
var tabSort = function(a2, b2) {
  var tabDiff = a2.tabIndex - b2.tabIndex;
  var indexDiff = a2.index - b2.index;
  if (tabDiff) {
    if (!a2.tabIndex) {
      return 1;
    }
    if (!b2.tabIndex) {
      return -1;
    }
  }
  return tabDiff || indexDiff;
};
var orderByTabIndex = function(nodes, filterNegative, keepGuards) {
  return toArray(nodes).map(function(node3, index2) {
    return {
      node: node3,
      index: index2,
      tabIndex: keepGuards && node3.tabIndex === -1 ? (node3.dataset || {}).focusGuard ? 0 : -1 : node3.tabIndex
    };
  }).filter(function(data) {
    return !filterNegative || data.tabIndex >= 0;
  }).sort(tabSort);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/tabbables.js
var tabbables = [
  "button:enabled",
  "select:enabled",
  "textarea:enabled",
  "input:enabled",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[tabindex]",
  "[contenteditable]",
  "[autofocus]"
];

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/tabUtils.js
var queryTabbables = tabbables.join(",");
var queryGuardTabbables = queryTabbables + ", [data-focus-guard]";
var getFocusables = function(parents, withGuards) {
  return parents.reduce(function(acc, parent) {
    return acc.concat(toArray(parent.querySelectorAll(withGuards ? queryGuardTabbables : queryTabbables)), parent.parentNode ? toArray(parent.parentNode.querySelectorAll(queryTabbables)).filter(function(node3) {
      return node3 === parent;
    }) : []);
  }, []);
};
var getParentAutofocusables = function(parent) {
  var parentFocus = parent.querySelectorAll("[" + FOCUS_AUTO + "]");
  return toArray(parentFocus).map(function(node3) {
    return getFocusables([node3]);
  }).reduce(function(acc, nodes) {
    return acc.concat(nodes);
  }, []);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/DOMutils.js
var filterFocusable = function(nodes, visibilityCache) {
  return toArray(nodes).filter(function(node3) {
    return isVisibleCached(visibilityCache, node3);
  }).filter(function(node3) {
    return notHiddenInput(node3);
  });
};
var getTabbableNodes = function(topNodes, visibilityCache, withGuards) {
  return orderByTabIndex(filterFocusable(getFocusables(topNodes, withGuards), visibilityCache), true, withGuards);
};
var getAllTabbableNodes = function(topNodes, visibilityCache) {
  return orderByTabIndex(filterFocusable(getFocusables(topNodes), visibilityCache), false);
};
var parentAutofocusables = function(topNode, visibilityCache) {
  return filterFocusable(getParentAutofocusables(topNode), visibilityCache);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/parenting.js
var getParents = function(node3, parents) {
  if (parents === void 0) {
    parents = [];
  }
  parents.push(node3);
  if (node3.parentNode) {
    getParents(node3.parentNode, parents);
  }
  return parents;
};
var getCommonParent = function(nodeA, nodeB) {
  var parentsA = getParents(nodeA);
  var parentsB = getParents(nodeB);
  for (var i = 0; i < parentsA.length; i += 1) {
    var currentParent = parentsA[i];
    if (parentsB.indexOf(currentParent) >= 0) {
      return currentParent;
    }
  }
  return false;
};
var getTopCommonParent = function(baseActiveElement, leftEntry, rightEntries) {
  var activeElements = asArray(baseActiveElement);
  var leftEntries = asArray(leftEntry);
  var activeElement = activeElements[0];
  var topCommon = false;
  leftEntries.filter(Boolean).forEach(function(entry) {
    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;
    rightEntries.filter(Boolean).forEach(function(subEntry) {
      var common = getCommonParent(activeElement, subEntry);
      if (common) {
        if (!topCommon || common.contains(topCommon)) {
          topCommon = common;
        } else {
          topCommon = getCommonParent(common, topCommon);
        }
      }
    });
  });
  return topCommon;
};
var allParentAutofocusables = function(entries, visibilityCache) {
  return entries.reduce(function(acc, node3) {
    return acc.concat(parentAutofocusables(node3, visibilityCache));
  }, []);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/focusables.js
var getFocusabledIn = function(topNode) {
  var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);
  var commonParent = getTopCommonParent(topNode, topNode, entries);
  var visibilityCache = /* @__PURE__ */ new Map();
  var outerNodes = getTabbableNodes([commonParent], visibilityCache, true);
  var innerElements = getTabbableNodes(entries, visibilityCache).filter(function(_a) {
    var node3 = _a.node;
    return isNotAGuard(node3);
  }).map(function(_a) {
    var node3 = _a.node;
    return node3;
  });
  return outerNodes.map(function(_a) {
    var node3 = _a.node, index2 = _a.index;
    return {
      node: node3,
      index: index2,
      lockItem: innerElements.indexOf(node3) >= 0,
      guard: isGuard(node3)
    };
  });
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/focusInside.js
var focusInFrame = function(frame3) {
  return frame3 === document.activeElement;
};
var focusInsideIframe = function(topNode) {
  return Boolean(toArray(topNode.querySelectorAll("iframe")).some(function(node3) {
    return focusInFrame(node3);
  }));
};
var focusInside = function(topNode) {
  var activeElement = document && document.activeElement;
  if (!activeElement || activeElement.dataset && activeElement.dataset.focusGuard) {
    return false;
  }
  return getAllAffectedNodes(topNode).reduce(function(result, node3) {
    return result || node3.contains(activeElement) || focusInsideIframe(node3);
  }, false);
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/focusIsHidden.js
var focusIsHidden = function() {
  return document && toArray(document.querySelectorAll("[" + FOCUS_ALLOW + "]")).some(function(node3) {
    return node3.contains(document.activeElement);
  });
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/correctFocus.js
var isRadio = function(node3) {
  return node3.tagName === "INPUT" && node3.type === "radio";
};
var findSelectedRadio = function(node3, nodes) {
  return nodes.filter(isRadio).filter(function(el) {
    return el.name === node3.name;
  }).filter(function(el) {
    return el.checked;
  })[0] || node3;
};
var correctNode = function(node3, nodes) {
  if (isRadio(node3) && node3.name) {
    return findSelectedRadio(node3, nodes);
  }
  return node3;
};
var correctNodes = function(nodes) {
  var resultSet = /* @__PURE__ */ new Set();
  nodes.forEach(function(node3) {
    return resultSet.add(correctNode(node3, nodes));
  });
  return nodes.filter(function(node3) {
    return resultSet.has(node3);
  });
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/utils/firstFocus.js
var pickFirstFocus = function(nodes) {
  if (nodes[0] && nodes.length > 1) {
    return correctNode(nodes[0], nodes);
  }
  return nodes[0];
};
var pickFocusable = function(nodes, index2) {
  if (nodes.length > 1) {
    return nodes.indexOf(correctNode(nodes[index2], nodes));
  }
  return index2;
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/solver.js
var NEW_FOCUS = "NEW_FOCUS";
var newFocus = function(innerNodes, outerNodes, activeElement, lastNode) {
  var cnt = innerNodes.length;
  var firstFocus = innerNodes[0];
  var lastFocus = innerNodes[cnt - 1];
  var isOnGuard = isGuard(activeElement);
  if (innerNodes.indexOf(activeElement) >= 0) {
    return void 0;
  }
  var activeIndex = outerNodes.indexOf(activeElement);
  var lastIndex = lastNode ? outerNodes.indexOf(lastNode) : activeIndex;
  var lastNodeInside = lastNode ? innerNodes.indexOf(lastNode) : -1;
  var indexDiff = activeIndex - lastIndex;
  var firstNodeIndex = outerNodes.indexOf(firstFocus);
  var lastNodeIndex = outerNodes.indexOf(lastFocus);
  var correctedNodes = correctNodes(outerNodes);
  var correctedIndexDiff = correctedNodes.indexOf(activeElement) - (lastNode ? correctedNodes.indexOf(lastNode) : activeIndex);
  var returnFirstNode = pickFocusable(innerNodes, 0);
  var returnLastNode = pickFocusable(innerNodes, cnt - 1);
  if (activeIndex === -1 || lastNodeInside === -1) {
    return NEW_FOCUS;
  }
  if (!indexDiff && lastNodeInside >= 0) {
    return lastNodeInside;
  }
  if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
    return returnLastNode;
  }
  if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
    return returnFirstNode;
  }
  if (indexDiff && Math.abs(correctedIndexDiff) > 1) {
    return lastNodeInside;
  }
  if (activeIndex <= firstNodeIndex) {
    return returnLastNode;
  }
  if (activeIndex > lastNodeIndex) {
    return returnFirstNode;
  }
  if (indexDiff) {
    if (Math.abs(indexDiff) > 1) {
      return lastNodeInside;
    }
    return (cnt + lastNodeInside + indexDiff) % cnt;
  }
  return void 0;
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/focusMerge.js
var findAutoFocused = function(autoFocusables) {
  return function(node3) {
    return node3.autofocus || node3.dataset && !!node3.dataset.autofocus || autoFocusables.indexOf(node3) >= 0;
  };
};
var reorderNodes = function(srcNodes, dstNodes) {
  var remap = /* @__PURE__ */ new Map();
  dstNodes.forEach(function(entity) {
    return remap.set(entity.node, entity);
  });
  return srcNodes.map(function(node3) {
    return remap.get(node3);
  }).filter(isDefined);
};
var getFocusMerge = function(topNode, lastNode) {
  var activeElement = document && document.activeElement;
  var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);
  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);
  var visibilityCache = /* @__PURE__ */ new Map();
  var anyFocusable = getAllTabbableNodes(entries, visibilityCache);
  var innerElements = getTabbableNodes(entries, visibilityCache).filter(function(_a) {
    var node3 = _a.node;
    return isNotAGuard(node3);
  });
  if (!innerElements[0]) {
    innerElements = anyFocusable;
    if (!innerElements[0]) {
      return void 0;
    }
  }
  var outerNodes = getAllTabbableNodes([commonParent], visibilityCache).map(function(_a) {
    var node3 = _a.node;
    return node3;
  });
  var orderedInnerElements = reorderNodes(outerNodes, innerElements);
  var innerNodes = orderedInnerElements.map(function(_a) {
    var node3 = _a.node;
    return node3;
  });
  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode);
  if (newId === NEW_FOCUS) {
    var autoFocusable = anyFocusable.map(function(_a) {
      var node3 = _a.node;
      return node3;
    }).filter(findAutoFocused(allParentAutofocusables(entries, visibilityCache)));
    return {
      node: autoFocusable && autoFocusable.length ? pickFirstFocus(autoFocusable) : pickFirstFocus(innerNodes)
    };
  }
  if (newId === void 0) {
    return newId;
  }
  return orderedInnerElements[newId];
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/setFocus.js
var focusOn = function(target) {
  target.focus();
  if ("contentWindow" in target && target.contentWindow) {
    target.contentWindow.focus();
  }
};
var guardCount = 0;
var lockDisabled = false;
var setFocus = function(topNode, lastNode) {
  var focusable = getFocusMerge(topNode, lastNode);
  if (lockDisabled) {
    return;
  }
  if (focusable) {
    if (guardCount > 2) {
      console.error("FocusLock: focus-fighting detected. Only one focus management system could be active. See https://github.com/theKashey/focus-lock/#focus-fighting");
      lockDisabled = true;
      setTimeout(function() {
        lockDisabled = false;
      }, 1);
      return;
    }
    guardCount++;
    focusOn(focusable.node);
    guardCount--;
  }
};

// node_modules/.pnpm/focus-lock@0.9.2/node_modules/focus-lock/dist/es2015/index.js
var es2015_default = setFocus;

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/util.js
function deferAction(action) {
  var _window = window, setImmediate = _window.setImmediate;
  if (typeof setImmediate !== "undefined") {
    setImmediate(action);
  } else {
    setTimeout(action, 1);
  }
}
var inlineProp = function inlineProp2(name, value) {
  var obj = {};
  obj[name] = value;
  return obj;
};

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/Trap.js
var focusOnBody = function focusOnBody2() {
  return document && document.activeElement === document.body;
};
var isFreeFocus = function isFreeFocus2() {
  return focusOnBody() || focusIsHidden();
};
var lastActiveTrap = null;
var lastActiveFocus = null;
var lastPortaledElement = null;
var focusWasOutsideWindow = false;
var defaultWhitelist = function defaultWhitelist2() {
  return true;
};
var focusWhitelisted = function focusWhitelisted2(activeElement) {
  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);
};
var recordPortal = function recordPortal2(observerNode, portaledElement) {
  lastPortaledElement = {
    observerNode,
    portaledElement
  };
};
var focusIsPortaledPair = function focusIsPortaledPair2(element) {
  return lastPortaledElement && lastPortaledElement.portaledElement === element;
};
function autoGuard(startIndex, end2, step, allNodes) {
  var lastGuard = null;
  var i = startIndex;
  do {
    var item = allNodes[i];
    if (item.guard) {
      if (item.node.dataset.focusAutoGuard) {
        lastGuard = item;
      }
    } else if (item.lockItem) {
      if (i !== startIndex) {
        return;
      }
      lastGuard = null;
    } else {
      break;
    }
  } while ((i += step) !== end2);
  if (lastGuard) {
    lastGuard.node.tabIndex = 0;
  }
}
var extractRef = function extractRef2(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var focusWasOutside = function focusWasOutside2(crossFrameOption) {
  if (crossFrameOption) {
    return Boolean(focusWasOutsideWindow);
  }
  return focusWasOutsideWindow === "meanwhile";
};
var activateTrap = function activateTrap2() {
  var result = false;
  if (lastActiveTrap) {
    var _lastActiveTrap = lastActiveTrap, observed = _lastActiveTrap.observed, persistentFocus = _lastActiveTrap.persistentFocus, autoFocus = _lastActiveTrap.autoFocus, shards = _lastActiveTrap.shards, crossFrame = _lastActiveTrap.crossFrame;
    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;
    var activeElement = document && document.activeElement;
    if (workingNode) {
      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));
      if (!activeElement || focusWhitelisted(activeElement)) {
        if (persistentFocus || focusWasOutside(crossFrame) || !isFreeFocus() || !lastActiveFocus && autoFocus) {
          if (workingNode && !(focusInside(workingArea) || focusIsPortaledPair(activeElement, workingNode))) {
            if (document && !lastActiveFocus && activeElement && !autoFocus) {
              if (activeElement.blur) {
                activeElement.blur();
              }
              document.body.focus();
            } else {
              result = es2015_default(workingArea, lastActiveFocus);
              lastPortaledElement = {};
            }
          }
          focusWasOutsideWindow = false;
          lastActiveFocus = document && document.activeElement;
        }
      }
      if (document) {
        var newActiveElement = document && document.activeElement;
        var allNodes = getFocusabledIn(workingArea);
        var focusedIndex = allNodes.map(function(_ref2) {
          var node3 = _ref2.node;
          return node3;
        }).indexOf(newActiveElement);
        if (focusedIndex > -1) {
          allNodes.filter(function(_ref2) {
            var guard = _ref2.guard, node3 = _ref2.node;
            return guard && node3.dataset.focusAutoGuard;
          }).forEach(function(_ref3) {
            var node3 = _ref3.node;
            return node3.removeAttribute("tabIndex");
          });
          autoGuard(focusedIndex, allNodes.length, 1, allNodes);
          autoGuard(focusedIndex, -1, -1, allNodes);
        }
      }
    }
  }
  return result;
};
var onTrap = function onTrap2(event) {
  if (activateTrap() && event) {
    event.stopPropagation();
    event.preventDefault();
  }
};
var onBlur = function onBlur2() {
  return deferAction(activateTrap);
};
var onFocus = function onFocus2(event) {
  var source = event.target;
  var currentNode = event.currentTarget;
  if (!currentNode.contains(source)) {
    recordPortal(currentNode, source);
  }
};
var FocusWatcher = function FocusWatcher2() {
  return null;
};
var FocusTrap = function FocusTrap2(_ref4) {
  var children = _ref4.children;
  return React55.createElement("div", {
    onBlur,
    onFocus
  }, children);
};
FocusTrap.propTypes = true ? {
  children: import_prop_types3.default.node.isRequired
} : {};
var onWindowBlur = function onWindowBlur2() {
  focusWasOutsideWindow = "just";
  setTimeout(function() {
    focusWasOutsideWindow = "meanwhile";
  }, 0);
};
var attachHandler = function attachHandler2() {
  document.addEventListener("focusin", onTrap, true);
  document.addEventListener("focusout", onBlur);
  window.addEventListener("blur", onWindowBlur);
};
var detachHandler = function detachHandler2() {
  document.removeEventListener("focusin", onTrap, true);
  document.removeEventListener("focusout", onBlur);
  window.removeEventListener("blur", onWindowBlur);
};
function reducePropsToState(propsList) {
  return propsList.filter(function(_ref5) {
    var disabled3 = _ref5.disabled;
    return !disabled3;
  });
}
function handleStateChangeOnClient(traps) {
  var trap = traps.slice(-1)[0];
  if (trap && !lastActiveTrap) {
    attachHandler();
  }
  var lastTrap = lastActiveTrap;
  var sameTrap = lastTrap && trap && trap.id === lastTrap.id;
  lastActiveTrap = trap;
  if (lastTrap && !sameTrap) {
    lastTrap.onDeactivation();
    if (!traps.filter(function(_ref6) {
      var id2 = _ref6.id;
      return id2 === lastTrap.id;
    }).length) {
      lastTrap.returnFocus(!trap);
    }
  }
  if (trap) {
    lastActiveFocus = null;
    if (!sameTrap || lastTrap.observed !== trap.observed) {
      trap.onActivation();
    }
    activateTrap(true);
    deferAction(activateTrap);
  } else {
    detachHandler();
    lastActiveFocus = null;
  }
}
mediumFocus.assignSyncMedium(onFocus);
mediumBlur.assignMedium(onBlur);
mediumEffect.assignMedium(function(cb2) {
  return cb2({
    moveFocusInside: es2015_default,
    focusInside
  });
});
var Trap_default = index_es_default(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/Combination.js
var FocusLockCombination = React56.forwardRef(function FocusLockUICombination(props, ref) {
  return React56.createElement(Lock_default, _extends({
    sideCar: Trap_default,
    ref
  }, props));
});
var _ref = Lock_default.propTypes || {};
var sideCar = _ref.sideCar;
var propTypes = _objectWithoutPropertiesLoose(_ref, ["sideCar"]);
FocusLockCombination.propTypes = true ? propTypes : {};
var Combination_default = FocusLockCombination;

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/AutoFocusInside.js
init_extends();
var React57 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
var AutoFocusInside = function AutoFocusInside2(_ref2) {
  var disabled3 = _ref2.disabled, children = _ref2.children, className = _ref2.className;
  return React57.createElement("div", _extends({}, inlineProp(FOCUS_AUTO, !disabled3), {
    className
  }), children);
};
AutoFocusInside.propTypes = true ? {
  children: import_prop_types4.default.node.isRequired,
  disabled: import_prop_types4.default.bool,
  className: import_prop_types4.default.string
} : {};
AutoFocusInside.defaultProps = {
  disabled: false,
  className: void 0
};

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/MoveFocusInside.js
init_extends();
var React58 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());
var useFocusInside = function useFocusInside2(observedRef) {
  React58.useEffect(function() {
    var enabled = true;
    mediumEffect.useMedium(function(car) {
      var observed = observedRef && observedRef.current;
      if (enabled && observed) {
        if (!car.focusInside(observed)) {
          car.moveFocusInside(observed, null);
        }
      }
    });
    return function() {
      enabled = false;
    };
  }, [observedRef]);
};
function MoveFocusInside(_ref2) {
  var isDisabled2 = _ref2.disabled, className = _ref2.className, children = _ref2.children;
  var ref = React58.useRef(null);
  useFocusInside(isDisabled2 ? void 0 : ref);
  return React58.createElement("div", _extends({}, inlineProp(FOCUS_AUTO, !isDisabled2), {
    ref,
    className
  }), children);
}
MoveFocusInside.propTypes = true ? {
  children: import_prop_types5.default.node.isRequired,
  disabled: import_prop_types5.default.bool,
  className: import_prop_types5.default.string
} : {};
MoveFocusInside.defaultProps = {
  disabled: false,
  className: void 0
};

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/FreeFocusInside.js
init_extends();
var React59 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var FreeFocusInside = function FreeFocusInside2(_ref2) {
  var children = _ref2.children, className = _ref2.className;
  return React59.createElement("div", _extends({}, inlineProp(FOCUS_ALLOW, true), {
    className
  }), children);
};
FreeFocusInside.propTypes = true ? {
  children: import_prop_types6.default.node.isRequired,
  className: import_prop_types6.default.string
} : {};
FreeFocusInside.defaultProps = {
  className: void 0
};

// node_modules/.pnpm/react-focus-lock@2.5.2_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-focus-lock/dist/es2015/index.js
var es2015_default2 = Combination_default;

// node_modules/.pnpm/@chakra-ui+focus-lock@1.2.6_awjwow2nl7sxfgmpupsl3xjf64/node_modules/@chakra-ui/focus-lock/dist/chakra-ui-focus-lock.esm.js
var FocusLock2 = function FocusLock3(props) {
  var initialFocusRef = props.initialFocusRef, finalFocusRef = props.finalFocusRef, contentRef = props.contentRef, restoreFocus = props.restoreFocus, children = props.children, isDisabled2 = props.isDisabled, autoFocus = props.autoFocus, persistentFocus = props.persistentFocus, lockFocusAcrossFrames = props.lockFocusAcrossFrames;
  var onActivation = React60.useCallback(function() {
    if (initialFocusRef != null && initialFocusRef.current) {
      initialFocusRef.current.focus();
    } else if (contentRef != null && contentRef.current) {
      var focusables = getAllFocusable(contentRef.current);
      if (focusables.length === 0) {
        focus(contentRef.current, {
          nextTick: true
        });
      }
    }
  }, [initialFocusRef, contentRef]);
  var onDeactivation = React60.useCallback(function() {
    var _finalFocusRef$curren;
    finalFocusRef == null ? void 0 : (_finalFocusRef$curren = finalFocusRef.current) == null ? void 0 : _finalFocusRef$curren.focus();
  }, [finalFocusRef]);
  var returnFocus = restoreFocus && !finalFocusRef;
  return React60.createElement(es2015_default2, {
    crossFrame: lockFocusAcrossFrames,
    persistentFocus,
    autoFocus,
    disabled: isDisabled2,
    onActivation,
    onDeactivation,
    returnFocus
  }, children);
};
if (__DEV__) {
  FocusLock2.displayName = "FocusLock";
}

// node_modules/.pnpm/@chakra-ui+modal@1.11.1_oizpbdgrbwevrwdsmbvxy3tcsy/node_modules/@chakra-ui/modal/dist/chakra-ui-modal.esm.js
var React66 = __toESM(require_react());
var import_react81 = __toESM(require_react());

// node_modules/.pnpm/tslib@1.14.1/node_modules/tslib/tslib.es6.js
var __assign2 = function() {
  __assign2 = Object.assign || function __assign3(t3) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t3[p] = s[p];
    }
    return t3;
  };
  return __assign2.apply(this, arguments);
};
function __rest2(s, e) {
  var t3 = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t3[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t3[p[i]] = s[p[i]];
    }
  return t3;
}

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/Combination.js
var React65 = __toESM(require_react());

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/UI.js
var React61 = __toESM(require_react());

// node_modules/.pnpm/react-remove-scroll-bar@2.3.3_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React61.forwardRef(function(props, parentRef) {
  var ref = React61.useRef(null);
  var _a = React61.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar2 = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container5 = _b === void 0 ? "div" : _b, rest = __rest2(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
  var SideCar2 = sideCar2;
  var containerRef = useMergeRefs2([
    ref,
    parentRef
  ]);
  var containerProps = __assign2({}, rest, callbacks);
  return React61.createElement(React61.Fragment, null, enabled && React61.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }), forwardProps ? React61.cloneElement(React61.Children.only(children), __assign2({}, containerProps, { ref: containerRef })) : React61.createElement(Container5, __assign2({}, containerProps, { className, ref: containerRef }), children));
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React64 = __toESM(require_react());

// node_modules/.pnpm/react-remove-scroll-bar@2.3.3_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React63 = __toESM(require_react());

// node_modules/.pnpm/react-style-singleton@2.2.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-style-singleton/dist/es2015/hook.js
var React62 = __toESM(require_react());

// node_modules/.pnpm/get-nonce@1.0.1/node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// node_modules/.pnpm/react-style-singleton@2.2.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag2 = document.createElement("style");
  tag2.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag2.setAttribute("nonce", nonce);
  }
  return tag2;
}
function injectStyles(tag2, css6) {
  if (tag2.styleSheet) {
    tag2.styleSheet.cssText = css6;
  } else {
    tag2.appendChild(document.createTextNode(css6));
  }
}
function insertStyleTag(tag2) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag2);
}
var stylesheetSingleton = function() {
  var counter2 = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter2 == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter2++;
    },
    remove: function() {
      counter2--;
      if (!counter2 && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// node_modules/.pnpm/react-style-singleton@2.2.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles3, isDynamic) {
    React62.useEffect(function() {
      sheet.add(styles3);
      return function() {
        sheet.remove();
      };
    }, [styles3 && isDynamic]);
  };
};

// node_modules/.pnpm/react-style-singleton@2.2.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle2 = styleHookSingleton();
  var Sheet = function(_a) {
    var styles3 = _a.styles, dynamic = _a.dynamic;
    useStyle2(styles3, dynamic);
    return null;
  };
  return Sheet;
};

// node_modules/.pnpm/react-remove-scroll-bar@2.3.3_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse6 = function(x) {
  return parseInt(x || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  if (true) {
    if (cs.overflowY === "hidden") {
      console.error("react-remove-scroll-bar: cannot calculate scrollbar size because it is removed (overflow:hidden on body");
    }
  }
  var left2 = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top2 = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right2 = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse6(left2), parse6(top2), parse6(right2)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// node_modules/.pnpm/react-remove-scroll-bar@2.3.3_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left2 = _a.left, top2 = _a.top, right2 = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left2, "px;\n    padding-top: ").concat(top2, "px;\n    padding-right: ").concat(right2, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var RemoveScrollBar = function(props) {
  var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? "margin" : _a;
  var gap = React63.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React63.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var elementCouldBeVScrolled = function(node3) {
  var styles3 = window.getComputedStyle(node3);
  return styles3.overflowY !== "hidden" && !(styles3.overflowY === styles3.overflowX && styles3.overflowY === "visible");
};
var elementCouldBeHScrolled = function(node3) {
  var styles3 = window.getComputedStyle(node3);
  return styles3.overflowX !== "hidden" && !(styles3.overflowY === styles3.overflowX && styles3.overflowX === "visible");
};
var locationCouldBeScrolled = function(axis, node3) {
  var current = node3;
  do {
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
      if (s > d) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [scrollTop, scrollHeight, clientHeight];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [scrollLeft, scrollWidth, clientWidth];
};
var elementCouldBeScrolled = function(axis, node3) {
  return axis === "v" ? elementCouldBeVScrolled(node3) : elementCouldBeHScrolled(node3);
};
var getScrollVariables = function(axis, node3) {
  return axis === "v" ? getVScrollVariables(node3) : getHScrollVariables(node3);
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var delta = sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position4 = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - position4;
    if (position4 || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position4;
      }
    }
    target = target.parentNode;
  } while (!targetInLock && target !== document.body || targetInLock && (endTarget.contains(target) || endTarget === target));
  if (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef3 = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x, y) {
  return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function(id2) {
  return "\n  .block-interactivity-" + id2 + " {pointer-events: none;}\n  .allow-interactivity-" + id2 + " {pointer-events: all;}\n";
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React64.useRef([]);
  var touchStartRef = React64.useRef([0, 0]);
  var activeAxis = React64.useRef();
  var id2 = React64.useState(idCounter++)[0];
  var Style2 = React64.useState(function() {
    return styleSingleton();
  })[0];
  var lastProps = React64.useRef(props);
  React64.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React64.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-" + id2);
      var allow_1 = [
        props.lockRef.current
      ].concat((props.shards || []).map(extractRef3)).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-" + id2);
      });
      return function() {
        document.body.classList.remove("block-interactivity-" + id2);
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-" + id2);
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React64.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React64.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      event.preventDefault();
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef3).filter(Boolean).filter(function(node3) {
        return node3.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        event.preventDefault();
      }
    }
  }, []);
  var shouldCancel = React64.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React64.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React64.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React64.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React64.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React64.createElement(React64.Fragment, null, inert ? React64.createElement(Style2, { styles: generateStyle(id2) }) : null, removeScrollBar ? React64.createElement(RemoveScrollBar, { gapMode: "margin" }) : null);
}

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// node_modules/.pnpm/react-remove-scroll@2.4.1_awjwow2nl7sxfgmpupsl3xjf64/node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React65.forwardRef(function(props, ref) {
  return React65.createElement(RemoveScroll, __assign2({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default2 = ReactRemoveScroll;

// node_modules/.pnpm/aria-hidden@1.1.3/node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (parentNode === void 0) {
    parentNode = getDefaultParent(originalTarget);
  }
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || targets.indexOf(parent) >= 0) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node3) {
      if (elementsToKeep.has(node3)) {
        deep(node3);
      } else {
        var attr = node3.getAttribute("aria-hidden");
        var alreadyHidden = attr !== null && attr !== "false";
        var counterValue = (counterMap.get(node3) || 0) + 1;
        var markerValue = (markerCounter.get(node3) || 0) + 1;
        counterMap.set(node3, counterValue);
        markerCounter.set(node3, markerValue);
        hiddenNodes.push(node3);
        if (counterValue === 1 && alreadyHidden) {
          uncontrolledNodes.set(node3, true);
        }
        if (markerValue === 1) {
          node3.setAttribute(markerName, "true");
        }
        if (!alreadyHidden) {
          node3.setAttribute("aria-hidden", "true");
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node3) {
      var counterValue = counterMap.get(node3) - 1;
      var markerValue = markerCounter.get(node3) - 1;
      counterMap.set(node3, counterValue);
      markerCounter.set(node3, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node3)) {
          node3.removeAttribute("aria-hidden");
        }
        uncontrolledNodes.delete(node3);
      }
      if (!markerValue) {
        node3.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};

// node_modules/.pnpm/@chakra-ui+modal@1.11.1_oizpbdgrbwevrwdsmbvxy3tcsy/node_modules/@chakra-ui/modal/dist/chakra-ui-modal.esm.js
function _objectWithoutPropertiesLoose28(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends35() {
  _extends35 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends35.apply(this, arguments);
}
var _excluded$35 = ["preset"];
var transitions = {
  slideInBottom: _extends35({}, slideFadeConfig, {
    custom: {
      offsetY: 16,
      reverse: true
    }
  }),
  slideInRight: _extends35({}, slideFadeConfig, {
    custom: {
      offsetX: 16,
      reverse: true
    }
  }),
  scale: _extends35({}, scaleFadeConfig, {
    custom: {
      initialScale: 0.95,
      reverse: true
    }
  }),
  none: {}
};
var Motion = chakra2(motion.section);
var ModalTransition = React66.forwardRef(function(props, ref) {
  var preset = props.preset, rest = _objectWithoutPropertiesLoose28(props, _excluded$35);
  var motionProps = transitions[preset];
  return React66.createElement(Motion, _extends35({
    ref
  }, motionProps, rest));
});
var ModalManager = function() {
  function ModalManager2() {
    this.modals = void 0;
    this.modals = [];
  }
  var _proto = ModalManager2.prototype;
  _proto.add = function add6(modal2) {
    this.modals.push(modal2);
  };
  _proto.remove = function remove2(modal2) {
    this.modals = this.modals.filter(function(_modal) {
      return _modal !== modal2;
    });
  };
  _proto.isTopModal = function isTopModal(modal2) {
    var topmostModal = this.modals[this.modals.length - 1];
    return topmostModal === modal2;
  };
  return ModalManager2;
}();
var manager = new ModalManager();
function useModalManager(ref, isOpen) {
  (0, import_react81.useEffect)(function() {
    if (isOpen) {
      manager.add(ref);
    }
    return function() {
      manager.remove(ref);
    };
  }, [isOpen, ref]);
}
function useModal(props) {
  var isOpen = props.isOpen, onClose = props.onClose, id2 = props.id, _props$closeOnOverlay = props.closeOnOverlayClick, closeOnOverlayClick = _props$closeOnOverlay === void 0 ? true : _props$closeOnOverlay, _props$closeOnEsc = props.closeOnEsc, closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc, _props$useInert = props.useInert, useInert = _props$useInert === void 0 ? true : _props$useInert, onOverlayClickProp = props.onOverlayClick, onEsc = props.onEsc;
  var dialogRef = (0, import_react81.useRef)(null);
  var overlayRef = (0, import_react81.useRef)(null);
  var _useIds = useIds(id2, "chakra-modal", "chakra-modal--header", "chakra-modal--body"), dialogId = _useIds[0], headerId = _useIds[1], bodyId = _useIds[2];
  useAriaHidden(dialogRef, isOpen && useInert);
  useModalManager(dialogRef, isOpen);
  var mouseDownTarget = (0, import_react81.useRef)(null);
  var onMouseDown = (0, import_react81.useCallback)(function(event) {
    mouseDownTarget.current = event.target;
  }, []);
  var onKeyDown = (0, import_react81.useCallback)(function(event) {
    if (event.key === "Escape") {
      event.stopPropagation();
      if (closeOnEsc) {
        onClose == null ? void 0 : onClose();
      }
      onEsc == null ? void 0 : onEsc();
    }
  }, [closeOnEsc, onClose, onEsc]);
  var _useState = (0, import_react81.useState)(false), headerMounted = _useState[0], setHeaderMounted = _useState[1];
  var _useState2 = (0, import_react81.useState)(false), bodyMounted = _useState2[0], setBodyMounted = _useState2[1];
  var getDialogProps = (0, import_react81.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends35({
      role: "dialog"
    }, props2, {
      ref: mergeRefs(ref, dialogRef),
      id: dialogId,
      tabIndex: -1,
      "aria-modal": true,
      "aria-labelledby": headerMounted ? headerId : void 0,
      "aria-describedby": bodyMounted ? bodyId : void 0,
      onClick: callAllHandlers(props2.onClick, function(event) {
        return event.stopPropagation();
      })
    });
  }, [bodyId, bodyMounted, dialogId, headerId, headerMounted]);
  var onOverlayClick = (0, import_react81.useCallback)(function(event) {
    event.stopPropagation();
    if (mouseDownTarget.current !== event.target)
      return;
    if (!manager.isTopModal(dialogRef))
      return;
    if (closeOnOverlayClick) {
      onClose == null ? void 0 : onClose();
    }
    onOverlayClickProp == null ? void 0 : onOverlayClickProp();
  }, [onClose, closeOnOverlayClick, onOverlayClickProp]);
  var getDialogContainerProps = (0, import_react81.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends35({}, props2, {
      ref: mergeRefs(ref, overlayRef),
      onClick: callAllHandlers(props2.onClick, onOverlayClick),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onMouseDown: callAllHandlers(props2.onMouseDown, onMouseDown)
    });
  }, [onKeyDown, onMouseDown, onOverlayClick]);
  return {
    isOpen,
    onClose,
    headerId,
    bodyId,
    setBodyMounted,
    setHeaderMounted,
    dialogRef,
    overlayRef,
    getDialogProps,
    getDialogContainerProps
  };
}
function useAriaHidden(ref, shouldHide) {
  var currentElement = ref.current;
  (0, import_react81.useEffect)(function() {
    if (!ref.current || !shouldHide)
      return void 0;
    return hideOthers(ref.current);
  }, [shouldHide, ref, currentElement]);
}
var _excluded$27 = ["className", "children", "containerProps"];
var _excluded2$15 = ["className", "transition"];
var _excluded311 = ["className"];
var _excluded45 = ["className"];
var _excluded54 = ["className"];
var _excluded63 = ["onClick", "className"];
var _createContext$13 = createContext3({
  strict: true,
  name: "ModalContext",
  errorMessage: "useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`"
});
var ModalContextProvider = _createContext$13[0];
var useModalContext = _createContext$13[1];
var Modal2 = function Modal3(props) {
  var portalProps = props.portalProps, children = props.children, autoFocus = props.autoFocus, trapFocus = props.trapFocus, initialFocusRef = props.initialFocusRef, finalFocusRef = props.finalFocusRef, returnFocusOnClose = props.returnFocusOnClose, blockScrollOnMount = props.blockScrollOnMount, allowPinchZoom = props.allowPinchZoom, preserveScrollBarGap = props.preserveScrollBarGap, motionPreset = props.motionPreset, lockFocusAcrossFrames = props.lockFocusAcrossFrames, onCloseComplete = props.onCloseComplete;
  var styles3 = useMultiStyleConfig("Modal", props);
  var modal2 = useModal(props);
  var context = _extends35({}, modal2, {
    autoFocus,
    trapFocus,
    initialFocusRef,
    finalFocusRef,
    returnFocusOnClose,
    blockScrollOnMount,
    allowPinchZoom,
    preserveScrollBarGap,
    motionPreset,
    lockFocusAcrossFrames
  });
  return React66.createElement(ModalContextProvider, {
    value: context
  }, React66.createElement(StylesProvider2, {
    value: styles3
  }, React66.createElement(AnimatePresence, {
    onExitComplete: onCloseComplete
  }, context.isOpen && React66.createElement(Portal, portalProps, children))));
};
Modal2.defaultProps = {
  lockFocusAcrossFrames: true,
  returnFocusOnClose: true,
  scrollBehavior: "outside",
  trapFocus: true,
  autoFocus: true,
  blockScrollOnMount: true,
  allowPinchZoom: false,
  motionPreset: "scale"
};
if (__DEV__) {
  Modal2.displayName = "Modal";
}
var MotionDiv = chakra2(motion.div);
var ModalContent = forwardRef5(function(props, ref) {
  var className = props.className, children = props.children, rootProps = props.containerProps, rest = _objectWithoutPropertiesLoose28(props, _excluded$27);
  var _useModalContext = useModalContext(), getDialogProps = _useModalContext.getDialogProps, getDialogContainerProps = _useModalContext.getDialogContainerProps;
  var dialogProps = getDialogProps(rest, ref);
  var containerProps = getDialogContainerProps(rootProps);
  var _className = cx("chakra-modal__content", className);
  var styles3 = useStyles2();
  var dialogStyles = _extends35({
    display: "flex",
    flexDirection: "column",
    position: "relative",
    width: "100%",
    outline: 0
  }, styles3.dialog);
  var dialogContainerStyles = _extends35({
    display: "flex",
    width: "100vw",
    height: "100vh",
    "@supports(height: -webkit-fill-available)": {
      height: "-webkit-fill-available"
    },
    position: "fixed",
    left: 0,
    top: 0
  }, styles3.dialogContainer);
  var _useModalContext2 = useModalContext(), motionPreset = _useModalContext2.motionPreset;
  return React66.createElement(ModalFocusScope, null, React66.createElement(chakra2.div, _extends35({}, containerProps, {
    className: "chakra-modal__content-container",
    tabIndex: -1,
    __css: dialogContainerStyles
  }), React66.createElement(ModalTransition, _extends35({
    preset: motionPreset,
    className: _className
  }, dialogProps, {
    __css: dialogStyles
  }), children)));
});
if (__DEV__) {
  ModalContent.displayName = "ModalContent";
}
function ModalFocusScope(props) {
  var _useModalContext3 = useModalContext(), autoFocus = _useModalContext3.autoFocus, trapFocus = _useModalContext3.trapFocus, dialogRef = _useModalContext3.dialogRef, initialFocusRef = _useModalContext3.initialFocusRef, blockScrollOnMount = _useModalContext3.blockScrollOnMount, allowPinchZoom = _useModalContext3.allowPinchZoom, finalFocusRef = _useModalContext3.finalFocusRef, returnFocusOnClose = _useModalContext3.returnFocusOnClose, preserveScrollBarGap = _useModalContext3.preserveScrollBarGap, lockFocusAcrossFrames = _useModalContext3.lockFocusAcrossFrames;
  var _usePresence = usePresence(), isPresent2 = _usePresence[0], safeToRemove = _usePresence[1];
  React66.useEffect(function() {
    if (!isPresent2 && safeToRemove) {
      setTimeout(safeToRemove);
    }
  }, [isPresent2, safeToRemove]);
  return React66.createElement(FocusLock2, {
    autoFocus,
    isDisabled: !trapFocus,
    initialFocusRef,
    finalFocusRef,
    restoreFocus: returnFocusOnClose,
    contentRef: dialogRef,
    lockFocusAcrossFrames
  }, React66.createElement(Combination_default2, {
    removeScrollBar: !preserveScrollBarGap,
    allowPinchZoom,
    enabled: blockScrollOnMount,
    forwardProps: true
  }, props.children));
}
var ModalOverlay = forwardRef5(function(props, ref) {
  var className = props.className;
  props.transition;
  var rest = _objectWithoutPropertiesLoose28(props, _excluded2$15);
  var _className = cx("chakra-modal__overlay", className);
  var styles3 = useStyles2();
  var overlayStyle = _extends35({
    pos: "fixed",
    left: "0",
    top: "0",
    w: "100vw",
    h: "100vh"
  }, styles3.overlay);
  var _useModalContext4 = useModalContext(), motionPreset = _useModalContext4.motionPreset;
  var motionProps = motionPreset === "none" ? {} : fadeConfig;
  return React66.createElement(MotionDiv, _extends35({}, motionProps, {
    __css: overlayStyle,
    ref,
    className: _className
  }, rest));
});
if (__DEV__) {
  ModalOverlay.displayName = "ModalOverlay";
}
var ModalHeader = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose28(props, _excluded311);
  var _useModalContext5 = useModalContext(), headerId = _useModalContext5.headerId, setHeaderMounted = _useModalContext5.setHeaderMounted;
  React66.useEffect(function() {
    setHeaderMounted(true);
    return function() {
      return setHeaderMounted(false);
    };
  }, [setHeaderMounted]);
  var _className = cx("chakra-modal__header", className);
  var styles3 = useStyles2();
  var headerStyles = _extends35({
    flex: 0
  }, styles3.header);
  return React66.createElement(chakra2.header, _extends35({
    ref,
    className: _className,
    id: headerId
  }, rest, {
    __css: headerStyles
  }));
});
if (__DEV__) {
  ModalHeader.displayName = "ModalHeader";
}
var ModalBody = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose28(props, _excluded45);
  var _useModalContext6 = useModalContext(), bodyId = _useModalContext6.bodyId, setBodyMounted = _useModalContext6.setBodyMounted;
  React66.useEffect(function() {
    setBodyMounted(true);
    return function() {
      return setBodyMounted(false);
    };
  }, [setBodyMounted]);
  var _className = cx("chakra-modal__body", className);
  var styles3 = useStyles2();
  return React66.createElement(chakra2.div, _extends35({
    ref,
    className: _className,
    id: bodyId
  }, rest, {
    __css: styles3.body
  }));
});
if (__DEV__) {
  ModalBody.displayName = "ModalBody";
}
var ModalFooter = forwardRef5(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose28(props, _excluded54);
  var _className = cx("chakra-modal__footer", className);
  var styles3 = useStyles2();
  var footerStyles = _extends35({
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-end"
  }, styles3.footer);
  return React66.createElement(chakra2.footer, _extends35({
    ref
  }, rest, {
    __css: footerStyles,
    className: _className
  }));
});
if (__DEV__) {
  ModalFooter.displayName = "ModalFooter";
}
var ModalCloseButton = forwardRef5(function(props, ref) {
  var onClick = props.onClick, className = props.className, rest = _objectWithoutPropertiesLoose28(props, _excluded63);
  var _useModalContext7 = useModalContext(), onClose = _useModalContext7.onClose;
  var _className = cx("chakra-modal__close-btn", className);
  var styles3 = useStyles2();
  return React66.createElement(CloseButton2, _extends35({
    ref,
    __css: styles3.closeButton,
    className: _className,
    onClick: callAllHandlers(onClick, function(event) {
      event.stopPropagation();
      onClose();
    })
  }, rest));
});
if (__DEV__) {
  ModalCloseButton.displayName = "ModalCloseButton";
}
var _excluded$113 = ["leastDestructiveRef"];
function AlertDialog(props) {
  var leastDestructiveRef = props.leastDestructiveRef, rest = _objectWithoutPropertiesLoose28(props, _excluded$113);
  return React66.createElement(Modal2, _extends35({}, rest, {
    initialFocusRef: leastDestructiveRef
  }));
}
var AlertDialogContent = forwardRef5(function(props, ref) {
  return React66.createElement(ModalContent, _extends35({
    ref,
    role: "alertdialog"
  }, props));
});
var _excluded40 = ["isOpen", "onClose", "placement", "children"];
var _excluded213 = ["className", "children"];
var _createContext13 = createContext3();
var DrawerContextProvider = _createContext13[0];
var useDrawerContext = _createContext13[1];
var placementMap = {
  start: {
    ltr: "left",
    rtl: "right"
  },
  end: {
    ltr: "right",
    rtl: "left"
  }
};
function getDrawerPlacement(placement, dir) {
  var _placementMap$placeme, _placementMap$placeme2;
  if (!placement)
    return;
  return (_placementMap$placeme = (_placementMap$placeme2 = placementMap[placement]) == null ? void 0 : _placementMap$placeme2[dir]) != null ? _placementMap$placeme : placement;
}
function Drawer2(props) {
  var _theme$components;
  var isOpen = props.isOpen, onClose = props.onClose, _props$placement = props.placement, placementProp = _props$placement === void 0 ? "right" : _props$placement, children = props.children, rest = _objectWithoutPropertiesLoose28(props, _excluded40);
  var theme3 = useTheme3();
  var drawerStyleConfig = (_theme$components = theme3.components) == null ? void 0 : _theme$components.Drawer;
  var placement = getDrawerPlacement(placementProp, theme3.direction);
  return React66.createElement(DrawerContextProvider, {
    value: {
      placement
    }
  }, React66.createElement(Modal2, _extends35({
    isOpen,
    onClose,
    styleConfig: drawerStyleConfig
  }, rest), children));
}
var StyledSlide = chakra2(Slide);
var DrawerContent = forwardRef5(function(props, ref) {
  var className = props.className, children = props.children, rest = _objectWithoutPropertiesLoose28(props, _excluded213);
  var _useModalContext = useModalContext(), getDialogProps = _useModalContext.getDialogProps, getDialogContainerProps = _useModalContext.getDialogContainerProps, isOpen = _useModalContext.isOpen;
  var dialogProps = getDialogProps(rest, ref);
  var containerProps = getDialogContainerProps();
  var _className = cx("chakra-modal__content", className);
  var styles3 = useStyles2();
  var dialogStyles = _extends35({
    display: "flex",
    flexDirection: "column",
    position: "relative",
    width: "100%",
    outline: 0
  }, styles3.dialog);
  var dialogContainerStyles = _extends35({
    display: "flex",
    width: "100vw",
    height: "100vh",
    position: "fixed",
    left: 0,
    top: 0
  }, styles3.dialogContainer);
  var _useDrawerContext = useDrawerContext(), placement = _useDrawerContext.placement;
  return React66.createElement(chakra2.div, _extends35({}, containerProps, {
    className: "chakra-modal__content-container",
    __css: dialogContainerStyles
  }), React66.createElement(ModalFocusScope, null, React66.createElement(StyledSlide, _extends35({
    direction: placement,
    "in": isOpen,
    className: _className
  }, dialogProps, {
    __css: dialogStyles
  }), children)));
});
if (__DEV__) {
  DrawerContent.displayName = "DrawerContent";
}

// node_modules/.pnpm/@chakra-ui+number-input@1.4.7_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/number-input/dist/chakra-ui-number-input.esm.js
var React67 = __toESM(require_react());
var import_react82 = __toESM(require_react());
function _extends36() {
  _extends36 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends36.apply(this, arguments);
}
function _objectWithoutPropertiesLoose29(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var TriangleDownIcon = function TriangleDownIcon2(props) {
  return React67.createElement(Icon, _extends36({
    viewBox: "0 0 24 24"
  }, props), React67.createElement("path", {
    fill: "currentColor",
    d: "M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z"
  }));
};
var TriangleUpIcon = function TriangleUpIcon2(props) {
  return React67.createElement(Icon, _extends36({
    viewBox: "0 0 24 24"
  }, props), React67.createElement("path", {
    fill: "currentColor",
    d: "M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z"
  }));
};
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray4(o, minLen);
}
function _createForOfIteratorHelperLoose4(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray4(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useAttributeObserver(ref, attributes, fn6, enabled) {
  React67.useEffect(function() {
    if (!ref.current || !enabled)
      return;
    var win2 = getOwnerWindow(ref.current);
    var attrs = Array.isArray(attributes) ? attributes : [attributes];
    var obs = new win2.MutationObserver(function(changes) {
      for (var _iterator = _createForOfIteratorHelperLoose4(changes), _step; !(_step = _iterator()).done; ) {
        var change = _step.value;
        if (change.type === "attributes" && change.attributeName && attrs.includes(change.attributeName)) {
          fn6(change);
        }
      }
    });
    obs.observe(ref.current, {
      attributes: true,
      attributeFilter: attrs
    });
    return function() {
      return obs.disconnect();
    };
  });
}
var CONTINUOUS_CHANGE_INTERVAL = 50;
var CONTINUOUS_CHANGE_DELAY = 300;
function useSpinner(increment, decrement) {
  var _useState = (0, import_react82.useState)(false), isSpinning = _useState[0], setIsSpinning = _useState[1];
  var _useState2 = (0, import_react82.useState)(null), action = _useState2[0], setAction = _useState2[1];
  var _useState3 = (0, import_react82.useState)(true), runOnce = _useState3[0], setRunOnce = _useState3[1];
  var timeoutRef = (0, import_react82.useRef)(null);
  var removeTimeout = function removeTimeout2() {
    return clearTimeout(timeoutRef.current);
  };
  useInterval(function() {
    if (action === "increment") {
      increment();
    }
    if (action === "decrement") {
      decrement();
    }
  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null);
  var up = (0, import_react82.useCallback)(function() {
    if (runOnce) {
      increment();
    }
    timeoutRef.current = setTimeout(function() {
      setRunOnce(false);
      setIsSpinning(true);
      setAction("increment");
    }, CONTINUOUS_CHANGE_DELAY);
  }, [increment, runOnce]);
  var down = (0, import_react82.useCallback)(function() {
    if (runOnce) {
      decrement();
    }
    timeoutRef.current = setTimeout(function() {
      setRunOnce(false);
      setIsSpinning(true);
      setAction("decrement");
    }, CONTINUOUS_CHANGE_DELAY);
  }, [decrement, runOnce]);
  var stop2 = (0, import_react82.useCallback)(function() {
    setRunOnce(true);
    setIsSpinning(false);
    removeTimeout();
  }, []);
  useUnmountEffect(removeTimeout);
  return {
    up,
    down,
    stop: stop2,
    isSpinning
  };
}
var _excluded$114 = ["focusInputOnChange", "clampValueOnBlur", "keepWithinRange", "min", "max", "step", "isReadOnly", "isDisabled", "isRequired", "isInvalid", "pattern", "inputMode", "allowMouseWheel", "id", "onChange", "precision", "name", "aria-describedby", "aria-label", "aria-labelledby", "onFocus", "onBlur", "onInvalid", "getAriaValueText", "isValidCharacter", "format", "parse"];
var FLOATING_POINT_REGEX = /^[Ee0-9+\-.]$/;
function isFloatingPointNumericCharacter(character2) {
  return FLOATING_POINT_REGEX.test(character2);
}
function isValidNumericKeyboardEvent(event, isValid) {
  if (event.key == null)
    return true;
  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
  var isSingleCharacterKey = event.key.length === 1;
  if (!isSingleCharacterKey || isModifierKey)
    return true;
  return isValid(event.key);
}
function useNumberInput(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, _props$focusInputOnCh = _props.focusInputOnChange, focusInputOnChange = _props$focusInputOnCh === void 0 ? true : _props$focusInputOnCh, _props$clampValueOnBl = _props.clampValueOnBlur, clampValueOnBlur = _props$clampValueOnBl === void 0 ? true : _props$clampValueOnBl, _props$keepWithinRang = _props.keepWithinRange, keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang, _props$min = _props.min, min2 = _props$min === void 0 ? minSafeInteger : _props$min, _props$max = _props.max, max2 = _props$max === void 0 ? maxSafeInteger : _props$max, _props$step = _props.step, stepProp = _props$step === void 0 ? 1 : _props$step, isReadOnly = _props.isReadOnly, isDisabled2 = _props.isDisabled, isRequired = _props.isRequired, isInvalid = _props.isInvalid, _props$pattern = _props.pattern, pattern = _props$pattern === void 0 ? "[0-9]*(.[0-9]+)?" : _props$pattern, _props$inputMode = _props.inputMode, inputMode = _props$inputMode === void 0 ? "decimal" : _props$inputMode, allowMouseWheel = _props.allowMouseWheel, id2 = _props.id;
  _props.onChange;
  _props.precision;
  var name = _props.name, ariaDescBy = _props["aria-describedby"], ariaLabel = _props["aria-label"], ariaLabelledBy = _props["aria-labelledby"], onFocusProp = _props.onFocus, onBlurProp = _props.onBlur, onInvalidProp = _props.onInvalid, getAriaValueTextProp = _props.getAriaValueText, isValidCharacterProp = _props.isValidCharacter, formatValue = _props.format, parseValue = _props.parse, htmlProps = _objectWithoutPropertiesLoose29(_props, _excluded$114);
  var onFocus3 = useCallbackRef(onFocusProp);
  var onBlur3 = useCallbackRef(onBlurProp);
  var onInvalid = useCallbackRef(onInvalidProp);
  var isValidCharacter = useCallbackRef(isValidCharacterProp != null ? isValidCharacterProp : isFloatingPointNumericCharacter);
  var getAriaValueText = useCallbackRef(getAriaValueTextProp);
  var counter2 = useCounter(props);
  var updateFn = counter2.update, incrementFn = counter2.increment, decrementFn = counter2.decrement;
  var _useBoolean = useBoolean(), isFocused = _useBoolean[0], setFocused = _useBoolean[1];
  var isInteractive = !(isReadOnly || isDisabled2);
  var inputRef = React67.useRef(null);
  var inputSelectionRef = React67.useRef(null);
  var incrementButtonRef = React67.useRef(null);
  var decrementButtonRef = React67.useRef(null);
  var sanitize2 = React67.useCallback(function(value) {
    return value.split("").filter(isValidCharacter).join("");
  }, [isValidCharacter]);
  var parse7 = React67.useCallback(function(value) {
    var _parseValue;
    return (_parseValue = parseValue == null ? void 0 : parseValue(value)) != null ? _parseValue : value;
  }, [parseValue]);
  var format2 = React67.useCallback(function(value) {
    var _formatValue;
    return ((_formatValue = formatValue == null ? void 0 : formatValue(value)) != null ? _formatValue : value).toString();
  }, [formatValue]);
  useUpdateEffect(function() {
    if (counter2.valueAsNumber > max2) {
      onInvalid == null ? void 0 : onInvalid("rangeOverflow", format2(counter2.value), counter2.valueAsNumber);
    } else if (counter2.valueAsNumber < min2) {
      onInvalid == null ? void 0 : onInvalid("rangeOverflow", format2(counter2.value), counter2.valueAsNumber);
    }
  }, [counter2.valueAsNumber, counter2.value, format2, onInvalid]);
  useSafeLayoutEffect(function() {
    if (!inputRef.current)
      return;
    var notInSync = inputRef.current.value != counter2.value;
    if (notInSync) {
      var parsedInput = parse7(inputRef.current.value);
      counter2.setValue(sanitize2(parsedInput));
    }
  }, [parse7, sanitize2]);
  var increment = React67.useCallback(function(step) {
    if (step === void 0) {
      step = stepProp;
    }
    if (isInteractive) {
      incrementFn(step);
    }
  }, [incrementFn, isInteractive, stepProp]);
  var decrement = React67.useCallback(function(step) {
    if (step === void 0) {
      step = stepProp;
    }
    if (isInteractive) {
      decrementFn(step);
    }
  }, [decrementFn, isInteractive, stepProp]);
  var spinner2 = useSpinner(increment, decrement);
  useAttributeObserver(incrementButtonRef, "disabled", spinner2.stop, spinner2.isSpinning);
  useAttributeObserver(decrementButtonRef, "disabled", spinner2.stop, spinner2.isSpinning);
  var onChange = React67.useCallback(function(event) {
    var evt = event.nativeEvent;
    if (evt.isComposing)
      return;
    var parsedInput = parse7(event.currentTarget.value);
    updateFn(sanitize2(parsedInput));
    inputSelectionRef.current = {
      start: event.currentTarget.selectionStart,
      end: event.currentTarget.selectionEnd
    };
  }, [updateFn, sanitize2, parse7]);
  var _onFocus = React67.useCallback(function(event) {
    var _inputSelectionRef$cu, _event$currentTarget$, _inputSelectionRef$cu2;
    onFocus3 == null ? void 0 : onFocus3(event);
    if (!inputSelectionRef.current)
      return;
    event.target.selectionStart = (_inputSelectionRef$cu = inputSelectionRef.current.start) != null ? _inputSelectionRef$cu : (_event$currentTarget$ = event.currentTarget.value) == null ? void 0 : _event$currentTarget$.length;
    event.currentTarget.selectionEnd = (_inputSelectionRef$cu2 = inputSelectionRef.current.end) != null ? _inputSelectionRef$cu2 : event.currentTarget.selectionStart;
  }, [onFocus3]);
  var onKeyDown = React67.useCallback(function(event) {
    if (event.nativeEvent.isComposing)
      return;
    if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {
      event.preventDefault();
    }
    var stepFactor = getStepFactor(event) * stepProp;
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      ArrowUp: function ArrowUp() {
        return increment(stepFactor);
      },
      ArrowDown: function ArrowDown() {
        return decrement(stepFactor);
      },
      Home: function Home() {
        return updateFn(min2);
      },
      End: function End() {
        return updateFn(max2);
      }
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [isValidCharacter, stepProp, increment, decrement, updateFn, min2, max2]);
  var getStepFactor = function getStepFactor2(event) {
    var ratio = 1;
    if (event.metaKey || event.ctrlKey) {
      ratio = 0.1;
    }
    if (event.shiftKey) {
      ratio = 10;
    }
    return ratio;
  };
  var ariaValueText = React67.useMemo(function() {
    var text = getAriaValueText == null ? void 0 : getAriaValueText(counter2.value);
    if (!isNull(text))
      return text;
    var defaultText = counter2.value.toString();
    return !defaultText ? void 0 : defaultText;
  }, [counter2.value, getAriaValueText]);
  var validateAndClamp = React67.useCallback(function() {
    var next2 = counter2.value;
    if (next2 === "")
      return;
    if (counter2.valueAsNumber < min2) {
      next2 = min2;
    }
    if (counter2.valueAsNumber > max2) {
      next2 = max2;
    }
    counter2.cast(next2);
  }, [counter2, max2, min2]);
  var onInputBlur = React67.useCallback(function() {
    setFocused.off();
    if (clampValueOnBlur) {
      validateAndClamp();
    }
  }, [clampValueOnBlur, setFocused, validateAndClamp]);
  var focusInput = React67.useCallback(function() {
    if (focusInputOnChange) {
      focus(inputRef.current, {
        nextTick: true
      });
    }
  }, [focusInputOnChange]);
  var spinUp = React67.useCallback(function(event) {
    event.preventDefault();
    spinner2.up();
    focusInput();
  }, [focusInput, spinner2]);
  var spinDown = React67.useCallback(function(event) {
    event.preventDefault();
    spinner2.down();
    focusInput();
  }, [focusInput, spinner2]);
  useEventListener("wheel", function(event) {
    var doc2 = getOwnerDocument(inputRef.current);
    var isInputFocused = doc2.activeElement === inputRef.current;
    if (!allowMouseWheel || !isInputFocused)
      return;
    event.preventDefault();
    var stepFactor = getStepFactor(event) * stepProp;
    var direction3 = Math.sign(event.deltaY);
    if (direction3 === -1) {
      increment(stepFactor);
    } else if (direction3 === 1) {
      decrement(stepFactor);
    }
  }, inputRef.current, {
    passive: false
  });
  var getIncrementButtonProps = React67.useCallback(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var disabled3 = isDisabled2 || keepWithinRange && counter2.isAtMax;
    return _extends36({}, props2, {
      ref: mergeRefs(ref, incrementButtonRef),
      role: "button",
      tabIndex: -1,
      onPointerDown: callAllHandlers(props2.onPointerDown, function(event) {
        if (!disabled3)
          spinUp(event);
      }),
      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner2.stop),
      onPointerUp: callAllHandlers(props2.onPointerUp, spinner2.stop),
      disabled: disabled3,
      "aria-disabled": ariaAttr(disabled3)
    });
  }, [counter2.isAtMax, keepWithinRange, spinUp, spinner2.stop, isDisabled2]);
  var getDecrementButtonProps = React67.useCallback(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var disabled3 = isDisabled2 || keepWithinRange && counter2.isAtMin;
    return _extends36({}, props2, {
      ref: mergeRefs(ref, decrementButtonRef),
      role: "button",
      tabIndex: -1,
      onPointerDown: callAllHandlers(props2.onPointerDown, function(event) {
        if (!disabled3)
          spinDown(event);
      }),
      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner2.stop),
      onPointerUp: callAllHandlers(props2.onPointerUp, spinner2.stop),
      disabled: disabled3,
      "aria-disabled": ariaAttr(disabled3)
    });
  }, [counter2.isAtMin, keepWithinRange, spinDown, spinner2.stop, isDisabled2]);
  var getInputProps = React67.useCallback(function(props2, ref) {
    var _props$readOnly, _props$readOnly2, _props$required, _props$required2;
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends36({
      name,
      inputMode,
      type: "text",
      pattern,
      "aria-labelledby": ariaLabelledBy,
      "aria-label": ariaLabel,
      "aria-describedby": ariaDescBy,
      id: id2,
      disabled: isDisabled2
    }, props2, {
      readOnly: (_props$readOnly = props2.readOnly) != null ? _props$readOnly : isReadOnly,
      "aria-readonly": (_props$readOnly2 = props2.readOnly) != null ? _props$readOnly2 : isReadOnly,
      "aria-required": (_props$required = props2.required) != null ? _props$required : isRequired,
      required: (_props$required2 = props2.required) != null ? _props$required2 : isRequired,
      ref: mergeRefs(inputRef, ref),
      value: format2(counter2.value),
      role: "spinbutton",
      "aria-valuemin": min2,
      "aria-valuemax": max2,
      "aria-valuenow": Number.isNaN(counter2.valueAsNumber) ? void 0 : counter2.valueAsNumber,
      "aria-invalid": ariaAttr(isInvalid != null ? isInvalid : counter2.isOutOfRange),
      "aria-valuetext": ariaValueText,
      autoComplete: "off",
      autoCorrect: "off",
      onChange: callAllHandlers(props2.onChange, onChange),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onFocus: callAllHandlers(props2.onFocus, _onFocus, setFocused.on),
      onBlur: callAllHandlers(props2.onBlur, onBlur3, onInputBlur)
    });
  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, format2, ariaDescBy, id2, isDisabled2, isRequired, isReadOnly, isInvalid, counter2.value, counter2.valueAsNumber, counter2.isOutOfRange, min2, max2, ariaValueText, onChange, onKeyDown, _onFocus, setFocused.on, onBlur3, onInputBlur]);
  return {
    value: format2(counter2.value),
    valueAsNumber: counter2.valueAsNumber,
    isFocused,
    isDisabled: isDisabled2,
    isReadOnly,
    getIncrementButtonProps,
    getDecrementButtonProps,
    getInputProps,
    htmlProps
  };
}
var _excluded41 = ["htmlProps"];
var _createContext14 = createContext3({
  name: "NumberInputContext",
  errorMessage: "useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />"
});
var NumberInputProvider = _createContext14[0];
var useNumberInputContext = _createContext14[1];
var NumberInput2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("NumberInput", props);
  var ownProps = omitThemingProps2(props);
  var controlProps = useFormControlProps(ownProps);
  var _useNumberInput = useNumberInput(controlProps), htmlProps = _useNumberInput.htmlProps, context = _objectWithoutPropertiesLoose29(_useNumberInput, _excluded41);
  var ctx = React67.useMemo(function() {
    return context;
  }, [context]);
  return React67.createElement(NumberInputProvider, {
    value: ctx
  }, React67.createElement(StylesProvider2, {
    value: styles3
  }, React67.createElement(chakra2.div, _extends36({}, htmlProps, {
    ref,
    className: cx("chakra-numberinput", props.className),
    __css: _extends36({
      position: "relative",
      zIndex: 0
    }, styles3.root)
  }))));
});
if (__DEV__) {
  NumberInput2.displayName = "NumberInput";
}
var NumberInputStepper = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React67.createElement(chakra2.div, _extends36({
    "aria-hidden": true,
    ref
  }, props, {
    __css: _extends36({
      display: "flex",
      flexDirection: "column",
      position: "absolute",
      top: "0",
      insetEnd: "0px",
      margin: "1px",
      height: "calc(100% - 2px)",
      zIndex: 1
    }, styles3.stepperGroup)
  }));
});
if (__DEV__) {
  NumberInputStepper.displayName = "NumberInputStepper";
}
var NumberInputField = forwardRef5(function(props, ref) {
  var _useNumberInputContex = useNumberInputContext(), getInputProps = _useNumberInputContex.getInputProps;
  var input = getInputProps(props, ref);
  var styles3 = useStyles2();
  return React67.createElement(chakra2.input, _extends36({}, input, {
    className: cx("chakra-numberinput__field", props.className),
    __css: _extends36({
      width: "100%"
    }, styles3.field)
  }));
});
if (__DEV__) {
  NumberInputField.displayName = "NumberInputField";
}
var StyledStepper = chakra2("div", {
  baseStyle: {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    flex: 1,
    transitionProperty: "common",
    transitionDuration: "normal",
    userSelect: "none",
    cursor: "pointer",
    lineHeight: "normal"
  }
});
var NumberDecrementStepper = forwardRef5(function(props, ref) {
  var _props$children;
  var styles3 = useStyles2();
  var _useNumberInputContex2 = useNumberInputContext(), getDecrementButtonProps = _useNumberInputContex2.getDecrementButtonProps;
  var decrement = getDecrementButtonProps(props, ref);
  return React67.createElement(StyledStepper, _extends36({}, decrement, {
    __css: styles3.stepper
  }), (_props$children = props.children) != null ? _props$children : React67.createElement(TriangleDownIcon, null));
});
if (__DEV__) {
  NumberDecrementStepper.displayName = "NumberDecrementStepper";
}
var NumberIncrementStepper = forwardRef5(function(props, ref) {
  var _props$children2;
  var _useNumberInputContex3 = useNumberInputContext(), getIncrementButtonProps = _useNumberInputContex3.getIncrementButtonProps;
  var increment = getIncrementButtonProps(props, ref);
  var styles3 = useStyles2();
  return React67.createElement(StyledStepper, _extends36({}, increment, {
    __css: styles3.stepper
  }), (_props$children2 = props.children) != null ? _props$children2 : React67.createElement(TriangleUpIcon, null));
});
if (__DEV__) {
  NumberIncrementStepper.displayName = "NumberIncrementStepper";
}

// node_modules/.pnpm/@chakra-ui+pin-input@1.7.10_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/pin-input/dist/chakra-ui-pin-input.esm.js
var React68 = __toESM(require_react());
function _extends37() {
  _extends37 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends37.apply(this, arguments);
}
function _objectWithoutPropertiesLoose30(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$115 = ["index"];
var _createDescendantCont3 = createDescendantContext();
var PinInputDescendantsProvider = _createDescendantCont3[0];
var usePinInputDescendantsContext = _createDescendantCont3[1];
var usePinInputDescendants = _createDescendantCont3[2];
var usePinInputDescendant = _createDescendantCont3[3];
var _createContext15 = createContext3({
  name: "PinInputContext",
  errorMessage: "usePinInputContext: `context` is undefined. Seems you forgot to all pin input fields within `<PinInput />`"
});
var PinInputProvider = _createContext15[0];
var usePinInputContext = _createContext15[1];
var toArray2 = function toArray3(value) {
  return value == null ? void 0 : value.split("");
};
function validate(value, type) {
  var NUMERIC_REGEX = /^[0-9]+$/;
  var ALPHA_NUMERIC_REGEX = /^[a-zA-Z0-9]+$/i;
  var regex = type === "alphanumeric" ? ALPHA_NUMERIC_REGEX : NUMERIC_REGEX;
  return regex.test(value);
}
function usePinInput(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, autoFocus = _props.autoFocus, value = _props.value, defaultValue = _props.defaultValue, _onChange = _props.onChange, onComplete = _props.onComplete, _props$placeholder = _props.placeholder, placeholder = _props$placeholder === void 0 ? "\u25CB" : _props$placeholder, _props$manageFocus = _props.manageFocus, manageFocus = _props$manageFocus === void 0 ? true : _props$manageFocus, _props$otp = _props.otp, otp = _props$otp === void 0 ? false : _props$otp, idProp = _props.id, isDisabled2 = _props.isDisabled, isInvalid = _props.isInvalid, _props$type = _props.type, type = _props$type === void 0 ? "number" : _props$type, mask = _props.mask;
  var uuid = useId();
  var id2 = idProp != null ? idProp : "pin-input-" + uuid;
  var descendants = usePinInputDescendants();
  var _React$useState = React68.useState(true), moveFocus = _React$useState[0], setMoveFocus = _React$useState[1];
  var _React$useState2 = React68.useState(-1), focusedIndex = _React$useState2[0], setFocusedIndex = _React$useState2[1];
  var _useControllableState = useControllableState({
    defaultValue: toArray2(defaultValue) || [],
    value: toArray2(value),
    onChange: function onChange(values2) {
      return _onChange == null ? void 0 : _onChange(values2.join(""));
    }
  }), values = _useControllableState[0], setValues2 = _useControllableState[1];
  React68.useEffect(function() {
    if (autoFocus) {
      var first = descendants.first();
      if (first)
        focus(first.node, {
          nextTick: true
        });
    }
  }, [descendants]);
  var focusNext = React68.useCallback(function(index2) {
    if (!moveFocus || !manageFocus)
      return;
    var next2 = descendants.next(index2, false);
    if (next2)
      focus(next2.node, {
        nextTick: true
      });
  }, [descendants, moveFocus, manageFocus]);
  var setValue = React68.useCallback(function(value2, index2) {
    var nextValues = [].concat(values);
    nextValues[index2] = value2;
    setValues2(nextValues);
    var isComplete = value2 !== "" && nextValues.length === descendants.count() && nextValues.every(function(inputValue) {
      return inputValue != null && inputValue !== "";
    });
    if (isComplete) {
      onComplete == null ? void 0 : onComplete(nextValues.join(""));
    } else {
      focusNext(index2);
    }
  }, [values, setValues2, focusNext, onComplete, descendants]);
  var clear = React68.useCallback(function() {
    var values2 = Array(descendants.count()).fill("");
    setValues2(values2);
    var first = descendants.first();
    if (first)
      focus(first.node);
  }, [descendants, setValues2]);
  var getNextValue = React68.useCallback(function(value2, eventValue) {
    var nextValue = eventValue;
    if ((value2 == null ? void 0 : value2.length) > 0) {
      if (value2[0] === eventValue.charAt(0)) {
        nextValue = eventValue.charAt(1);
      } else if (value2[0] === eventValue.charAt(1)) {
        nextValue = eventValue.charAt(0);
      }
    }
    return nextValue;
  }, []);
  var getInputProps = React68.useCallback(function(props2) {
    var index2 = props2.index, rest = _objectWithoutPropertiesLoose30(props2, _excluded$115);
    var onChange = function onChange2(event) {
      var eventValue = event.target.value;
      var currentValue = values[index2];
      var nextValue = getNextValue(currentValue, eventValue);
      if (nextValue === "") {
        setValue("", index2);
        return;
      }
      if (eventValue.length > 2) {
        if (validate(eventValue, type)) {
          var _nextValue = eventValue.split("").filter(function(_, index3) {
            return index3 < descendants.count();
          });
          setValues2(_nextValue);
          if (_nextValue.length === descendants.count()) {
            onComplete == null ? void 0 : onComplete(_nextValue.join(""));
          }
        }
      } else {
        if (validate(nextValue, type)) {
          setValue(nextValue, index2);
        }
        setMoveFocus(true);
      }
    };
    var onKeyDown = function onKeyDown2(event) {
      if (event.key === "Backspace" && manageFocus) {
        if (event.target.value === "") {
          var prevInput = descendants.prev(index2, false);
          if (prevInput) {
            setValue("", index2 - 1);
            focus(prevInput.node);
            setMoveFocus(true);
          }
        } else {
          setMoveFocus(false);
        }
      }
    };
    var onFocus3 = function onFocus4() {
      setFocusedIndex(index2);
    };
    var onBlur3 = function onBlur4() {
      setFocusedIndex(-1);
    };
    var hasFocus = focusedIndex === index2;
    var inputType = type === "number" ? "tel" : "text";
    return _extends37({
      "aria-label": "Please enter your pin code",
      inputMode: type === "number" ? "numeric" : "text",
      type: mask ? "password" : inputType
    }, rest, {
      id: id2 + "-" + index2,
      disabled: isDisabled2,
      "aria-invalid": ariaAttr(isInvalid),
      onChange: callAllHandlers(rest.onChange, onChange),
      onKeyDown: callAllHandlers(rest.onKeyDown, onKeyDown),
      onFocus: callAllHandlers(rest.onFocus, onFocus3),
      onBlur: callAllHandlers(rest.onBlur, onBlur3),
      value: values[index2] || "",
      autoComplete: otp ? "one-time-code" : "off",
      placeholder: hasFocus ? "" : placeholder
    });
  }, [descendants, focusedIndex, getNextValue, id2, isDisabled2, mask, isInvalid, manageFocus, onComplete, otp, placeholder, setValue, setValues2, type, values]);
  return {
    getInputProps,
    id: id2,
    descendants,
    values,
    setValue,
    setValues: setValues2,
    clear
  };
}
function usePinInputField(props, ref) {
  if (props === void 0) {
    props = {};
  }
  if (ref === void 0) {
    ref = null;
  }
  var _usePinInputContext = usePinInputContext(), getInputProps = _usePinInputContext.getInputProps;
  var _usePinInputDescendan = usePinInputDescendant(), index2 = _usePinInputDescendan.index, register = _usePinInputDescendan.register;
  return getInputProps(_extends37({}, props, {
    ref: mergeRefs(register, ref),
    index: index2
  }));
}
var _excluded46 = ["children"];
var _excluded214 = ["descendants"];
var PinInput2 = function PinInput3(props) {
  var styles3 = useStyleConfig2("PinInput", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, rest = _objectWithoutPropertiesLoose30(_omitThemingProps, _excluded46);
  var _usePinInput = usePinInput(rest), descendants = _usePinInput.descendants, context = _objectWithoutPropertiesLoose30(_usePinInput, _excluded214);
  var clones = getValidChildren(children).map(function(child) {
    return React68.cloneElement(child, {
      __css: styles3
    });
  });
  return React68.createElement(PinInputDescendantsProvider, {
    value: descendants
  }, React68.createElement(PinInputProvider, {
    value: context
  }, clones));
};
if (__DEV__) {
  PinInput2.displayName = "PinInput";
}
var PinInputField = forwardRef5(function(props, ref) {
  var inputProps = usePinInputField(props, ref);
  return React68.createElement(chakra2.input, _extends37({}, inputProps, {
    className: cx("chakra-pin-input", props.className)
  }));
});
if (__DEV__) {
  PinInputField.displayName = "PinInputField";
}

// node_modules/.pnpm/@chakra-ui+popover@1.11.9_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/popover/dist/chakra-ui-popover.esm.js
var React69 = __toESM(require_react());
var import_react83 = __toESM(require_react());
function _extends38() {
  _extends38 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends38.apply(this, arguments);
}
function _objectWithoutPropertiesLoose31(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _createContext16 = createContext3({
  name: "PopoverContext",
  errorMessage: "usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`"
});
var PopoverProvider = _createContext16[0];
var usePopoverContext = _createContext16[1];
var mergeVariants = function mergeVariants2(variants4) {
  if (!variants4)
    return;
  return (0, import_lodash.default)(variants4, {
    enter: {
      visibility: "visible"
    },
    exit: {
      transitionEnd: {
        visibility: "hidden"
      }
    }
  });
};
var scaleFade = {
  exit: {
    opacity: 0,
    scale: 0.95,
    transition: {
      duration: 0.1,
      ease: [0.4, 0, 1, 1]
    }
  },
  enter: {
    scale: 1,
    opacity: 1,
    transition: {
      duration: 0.15,
      ease: [0, 0, 0.2, 1]
    }
  }
};
var Section = motion(chakra2.section);
var PopoverTransition = import_react83.default.forwardRef(function(props, ref) {
  var _usePopoverContext = usePopoverContext(), isOpen = _usePopoverContext.isOpen;
  return import_react83.default.createElement(Section, _extends38({
    ref,
    variants: mergeVariants(props.variants)
  }, props, {
    initial: false,
    animate: isOpen ? "enter" : "exit"
  }));
});
PopoverTransition.defaultProps = {
  variants: scaleFade
};
var _excluded$116 = ["closeOnBlur", "closeOnEsc", "initialFocusRef", "id", "returnFocusOnClose", "autoFocus", "arrowSize", "arrowShadowColor", "trigger", "openDelay", "closeDelay", "isLazy", "lazyBehavior", "computePositionOnMount"];
var TRIGGER = {
  click: "click",
  hover: "hover"
};
function usePopover(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, _props$closeOnBlur = _props.closeOnBlur, closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur, _props$closeOnEsc = _props.closeOnEsc, closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc, initialFocusRef = _props.initialFocusRef, id2 = _props.id, _props$returnFocusOnC = _props.returnFocusOnClose, returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC, _props$autoFocus = _props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, arrowSize = _props.arrowSize, arrowShadowColor = _props.arrowShadowColor, _props$trigger = _props.trigger, trigger = _props$trigger === void 0 ? TRIGGER.click : _props$trigger, _props$openDelay = _props.openDelay, openDelay = _props$openDelay === void 0 ? 200 : _props$openDelay, _props$closeDelay = _props.closeDelay, closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay, isLazy = _props.isLazy, _props$lazyBehavior = _props.lazyBehavior, lazyBehavior = _props$lazyBehavior === void 0 ? "unmount" : _props$lazyBehavior, computePositionOnMount = _props.computePositionOnMount, popperProps = _objectWithoutPropertiesLoose31(_props, _excluded$116);
  var _useDisclosure = useDisclosure(props), isOpen = _useDisclosure.isOpen, onClose = _useDisclosure.onClose, onOpen = _useDisclosure.onOpen, onToggle = _useDisclosure.onToggle;
  var anchorRef = (0, import_react83.useRef)(null);
  var triggerRef = (0, import_react83.useRef)(null);
  var popoverRef = (0, import_react83.useRef)(null);
  var isHoveringRef = (0, import_react83.useRef)(false);
  var hasBeenOpened = (0, import_react83.useRef)(false);
  if (isOpen) {
    hasBeenOpened.current = true;
  }
  var _useState = (0, import_react83.useState)(false), hasHeader = _useState[0], setHasHeader = _useState[1];
  var _useState2 = (0, import_react83.useState)(false), hasBody = _useState2[0], setHasBody = _useState2[1];
  var _useIds = useIds(id2, "popover-trigger", "popover-content", "popover-header", "popover-body"), triggerId = _useIds[0], popoverId = _useIds[1], headerId = _useIds[2], bodyId = _useIds[3];
  var _usePopper = usePopper(_extends38({}, popperProps, {
    enabled: isOpen || !!computePositionOnMount
  })), referenceRef = _usePopper.referenceRef, getArrowProps = _usePopper.getArrowProps, getPopperProps = _usePopper.getPopperProps, getArrowInnerProps = _usePopper.getArrowInnerProps, forceUpdate = _usePopper.forceUpdate;
  var animated = useAnimationState({
    isOpen,
    ref: popoverRef
  });
  useFocusOnPointerDown({
    enabled: isOpen,
    ref: triggerRef
  });
  useFocusOnHide(popoverRef, {
    focusRef: triggerRef,
    visible: isOpen,
    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click
  });
  useFocusOnShow(popoverRef, {
    focusRef: initialFocusRef,
    visible: isOpen,
    shouldFocus: autoFocus && trigger === TRIGGER.click
  });
  var shouldRenderChildren = determineLazyBehavior({
    hasBeenSelected: hasBeenOpened.current,
    isLazy,
    lazyBehavior,
    isSelected: animated.present
  });
  var getPopoverProps = (0, import_react83.useCallback)(function(props2, _ref2) {
    var _extends210;
    if (props2 === void 0) {
      props2 = {};
    }
    if (_ref2 === void 0) {
      _ref2 = null;
    }
    var popoverProps = _extends38({}, props2, {
      style: _extends38({}, props2.style, (_extends210 = {
        transformOrigin: cssVars.transformOrigin.varRef
      }, _extends210[cssVars.arrowSize["var"]] = arrowSize ? px(arrowSize) : void 0, _extends210[cssVars.arrowShadowColor["var"]] = arrowShadowColor, _extends210)),
      ref: mergeRefs(popoverRef, _ref2),
      children: shouldRenderChildren ? props2.children : null,
      id: popoverId,
      tabIndex: -1,
      role: "dialog",
      onKeyDown: callAllHandlers(props2.onKeyDown, function(event) {
        if (closeOnEsc && event.key === "Escape") {
          onClose();
        }
      }),
      onBlur: callAllHandlers(props2.onBlur, function(event) {
        var relatedTarget = getRelatedTarget(event);
        var targetIsPopover = contains(popoverRef.current, relatedTarget);
        var targetIsTrigger = contains(triggerRef.current, relatedTarget);
        var isValidBlur = !targetIsPopover && !targetIsTrigger;
        if (isOpen && closeOnBlur && isValidBlur) {
          onClose();
        }
      }),
      "aria-labelledby": hasHeader ? headerId : void 0,
      "aria-describedby": hasBody ? bodyId : void 0
    });
    if (trigger === TRIGGER.hover) {
      popoverProps.role = "tooltip";
      popoverProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, function() {
        isHoveringRef.current = true;
      });
      popoverProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, function() {
        isHoveringRef.current = false;
        setTimeout(onClose, closeDelay);
      });
    }
    return popoverProps;
  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);
  var getPopoverPositionerProps = (0, import_react83.useCallback)(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return getPopperProps(_extends38({}, props2, {
      style: _extends38({
        visibility: isOpen ? "visible" : "hidden"
      }, props2.style)
    }), forwardedRef);
  }, [isOpen, getPopperProps]);
  var getAnchorProps = (0, import_react83.useCallback)(function(props2, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = null;
    }
    var anchorProps = _extends38({}, props2, {
      ref: mergeRefs(_ref2, anchorRef, referenceRef)
    });
    return anchorProps;
  }, [anchorRef, referenceRef]);
  var openTimeout = (0, import_react83.useRef)();
  var closeTimeout = (0, import_react83.useRef)();
  var maybeReferenceRef = (0, import_react83.useCallback)(function(node3) {
    if (anchorRef.current == null) {
      referenceRef(node3);
    }
  }, [referenceRef]);
  var getTriggerProps = (0, import_react83.useCallback)(function(props2, _ref2) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (_ref2 === void 0) {
      _ref2 = null;
    }
    var triggerProps = _extends38({}, props2, {
      ref: mergeRefs(triggerRef, _ref2, maybeReferenceRef),
      id: triggerId,
      "aria-haspopup": "dialog",
      "aria-expanded": isOpen,
      "aria-controls": popoverId
    });
    if (trigger === TRIGGER.click) {
      triggerProps.onClick = callAllHandlers(props2.onClick, onToggle);
    }
    if (trigger === TRIGGER.hover) {
      triggerProps.onFocus = callAllHandlers(props2.onFocus, onOpen);
      triggerProps.onBlur = callAllHandlers(props2.onBlur, function(event) {
        var relatedTarget = getRelatedTarget(event);
        var isValidBlur = !contains(popoverRef.current, relatedTarget);
        if (isOpen && closeOnBlur && isValidBlur) {
          onClose();
        }
      });
      triggerProps.onKeyDown = callAllHandlers(props2.onKeyDown, function(event) {
        if (event.key === "Escape") {
          onClose();
        }
      });
      triggerProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, function() {
        isHoveringRef.current = true;
        openTimeout.current = window.setTimeout(onOpen, openDelay);
      });
      triggerProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, function() {
        isHoveringRef.current = false;
        if (openTimeout.current) {
          clearTimeout(openTimeout.current);
          openTimeout.current = void 0;
        }
        closeTimeout.current = window.setTimeout(function() {
          if (isHoveringRef.current === false) {
            onClose();
          }
        }, closeDelay);
      });
    }
    return triggerProps;
  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);
  (0, import_react83.useEffect)(function() {
    return function() {
      if (openTimeout.current) {
        clearTimeout(openTimeout.current);
      }
      if (closeTimeout.current) {
        clearTimeout(closeTimeout.current);
      }
    };
  }, []);
  var getHeaderProps = (0, import_react83.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends38({}, props2, {
      id: headerId,
      ref: mergeRefs(ref, function(node3) {
        setHasHeader(!!node3);
      })
    });
  }, [headerId]);
  var getBodyProps = (0, import_react83.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends38({}, props2, {
      id: bodyId,
      ref: mergeRefs(ref, function(node3) {
        setHasBody(!!node3);
      })
    });
  }, [bodyId]);
  return {
    forceUpdate,
    isOpen,
    onAnimationComplete: animated.onComplete,
    onClose,
    getAnchorProps,
    getArrowProps,
    getArrowInnerProps,
    getPopoverPositionerProps,
    getPopoverProps,
    getTriggerProps,
    getHeaderProps,
    getBodyProps
  };
}
var _excluded47 = ["children"];
var _excluded215 = ["rootProps"];
var Popover2 = function Popover3(props) {
  var styles3 = useMultiStyleConfig("Popover", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, rest = _objectWithoutPropertiesLoose31(_omitThemingProps, _excluded47);
  var theme3 = useTheme3();
  var context = usePopover(_extends38({}, rest, {
    direction: theme3.direction
  }));
  return React69.createElement(PopoverProvider, {
    value: context
  }, React69.createElement(StylesProvider2, {
    value: styles3
  }, runIfFn(children, {
    isOpen: context.isOpen,
    onClose: context.onClose,
    forceUpdate: context.forceUpdate
  })));
};
if (__DEV__) {
  Popover2.displayName = "Popover";
}
var PopoverAnchor = function PopoverAnchor2(props) {
  var child = React69.Children.only(props.children);
  var _usePopoverContext = usePopoverContext(), getAnchorProps = _usePopoverContext.getAnchorProps;
  return React69.cloneElement(child, getAnchorProps(child.props, child.ref));
};
if (__DEV__) {
  PopoverAnchor.displayName = "PopoverAnchor";
}
var PopoverTrigger = function PopoverTrigger2(props) {
  var child = React69.Children.only(props.children);
  var _usePopoverContext2 = usePopoverContext(), getTriggerProps = _usePopoverContext2.getTriggerProps;
  return React69.cloneElement(child, getTriggerProps(child.props, child.ref));
};
if (__DEV__) {
  PopoverTrigger.displayName = "PopoverTrigger";
}
var PopoverContent = forwardRef5(function(props, ref) {
  var rootProps = props.rootProps, contentProps = _objectWithoutPropertiesLoose31(props, _excluded215);
  var _usePopoverContext3 = usePopoverContext(), getPopoverProps = _usePopoverContext3.getPopoverProps, getPopoverPositionerProps = _usePopoverContext3.getPopoverPositionerProps, onAnimationComplete = _usePopoverContext3.onAnimationComplete;
  var styles3 = useStyles2();
  var contentStyles = _extends38({
    position: "relative",
    display: "flex",
    flexDirection: "column"
  }, styles3.content);
  return React69.createElement(chakra2.div, _extends38({}, getPopoverPositionerProps(rootProps), {
    __css: styles3.popper,
    className: "chakra-popover__popper"
  }), React69.createElement(PopoverTransition, _extends38({}, getPopoverProps(contentProps, ref), {
    onAnimationComplete: callAll(onAnimationComplete, contentProps.onAnimationComplete),
    className: cx("chakra-popover__content", props.className),
    __css: contentStyles
  })));
});
if (__DEV__) {
  PopoverContent.displayName = "PopoverContent";
}
var PopoverHeader = forwardRef5(function(props, ref) {
  var _usePopoverContext4 = usePopoverContext(), getHeaderProps = _usePopoverContext4.getHeaderProps;
  var styles3 = useStyles2();
  return React69.createElement(chakra2.header, _extends38({}, getHeaderProps(props, ref), {
    className: cx("chakra-popover__header", props.className),
    __css: styles3.header
  }));
});
if (__DEV__) {
  PopoverHeader.displayName = "PopoverHeader";
}
var PopoverBody = forwardRef5(function(props, ref) {
  var _usePopoverContext5 = usePopoverContext(), getBodyProps = _usePopoverContext5.getBodyProps;
  var styles3 = useStyles2();
  return React69.createElement(chakra2.div, _extends38({}, getBodyProps(props, ref), {
    className: cx("chakra-popover__body", props.className),
    __css: styles3.body
  }));
});
if (__DEV__) {
  PopoverBody.displayName = "PopoverBody";
}
var PopoverFooter = function PopoverFooter2(props) {
  var styles3 = useStyles2();
  return React69.createElement(chakra2.footer, _extends38({}, props, {
    className: cx("chakra-popover__footer", props.className),
    __css: styles3.footer
  }));
};
if (__DEV__) {
  PopoverFooter.displayName = "PopoverFooter";
}
var PopoverCloseButton = function PopoverCloseButton2(props) {
  var _usePopoverContext6 = usePopoverContext(), onClose = _usePopoverContext6.onClose;
  var styles3 = useStyles2();
  return React69.createElement(CloseButton2, _extends38({
    size: "sm",
    onClick: onClose,
    className: cx("chakra-popover__close-btn", props.className),
    __css: styles3.closeButton
  }, props));
};
if (__DEV__) {
  PopoverCloseButton.displayName = "PopoverCloseButton";
}
var PopoverArrow = function PopoverArrow2(props) {
  var _ref2;
  var bg = props.bg, bgColor = props.bgColor, backgroundColor = props.backgroundColor;
  var _usePopoverContext7 = usePopoverContext(), getArrowProps = _usePopoverContext7.getArrowProps, getArrowInnerProps = _usePopoverContext7.getArrowInnerProps;
  var styles3 = useStyles2();
  var arrowBg = (_ref2 = bg != null ? bg : bgColor) != null ? _ref2 : backgroundColor;
  return React69.createElement(chakra2.div, _extends38({}, getArrowProps(), {
    className: "chakra-popover__arrow-positioner"
  }), React69.createElement(chakra2.div, _extends38({
    className: cx("chakra-popover__arrow", props.className)
  }, getArrowInnerProps(props), {
    __css: _extends38({}, styles3.arrow, {
      "--popper-arrow-bg": arrowBg ? "colors." + arrowBg + ", " + arrowBg : void 0
    })
  })));
};
if (__DEV__) {
  PopoverArrow.displayName = "PopoverArrow";
}

// node_modules/.pnpm/@chakra-ui+progress@1.2.6_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/progress/dist/chakra-ui-progress.esm.js
var React70 = __toESM(require_react());
function _objectWithoutPropertiesLoose32(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends39() {
  _extends39 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends39.apply(this, arguments);
}
var spin2 = keyframes({
  "0%": {
    strokeDasharray: "1, 400",
    strokeDashoffset: "0"
  },
  "50%": {
    strokeDasharray: "400, 400",
    strokeDashoffset: "-100"
  },
  "100%": {
    strokeDasharray: "400, 400",
    strokeDashoffset: "-260"
  }
});
var rotate = keyframes({
  "0%": {
    transform: "rotate(0deg)"
  },
  "100%": {
    transform: "rotate(360deg)"
  }
});
var progress2 = keyframes({
  "0%": {
    left: "-40%"
  },
  "100%": {
    left: "100%"
  }
});
var stripe = keyframes({
  from: {
    backgroundPosition: "1rem 0"
  },
  to: {
    backgroundPosition: "0 0"
  }
});
function getProgressProps(options) {
  var _options$value = options.value, value = _options$value === void 0 ? 0 : _options$value, min2 = options.min, max2 = options.max, valueText = options.valueText, getValueText = options.getValueText, isIndeterminate = options.isIndeterminate;
  var percent2 = valueToPercent(value, min2, max2);
  var getAriaValueText = function getAriaValueText2() {
    if (value == null)
      return void 0;
    return isFunction(getValueText) ? getValueText(value, percent2) : valueText;
  };
  return {
    bind: {
      "data-indeterminate": isIndeterminate ? "" : void 0,
      "aria-valuemax": max2,
      "aria-valuemin": min2,
      "aria-valuenow": isIndeterminate ? void 0 : value,
      "aria-valuetext": getAriaValueText(),
      role: "progressbar"
    },
    percent: percent2,
    value
  };
}
var _excluded$117 = ["size", "isIndeterminate"];
var _excluded2$16 = ["size", "max", "min", "valueText", "getValueText", "value", "capIsRound", "children", "thickness", "color", "trackColor", "isIndeterminate"];
var Circle2 = function Circle3(props) {
  return React70.createElement(chakra2.circle, _extends39({
    cx: 50,
    cy: 50,
    r: 42,
    fill: "transparent"
  }, props));
};
if (__DEV__) {
  Circle2.displayName = "Circle";
}
var Shape = function Shape2(props) {
  var size3 = props.size, isIndeterminate = props.isIndeterminate, rest = _objectWithoutPropertiesLoose32(props, _excluded$117);
  return React70.createElement(chakra2.svg, _extends39({
    viewBox: "0 0 100 100",
    __css: {
      width: size3,
      height: size3,
      animation: isIndeterminate ? rotate + " 2s linear infinite" : void 0
    }
  }, rest));
};
if (__DEV__) {
  Shape.displayName = "Shape";
}
var CircularProgress = function CircularProgress2(props) {
  var _progress$percent;
  var _props$size = props.size, size3 = _props$size === void 0 ? "48px" : _props$size, _props$max = props.max, max2 = _props$max === void 0 ? 100 : _props$max, _props$min = props.min, min2 = _props$min === void 0 ? 0 : _props$min, valueText = props.valueText, getValueText = props.getValueText, value = props.value, capIsRound = props.capIsRound, children = props.children, _props$thickness = props.thickness, thickness = _props$thickness === void 0 ? "10px" : _props$thickness, _props$color = props.color, color4 = _props$color === void 0 ? "#0078d4" : _props$color, _props$trackColor = props.trackColor, trackColor = _props$trackColor === void 0 ? "#edebe9" : _props$trackColor, isIndeterminate = props.isIndeterminate, rest = _objectWithoutPropertiesLoose32(props, _excluded2$16);
  var progress4 = getProgressProps({
    min: min2,
    max: max2,
    value,
    valueText,
    getValueText,
    isIndeterminate
  });
  var determinant = isIndeterminate ? void 0 : ((_progress$percent = progress4.percent) != null ? _progress$percent : 0) * 2.64;
  var strokeDasharray = isUndefined(determinant) ? void 0 : determinant + " " + (264 - determinant);
  var indicatorProps = isIndeterminate ? {
    css: {
      animation: spin2 + " 1.5s linear infinite"
    }
  } : {
    strokeDashoffset: 66,
    strokeDasharray,
    transitionProperty: "stroke-dasharray, stroke",
    transitionDuration: "0.6s",
    transitionTimingFunction: "ease"
  };
  var rootStyles = {
    display: "inline-block",
    position: "relative",
    verticalAlign: "middle",
    fontSize: size3
  };
  return React70.createElement(chakra2.div, _extends39({
    className: "chakra-progress"
  }, progress4.bind, rest, {
    __css: rootStyles
  }), React70.createElement(Shape, {
    size: size3,
    isIndeterminate
  }, React70.createElement(Circle2, {
    stroke: trackColor,
    strokeWidth: thickness,
    className: "chakra-progress__track"
  }), React70.createElement(Circle2, _extends39({
    stroke: color4,
    strokeWidth: thickness,
    className: "chakra-progress__indicator",
    strokeLinecap: capIsRound ? "round" : void 0,
    opacity: progress4.value === 0 && !isIndeterminate ? 0 : void 0
  }, indicatorProps))), children);
};
if (__DEV__) {
  CircularProgress.displayName = "CircularProgress";
}
var CircularProgressLabel = chakra2("div", {
  baseStyle: {
    fontSize: "0.24em",
    top: "50%",
    left: "50%",
    width: "100%",
    textAlign: "center",
    position: "absolute",
    transform: "translate(-50%, -50%)"
  }
});
if (__DEV__) {
  CircularProgressLabel.displayName = "CircularProgressLabel";
}
var _excluded48 = ["min", "max", "value", "isIndeterminate"];
var _excluded216 = ["value", "min", "max", "hasStripe", "isAnimated", "children", "borderRadius", "isIndeterminate", "aria-label", "aria-labelledby"];
var ProgressLabel = function ProgressLabel2(props) {
  var styles3 = useStyles2();
  var labelStyles = _extends39({
    top: "50%",
    left: "50%",
    width: "100%",
    textAlign: "center",
    position: "absolute",
    transform: "translate(-50%, -50%)"
  }, styles3.label);
  return React70.createElement(chakra2.div, _extends39({}, props, {
    __css: labelStyles
  }));
};
if (__DEV__) {
  ProgressLabel.displayName = "ProgressLabel";
}
var ProgressFilledTrack = function ProgressFilledTrack2(props) {
  var min2 = props.min, max2 = props.max, value = props.value, isIndeterminate = props.isIndeterminate, rest = _objectWithoutPropertiesLoose32(props, _excluded48);
  var progress4 = getProgressProps({
    value,
    min: min2,
    max: max2,
    isIndeterminate
  });
  var styles3 = useStyles2();
  var trackStyles = _extends39({
    height: "100%"
  }, styles3.filledTrack);
  return React70.createElement(chakra2.div, _extends39({
    style: _extends39({
      width: progress4.percent + "%"
    }, rest.style)
  }, progress4.bind, rest, {
    __css: trackStyles
  }));
};
var Progress2 = function Progress3(props) {
  var _styles$track;
  var _omitThemingProps = omitThemingProps2(props), value = _omitThemingProps.value, _omitThemingProps$min = _omitThemingProps.min, min2 = _omitThemingProps$min === void 0 ? 0 : _omitThemingProps$min, _omitThemingProps$max = _omitThemingProps.max, max2 = _omitThemingProps$max === void 0 ? 100 : _omitThemingProps$max, hasStripe = _omitThemingProps.hasStripe, isAnimated = _omitThemingProps.isAnimated, children = _omitThemingProps.children, propBorderRadius = _omitThemingProps.borderRadius, isIndeterminate = _omitThemingProps.isIndeterminate, ariaLabel = _omitThemingProps["aria-label"], ariaLabelledBy = _omitThemingProps["aria-labelledby"], rest = _objectWithoutPropertiesLoose32(_omitThemingProps, _excluded216);
  var styles3 = useMultiStyleConfig("Progress", props);
  var borderRadius = propBorderRadius != null ? propBorderRadius : (_styles$track = styles3.track) == null ? void 0 : _styles$track.borderRadius;
  var stripeAnimation = {
    animation: stripe + " 1s linear infinite"
  };
  var shouldAddStripe = !isIndeterminate && hasStripe;
  var shouldAnimateStripe = shouldAddStripe && isAnimated;
  var css6 = _extends39({}, shouldAnimateStripe && stripeAnimation, isIndeterminate && {
    position: "absolute",
    willChange: "left",
    minWidth: "50%",
    animation: progress2 + " 1s ease infinite normal none running"
  });
  var trackStyles = _extends39({
    overflow: "hidden",
    position: "relative"
  }, styles3.track);
  return React70.createElement(chakra2.div, _extends39({
    borderRadius,
    __css: trackStyles
  }, rest), React70.createElement(StylesProvider2, {
    value: styles3
  }, React70.createElement(ProgressFilledTrack, {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    min: min2,
    max: max2,
    value,
    isIndeterminate,
    css: css6,
    borderRadius
  }), children));
};
if (__DEV__) {
  Progress2.displayName = "Progress";
}

// node_modules/.pnpm/@chakra-ui+radio@1.5.1_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/radio/dist/chakra-ui-radio.esm.js
var React71 = __toESM(require_react());
var import_react84 = __toESM(require_react());
function _objectWithoutPropertiesLoose33(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends40() {
  _extends40 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends40.apply(this, arguments);
}
var _excluded$36 = ["onChange", "value", "defaultValue", "name", "isDisabled", "isFocusable", "isNative"];
function useRadioGroup(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, onChangeProp = _props.onChange, valueProp = _props.value, defaultValue = _props.defaultValue, nameProp = _props.name, isDisabled2 = _props.isDisabled, isFocusable2 = _props.isFocusable, isNative = _props.isNative, htmlProps = _objectWithoutPropertiesLoose33(_props, _excluded$36);
  var _React$useState = React71.useState(defaultValue || ""), valueState = _React$useState[0], setValue = _React$useState[1];
  var _useControllableProp = useControllableProp(valueProp, valueState), isControlled = _useControllableProp[0], value = _useControllableProp[1];
  var ref = React71.useRef(null);
  var focus5 = React71.useCallback(function() {
    var rootNode = ref.current;
    if (!rootNode)
      return;
    var query = "input:not(:disabled):checked";
    var firstEnabledAndCheckedInput = rootNode.querySelector(query);
    if (firstEnabledAndCheckedInput) {
      firstEnabledAndCheckedInput.focus();
      return;
    }
    query = "input:not(:disabled)";
    var firstEnabledInput = rootNode.querySelector(query);
    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();
  }, []);
  var fallbackName = useId(void 0, "radio");
  var name = nameProp || fallbackName;
  var onChange = React71.useCallback(function(eventOrValue) {
    var nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;
    if (!isControlled) {
      setValue(nextValue);
    }
    onChangeProp == null ? void 0 : onChangeProp(String(nextValue));
  }, [onChangeProp, isControlled]);
  var getRootProps = React71.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends40({}, props2, {
      ref: mergeRefs(forwardedRef, ref),
      role: "radiogroup"
    });
  }, []);
  var getRadioProps = React71.useCallback(function(props2, ref2) {
    var _extends210;
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref2 === void 0) {
      ref2 = null;
    }
    var checkedKey = isNative ? "checked" : "isChecked";
    return _extends40({}, props2, (_extends210 = {
      ref: ref2,
      name
    }, _extends210[checkedKey] = value != null ? props2.value === value : void 0, _extends210.onChange = onChange, _extends210["data-radiogroup"] = true, _extends210));
  }, [isNative, name, onChange, value]);
  return {
    getRootProps,
    getRadioProps,
    name,
    ref,
    focus: focus5,
    setValue,
    value,
    onChange,
    isDisabled: isDisabled2,
    isFocusable: isFocusable2,
    htmlProps
  };
}
var _excluded$28 = ["colorScheme", "size", "variant", "children", "className", "isDisabled", "isFocusable"];
var _createContext17 = createContext3({
  name: "RadioGroupContext",
  strict: false
});
var RadioGroupProvider = _createContext17[0];
var useRadioGroupContext = _createContext17[1];
var RadioGroup = forwardRef5(function(props, ref) {
  var colorScheme = props.colorScheme, size3 = props.size, variant = props.variant, children = props.children, className = props.className, isDisabled2 = props.isDisabled, isFocusable2 = props.isFocusable, rest = _objectWithoutPropertiesLoose33(props, _excluded$28);
  var _useRadioGroup = useRadioGroup(rest), value = _useRadioGroup.value, onChange = _useRadioGroup.onChange, getRootProps = _useRadioGroup.getRootProps, name = _useRadioGroup.name, htmlProps = _useRadioGroup.htmlProps;
  var group = React71.useMemo(function() {
    return {
      name,
      size: size3,
      onChange,
      colorScheme,
      value,
      variant,
      isDisabled: isDisabled2,
      isFocusable: isFocusable2
    };
  }, [name, size3, onChange, colorScheme, value, variant, isDisabled2, isFocusable2]);
  var groupProps = getRootProps(htmlProps, ref);
  var _className = cx("chakra-radio-group", className);
  return React71.createElement(RadioGroupProvider, {
    value: group
  }, React71.createElement(chakra2.div, _extends40({}, groupProps, {
    className: _className
  }), children));
});
if (__DEV__) {
  RadioGroup.displayName = "RadioGroup";
}
var _excluded$118 = ["defaultIsChecked", "defaultChecked", "isChecked", "isFocusable", "isDisabled", "isReadOnly", "isRequired", "onChange", "isInvalid", "name", "value", "id", "data-radiogroup", "aria-describedby"];
function useRadio(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, defaultIsChecked = _props.defaultIsChecked, _props$defaultChecked = _props.defaultChecked, defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked, isCheckedProp = _props.isChecked, isFocusable2 = _props.isFocusable, isDisabledProp = _props.isDisabled, isReadOnlyProp = _props.isReadOnly, isRequiredProp = _props.isRequired, onChange = _props.onChange, isInvalidProp = _props.isInvalid, name = _props.name, value = _props.value, idProp = _props.id, dataRadioGroup = _props["data-radiogroup"], ariaDescribedBy = _props["aria-describedby"], htmlProps = _objectWithoutPropertiesLoose33(_props, _excluded$118);
  var uuid = useId(void 0, "radio");
  var formControl = useFormControlContext();
  var group = useRadioGroupContext();
  var isWithinRadioGroup = !!group || !!dataRadioGroup;
  var isWithinFormControl = !!formControl;
  var id2 = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;
  id2 = idProp != null ? idProp : id2;
  var isDisabled2 = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;
  var isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;
  var isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;
  var isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;
  var _useBoolean = useBoolean(), isFocused = _useBoolean[0], setFocused = _useBoolean[1];
  var _useBoolean2 = useBoolean(), isHovered = _useBoolean2[0], setHovering = _useBoolean2[1];
  var _useBoolean3 = useBoolean(), isActive = _useBoolean3[0], setActive = _useBoolean3[1];
  var _useState = (0, import_react84.useState)(Boolean(defaultChecked)), isCheckedState = _useState[0], setChecked = _useState[1];
  var _useControllableProp = useControllableProp(isCheckedProp, isCheckedState), isControlled = _useControllableProp[0], isChecked = _useControllableProp[1];
  warn({
    condition: !!defaultIsChecked,
    message: 'The "defaultIsChecked" prop has been deprecated and will be removed in a future version. Please use the "defaultChecked" prop instead, which mirrors default React checkbox behavior.'
  });
  var handleChange = (0, import_react84.useCallback)(function(event) {
    if (isReadOnly || isDisabled2) {
      event.preventDefault();
      return;
    }
    if (!isControlled) {
      setChecked(event.target.checked);
    }
    onChange == null ? void 0 : onChange(event);
  }, [isControlled, isDisabled2, isReadOnly, onChange]);
  var onKeyDown = (0, import_react84.useCallback)(function(event) {
    if (event.key === " ") {
      setActive.on();
    }
  }, [setActive]);
  var onKeyUp = (0, import_react84.useCallback)(function(event) {
    if (event.key === " ") {
      setActive.off();
    }
  }, [setActive]);
  var getRadioProps = (0, import_react84.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends40({}, props2, {
      ref,
      "data-active": dataAttr(isActive),
      "data-hover": dataAttr(isHovered),
      "data-disabled": dataAttr(isDisabled2),
      "data-invalid": dataAttr(isInvalid),
      "data-checked": dataAttr(isChecked),
      "data-focus": dataAttr(isFocused),
      "data-readonly": dataAttr(isReadOnly),
      "aria-hidden": true,
      onMouseDown: callAllHandlers(props2.onMouseDown, setActive.on),
      onMouseUp: callAllHandlers(props2.onMouseUp, setActive.off),
      onMouseEnter: callAllHandlers(props2.onMouseEnter, setHovering.on),
      onMouseLeave: callAllHandlers(props2.onMouseLeave, setHovering.off)
    });
  }, [isActive, isHovered, isDisabled2, isInvalid, isChecked, isFocused, isReadOnly, setActive.on, setActive.off, setHovering.on, setHovering.off]);
  var _ref2 = formControl != null ? formControl : {}, onFocus3 = _ref2.onFocus, onBlur3 = _ref2.onBlur;
  var getInputProps = (0, import_react84.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var trulyDisabled = isDisabled2 && !isFocusable2;
    return _extends40({}, props2, {
      id: id2,
      ref,
      type: "radio",
      name,
      value,
      onChange: callAllHandlers(props2.onChange, handleChange),
      onBlur: callAllHandlers(onBlur3, props2.onBlur, setFocused.off),
      onFocus: callAllHandlers(onFocus3, props2.onFocus, setFocused.on),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),
      checked: isChecked,
      disabled: trulyDisabled,
      readOnly: isReadOnly,
      required: isRequired,
      "aria-invalid": ariaAttr(isInvalid),
      "aria-disabled": ariaAttr(trulyDisabled),
      "aria-required": ariaAttr(isRequired),
      "data-readonly": dataAttr(isReadOnly),
      "aria-describedby": ariaDescribedBy,
      style: visuallyHiddenStyle
    });
  }, [isDisabled2, isFocusable2, id2, name, value, handleChange, onBlur3, setFocused, onFocus3, onKeyDown, onKeyUp, isChecked, isReadOnly, isRequired, isInvalid, ariaDescribedBy]);
  var getLabelProps = function getLabelProps2(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends40({}, props2, {
      ref,
      onMouseDown: callAllHandlers(props2.onMouseDown, stop),
      onTouchStart: callAllHandlers(props2.onTouchStart, stop),
      "data-disabled": dataAttr(isDisabled2),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  };
  var getRootProps = function getRootProps2(props2, ref) {
    if (ref === void 0) {
      ref = null;
    }
    return _extends40({}, props2, {
      ref,
      "data-disabled": dataAttr(isDisabled2),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  };
  var state3 = {
    isInvalid,
    isFocused,
    isChecked,
    isActive,
    isHovered,
    isDisabled: isDisabled2,
    isReadOnly,
    isRequired
  };
  return {
    state: state3,
    getCheckboxProps: getRadioProps,
    getInputProps,
    getLabelProps,
    getRootProps,
    htmlProps
  };
}
function stop(event) {
  event.preventDefault();
  event.stopPropagation();
}
var _excluded49 = ["spacing", "children", "isFullWidth", "isDisabled", "isFocusable", "inputProps"];
var Radio2 = forwardRef5(function(props, ref) {
  var _props$name;
  var group = useRadioGroupContext();
  var onChangeProp = props.onChange, valueProp = props.value;
  var styles3 = useMultiStyleConfig("Radio", _extends40({}, group, props));
  var ownProps = omitThemingProps2(props);
  var _ownProps$spacing = ownProps.spacing, spacing3 = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing, children = ownProps.children, isFullWidth = ownProps.isFullWidth, _ownProps$isDisabled = ownProps.isDisabled, isDisabled2 = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled, _ownProps$isFocusable = ownProps.isFocusable, isFocusable2 = _ownProps$isFocusable === void 0 ? group == null ? void 0 : group.isFocusable : _ownProps$isFocusable, htmlInputProps = ownProps.inputProps, rest = _objectWithoutPropertiesLoose33(ownProps, _excluded49);
  var isChecked = props.isChecked;
  if ((group == null ? void 0 : group.value) != null && valueProp != null) {
    isChecked = group.value === valueProp;
  }
  var onChange = onChangeProp;
  if (group != null && group.onChange && valueProp != null) {
    onChange = callAll(group.onChange, onChangeProp);
  }
  var name = (_props$name = props == null ? void 0 : props.name) != null ? _props$name : group == null ? void 0 : group.name;
  var _useRadio = useRadio(_extends40({}, rest, {
    isChecked,
    isFocusable: isFocusable2,
    isDisabled: isDisabled2,
    onChange,
    name
  })), getInputProps = _useRadio.getInputProps, getCheckboxProps = _useRadio.getCheckboxProps, getLabelProps = _useRadio.getLabelProps, getRootProps = _useRadio.getRootProps, htmlProps = _useRadio.htmlProps;
  var _split = split(htmlProps, layoutPropNames2), layoutProps = _split[0], otherProps = _split[1];
  var checkboxProps = getCheckboxProps(otherProps);
  var inputProps = getInputProps(htmlInputProps, ref);
  var labelProps = getLabelProps();
  var rootProps = Object.assign({}, layoutProps, getRootProps());
  var rootStyles = _extends40({
    width: isFullWidth ? "full" : void 0,
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    cursor: "pointer"
  }, styles3.container);
  var checkboxStyles = _extends40({
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0
  }, styles3.control);
  var labelStyles = _extends40({
    userSelect: "none",
    marginStart: spacing3
  }, styles3.label);
  return React71.createElement(chakra2.label, _extends40({
    className: "chakra-radio"
  }, rootProps, {
    __css: rootStyles
  }), React71.createElement("input", _extends40({
    className: "chakra-radio__input"
  }, inputProps)), React71.createElement(chakra2.span, _extends40({
    className: "chakra-radio__control"
  }, checkboxProps, {
    __css: checkboxStyles
  })), children && React71.createElement(chakra2.span, _extends40({
    className: "chakra-radio__label"
  }, labelProps, {
    __css: labelStyles
  }), children));
});
if (__DEV__) {
  Radio2.displayName = "Radio";
}

// node_modules/.pnpm/@chakra-ui+select@1.2.11_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/select/dist/chakra-ui-select.esm.js
var React72 = __toESM(require_react());
function _extends41() {
  _extends41 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends41.apply(this, arguments);
}
function _objectWithoutPropertiesLoose34(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded50 = ["children", "placeholder", "className"];
var _excluded217 = ["rootProps", "placeholder", "icon", "color", "height", "h", "minH", "minHeight", "iconColor", "iconSize", "isFullWidth"];
var _excluded312 = ["children"];
var SelectField = forwardRef5(function(props, ref) {
  var children = props.children, placeholder = props.placeholder, className = props.className, rest = _objectWithoutPropertiesLoose34(props, _excluded50);
  return React72.createElement(chakra2.select, _extends41({}, rest, {
    ref,
    className: cx("chakra-select", className)
  }), placeholder && React72.createElement("option", {
    value: ""
  }, placeholder), children);
});
if (__DEV__) {
  SelectField.displayName = "SelectField";
}
var Select2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Select", props);
  var _omitThemingProps = omitThemingProps2(props), rootProps = _omitThemingProps.rootProps, placeholder = _omitThemingProps.placeholder, icon = _omitThemingProps.icon, color4 = _omitThemingProps.color, height = _omitThemingProps.height, h = _omitThemingProps.h, minH = _omitThemingProps.minH, minHeight = _omitThemingProps.minHeight, iconColor = _omitThemingProps.iconColor, iconSize = _omitThemingProps.iconSize;
  _omitThemingProps.isFullWidth;
  var rest = _objectWithoutPropertiesLoose34(_omitThemingProps, _excluded217);
  var _split = split(rest, layoutPropNames2), layoutProps = _split[0], otherProps = _split[1];
  var ownProps = useFormControl(otherProps);
  var rootStyles = {
    width: "100%",
    height: "fit-content",
    position: "relative",
    color: color4
  };
  var fieldStyles = (0, import_lodash.default)({
    paddingEnd: "2rem"
  }, styles3.field, {
    _focus: {
      zIndex: "unset"
    }
  });
  return React72.createElement(chakra2.div, _extends41({
    className: "chakra-select__wrapper",
    __css: rootStyles
  }, layoutProps, rootProps), React72.createElement(SelectField, _extends41({
    ref,
    height: h != null ? h : height,
    minH: minH != null ? minH : minHeight,
    placeholder
  }, ownProps, {
    __css: fieldStyles
  }), props.children), React72.createElement(SelectIcon, _extends41({
    "data-disabled": dataAttr(ownProps.disabled)
  }, (iconColor || color4) && {
    color: iconColor || color4
  }, {
    __css: styles3.icon
  }, iconSize && {
    fontSize: iconSize
  }), icon));
});
if (__DEV__) {
  Select2.displayName = "Select";
}
var DefaultIcon3 = function DefaultIcon4(props) {
  return React72.createElement("svg", _extends41({
    viewBox: "0 0 24 24"
  }, props), React72.createElement("path", {
    fill: "currentColor",
    d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
  }));
};
var IconWrapper = chakra2("div", {
  baseStyle: {
    position: "absolute",
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    pointerEvents: "none",
    top: "50%",
    transform: "translateY(-50%)"
  }
});
var SelectIcon = function SelectIcon2(props) {
  var _props$children = props.children, children = _props$children === void 0 ? React72.createElement(DefaultIcon3, null) : _props$children, rest = _objectWithoutPropertiesLoose34(props, _excluded312);
  var clone = React72.cloneElement(children, {
    role: "presentation",
    className: "chakra-select__icon",
    focusable: false,
    "aria-hidden": true,
    style: {
      width: "1em",
      height: "1em",
      color: "currentColor"
    }
  });
  return React72.createElement(IconWrapper, _extends41({}, rest, {
    className: "chakra-select__icon-wrapper"
  }), React72.isValidElement(children) ? clone : null);
};
if (__DEV__) {
  SelectIcon.displayName = "SelectIcon";
}

// node_modules/.pnpm/@chakra-ui+media-query@2.0.4_vd5udm3s22ynybk3bqqso5xvmy/node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js
var React73 = __toESM(require_react());
var import_react85 = __toESM(require_react());
var useSafeLayoutEffect5 = isBrowser2 ? React73.useLayoutEffect : React73.useEffect;
function useMediaQuery2(query) {
  var env3 = useEnvironment();
  var queries2 = Array.isArray(query) ? query : [query];
  var isSupported = isBrowser2 && "matchMedia" in env3.window;
  var _React$useState = React73.useState(queries2.map(function(query2) {
    return isSupported ? !!env3.window.matchMedia(query2).matches : false;
  })), matches = _React$useState[0], setMatches = _React$useState[1];
  useSafeLayoutEffect5(function() {
    if (!isSupported)
      return void 0;
    var mediaQueryList = queries2.map(function(query2) {
      return env3.window.matchMedia(query2);
    });
    var listenerList = mediaQueryList.map(function(_, index2) {
      var listener = function listener2(mqlEvent) {
        var queryIndex = mediaQueryList.findIndex(function(mediaQuery) {
          return mediaQuery.media === mqlEvent.media;
        });
        setMatches(function(matches2) {
          var currentMatches = matches2.map(function(x) {
            return x;
          });
          currentMatches[queryIndex] = mqlEvent.matches;
          return currentMatches;
        });
      };
      if (typeof mediaQueryList[index2].addEventListener === "function") {
        mediaQueryList[index2].addEventListener("change", listener);
      } else {
        mediaQueryList[index2].addListener(listener);
      }
      return listener;
    });
    return function() {
      mediaQueryList.forEach(function(_, index2) {
        if (typeof mediaQueryList[index2].removeEventListener === "function") {
          mediaQueryList[index2].removeEventListener("change", listenerList[index2]);
        } else {
          mediaQueryList[index2].removeListener(listenerList[index2]);
        }
      });
    };
  }, []);
  return matches;
}
var Visibility3 = function Visibility4(props) {
  var breakpoint = props.breakpoint, hide2 = props.hide, children = props.children;
  var _useMediaQuery = useMediaQuery2(breakpoint), show = _useMediaQuery[0];
  var isVisible = hide2 ? !show : show;
  var rendered = isVisible ? children : null;
  return rendered;
};
var Hide3 = function Hide4(props) {
  var children = props.children;
  var query = useQuery2(props);
  return React73.createElement(Visibility3, {
    breakpoint: query,
    hide: true
  }, children);
};
if (__DEV__) {
  Hide3.displayName = "Hide";
}
var Show3 = function Show4(props) {
  var children = props.children;
  var query = useQuery2(props);
  return React73.createElement(Visibility3, {
    breakpoint: query
  }, children);
};
if (__DEV__) {
  Show3.displayName = "Show";
}
var getBreakpoint3 = function getBreakpoint4(theme3, value) {
  return memoizedGet(theme3, "breakpoints." + value, value);
};
function useQuery2(props) {
  var _props$breakpoint = props.breakpoint, breakpoint = _props$breakpoint === void 0 ? "" : _props$breakpoint, below = props.below, above = props.above;
  var theme3 = useTheme2();
  var bpBelow = getBreakpoint3(theme3, below);
  var bpAbove = getBreakpoint3(theme3, above);
  var query = breakpoint;
  if (bpBelow) {
    query = "(max-width: " + bpBelow + ")";
  } else if (bpAbove) {
    query = "(min-width: " + bpAbove + ")";
  }
  return query;
}
function useBreakpoint2(defaultBreakpoint) {
  if (defaultBreakpoint === void 0) {
    defaultBreakpoint = "base";
  }
  var _useTheme = useTheme2(), __breakpoints = _useTheme.__breakpoints;
  var env3 = useEnvironment();
  var queries2 = import_react85.default.useMemo(function() {
    var _breakpoints$details;
    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function(_ref2) {
      var minMaxQuery = _ref2.minMaxQuery, breakpoint = _ref2.breakpoint;
      return {
        breakpoint,
        query: minMaxQuery.replace("@media screen and ", "")
      };
    })) != null ? _breakpoints$details : [];
  }, [__breakpoints]);
  var _React$useState = import_react85.default.useState(function() {
    if (defaultBreakpoint) {
      var fallbackBreakpointDetail = queries2.find(function(_ref2) {
        var breakpoint = _ref2.breakpoint;
        return breakpoint === defaultBreakpoint;
      });
      if (fallbackBreakpointDetail) {
        return fallbackBreakpointDetail.breakpoint;
      }
    }
    if (env3.window.matchMedia) {
      var matchingBreakpointDetail = queries2.find(function(_ref3) {
        var query = _ref3.query;
        return env3.window.matchMedia(query).matches;
      });
      if (matchingBreakpointDetail) {
        return matchingBreakpointDetail.breakpoint;
      }
    }
    return void 0;
  }), currentBreakpoint = _React$useState[0], setCurrentBreakpoint = _React$useState[1];
  import_react85.default.useEffect(function() {
    var allUnregisterFns = queries2.map(function(_ref4) {
      var breakpoint = _ref4.breakpoint, query = _ref4.query;
      var mediaQueryList = env3.window.matchMedia(query);
      if (mediaQueryList.matches) {
        setCurrentBreakpoint(breakpoint);
      }
      var handleChange = function handleChange2(ev) {
        if (ev.matches) {
          setCurrentBreakpoint(breakpoint);
        }
      };
      if (typeof mediaQueryList.addEventListener === "function") {
        mediaQueryList.addEventListener("change", handleChange);
      } else {
        mediaQueryList.addListener(handleChange);
      }
      return function() {
        if (typeof mediaQueryList.removeEventListener === "function") {
          mediaQueryList.removeEventListener("change", handleChange);
        } else {
          mediaQueryList.removeListener(handleChange);
        }
      };
    });
    return function() {
      allUnregisterFns.forEach(function(unregister) {
        return unregister();
      });
    };
  }, [queries2, __breakpoints, env3.window]);
  return currentBreakpoint;
}
function getClosestValue2(values, breakpoint, breakpoints$1) {
  if (breakpoints$1 === void 0) {
    breakpoints$1 = breakpoints;
  }
  var index2 = Object.keys(values).indexOf(breakpoint);
  if (index2 !== -1) {
    return values[breakpoint];
  }
  var stopIndex = breakpoints$1.indexOf(breakpoint);
  while (stopIndex >= 0) {
    var key = breakpoints$1[stopIndex];
    if (values[key] != null) {
      index2 = stopIndex;
      break;
    }
    stopIndex -= 1;
  }
  if (index2 !== -1) {
    var _key = breakpoints$1[index2];
    return values[_key];
  }
  return void 0;
}
function useBreakpointValue2(values, defaultBreakpoint) {
  var _theme$__breakpoints;
  var breakpoint = useBreakpoint2(defaultBreakpoint);
  var theme3 = useTheme2();
  if (!breakpoint)
    return void 0;
  var breakpoints5 = Array.from(((_theme$__breakpoints = theme3.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);
  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints5)).map(function(_ref2) {
    var key = _ref2[0], value = _ref2[1];
    return [key, value];
  })) : values;
  return getClosestValue2(obj, breakpoint, breakpoints5);
}

// node_modules/.pnpm/@chakra-ui+skeleton@1.2.14_2hfk4c53rim7v7ogs4r7lamoay/node_modules/@chakra-ui/skeleton/dist/chakra-ui-skeleton.esm.js
var React74 = __toESM(require_react());
function _extends42() {
  _extends42 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends42.apply(this, arguments);
}
function _objectWithoutPropertiesLoose35(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded51 = ["startColor", "endColor", "isLoaded", "fadeDuration", "speed", "className"];
var _excluded218 = ["noOfLines", "spacing", "skeletonHeight", "className", "startColor", "endColor", "isLoaded", "fadeDuration", "speed", "children"];
var _excluded313 = ["size"];
var StyledSkeleton = chakra("div", {
  baseStyle: {
    boxShadow: "none",
    backgroundClip: "padding-box",
    cursor: "default",
    color: "transparent",
    pointerEvents: "none",
    userSelect: "none",
    "&::before, &::after, *": {
      visibility: "hidden"
    }
  }
});
var fade3 = keyframes({
  from: {
    opacity: 0
  },
  to: {
    opacity: 1
  }
});
var useIsFirstRender = function useIsFirstRender2() {
  var isFirstRender = React74.useRef(true);
  React74.useEffect(function() {
    isFirstRender.current = false;
  }, []);
  return isFirstRender.current;
};
var Skeleton2 = forwardRef3(function(props, ref) {
  var styles3 = useStyleConfig("Skeleton", props);
  var isFirstRender = useIsFirstRender();
  var _omitThemingProps = omitThemingProps(props);
  _omitThemingProps.startColor;
  _omitThemingProps.endColor;
  var isLoaded = _omitThemingProps.isLoaded, fadeDuration = _omitThemingProps.fadeDuration;
  _omitThemingProps.speed;
  var className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose35(_omitThemingProps, _excluded51);
  var wasPreviouslyLoaded = usePrevious(isLoaded);
  var _className = cx("chakra-skeleton", className);
  if (isLoaded) {
    var animation = isFirstRender || wasPreviouslyLoaded ? "none" : fade3 + " " + fadeDuration + "s";
    return React74.createElement(chakra.div, _extends42({
      ref,
      className: _className,
      __css: {
        animation
      }
    }, rest));
  }
  return React74.createElement(StyledSkeleton, _extends42({
    ref,
    className: _className
  }, rest, {
    __css: styles3
  }));
});
Skeleton2.defaultProps = {
  fadeDuration: 0.4,
  speed: 0.8
};
if (__DEV__) {
  Skeleton2.displayName = "Skeleton";
}
function range(count) {
  return Array(count).fill(1).map(function(_, index2) {
    return index2 + 1;
  });
}
var defaultNoOfLines = 3;
var SkeletonText = function SkeletonText2(props) {
  var _props$noOfLines = props.noOfLines, noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines, _props$spacing = props.spacing, spacing3 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, _props$skeletonHeight = props.skeletonHeight, skeletonHeight = _props$skeletonHeight === void 0 ? "0.5rem" : _props$skeletonHeight, className = props.className, startColor = props.startColor, endColor = props.endColor, isLoaded = props.isLoaded, fadeDuration = props.fadeDuration, speed = props.speed, children = props.children, rest = _objectWithoutPropertiesLoose35(props, _excluded218);
  var noOfLinesValue = useBreakpointValue2(typeof noOfLines === "number" ? [noOfLines] : noOfLines) || defaultNoOfLines;
  var numbers = range(noOfLinesValue);
  var getWidth = function getWidth2(index2) {
    if (noOfLinesValue > 1) {
      return index2 === numbers.length ? "80%" : "100%";
    }
    return "100%";
  };
  var _className = cx("chakra-skeleton__group", className);
  return React74.createElement(chakra.div, _extends42({
    className: _className
  }, rest), numbers.map(function(number2, index2) {
    if (isLoaded && index2 > 0) {
      return null;
    }
    var sizeProps = isLoaded ? null : {
      mb: number2 === numbers.length ? "0" : spacing3,
      width: getWidth(number2),
      height: skeletonHeight
    };
    return React74.createElement(Skeleton2, _extends42({
      key: numbers.length.toString() + number2,
      startColor,
      endColor,
      isLoaded,
      fadeDuration,
      speed
    }, sizeProps), index2 === 0 ? children : void 0);
  }));
};
if (__DEV__) {
  SkeletonText.displayName = "SkeletonText";
}
var SkeletonCircle = function SkeletonCircle2(_ref2) {
  var _ref$size = _ref2.size, size3 = _ref$size === void 0 ? "2rem" : _ref$size, rest = _objectWithoutPropertiesLoose35(_ref2, _excluded313);
  return React74.createElement(Skeleton2, _extends42({
    borderRadius: "full",
    boxSize: size3
  }, rest));
};
if (__DEV__) {
  SkeletonCircle.displayName = "SkeletonCircle";
}

// node_modules/.pnpm/@chakra-ui+slider@1.5.11_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/slider/dist/chakra-ui-slider.esm.js
var React75 = __toESM(require_react());
var import_react86 = __toESM(require_react());
function _extends43() {
  _extends43 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends43.apply(this, arguments);
}
function _objectWithoutPropertiesLoose36(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function getIds(id2) {
  return {
    root: "slider-root-" + id2,
    getThumb: function getThumb(i) {
      return "slider-thumb-" + id2 + "-" + i;
    },
    getInput: function getInput(i) {
      return "slider-input-" + id2 + "-" + i;
    },
    track: "slider-track-" + id2,
    innerTrack: "slider-filled-track-" + id2,
    getMarker: function getMarker(i) {
      return "slider-marker-" + id2 + "-" + i;
    },
    output: "slider-output-" + id2
  };
}
function orient$1(options) {
  var orientation = options.orientation, vertical = options.vertical, horizontal = options.horizontal;
  return orientation === "vertical" ? vertical : horizontal;
}
var zeroRect = {
  width: 0,
  height: 0
};
function getStyles2(options) {
  var orientation = options.orientation, thumbPercents = options.thumbPercents, thumbRects = options.thumbRects, isReversed = options.isReversed;
  var getThumbStyle = function getThumbStyle2(i) {
    return _extends43({
      position: "absolute",
      userSelect: "none",
      WebkitUserSelect: "none",
      MozUserSelect: "none",
      msUserSelect: "none",
      touchAction: "none"
    }, orient$1({
      orientation,
      vertical: {
        bottom: "calc(" + thumbPercents[i] + "% - " + thumbRects[i].height / 2 + "px)"
      },
      horizontal: {
        left: "calc(" + thumbPercents[i] + "% - " + thumbRects[i].width / 2 + "px)"
      }
    }));
  };
  var size3 = orientation === "vertical" ? thumbRects.reduce(function(a2, b2) {
    return a2.height > b2.height ? a2 : b2;
  }, zeroRect) : thumbRects.reduce(function(a2, b2) {
    return a2.width > b2.width ? a2 : b2;
  }, zeroRect);
  var rootStyle = _extends43({
    position: "relative",
    touchAction: "none",
    WebkitTapHighlightColor: "rgba(0,0,0,0)",
    userSelect: "none",
    outline: 0
  }, orient$1({
    orientation,
    vertical: {
      paddingLeft: size3.width / 2,
      paddingRight: size3.width / 2
    },
    horizontal: {
      paddingTop: size3.height / 2,
      paddingBottom: size3.height / 2
    }
  }));
  var trackStyle = _extends43({
    position: "absolute"
  }, orient$1({
    orientation,
    vertical: {
      left: "50%",
      transform: "translateX(-50%)",
      height: "100%"
    },
    horizontal: {
      top: "50%",
      transform: "translateY(-50%)",
      width: "100%"
    }
  }));
  var isSingleThumb = thumbPercents.length === 1;
  var fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];
  var range2 = isSingleThumb ? fallback : thumbPercents;
  var start2 = range2[0];
  if (!isSingleThumb && isReversed) {
    start2 = 100 - start2;
  }
  var percent2 = Math.abs(range2[range2.length - 1] - range2[0]);
  var innerTrackStyle = _extends43({}, trackStyle, orient$1({
    orientation,
    vertical: isReversed ? {
      height: percent2 + "%",
      top: start2 + "%"
    } : {
      height: percent2 + "%",
      bottom: start2 + "%"
    },
    horizontal: isReversed ? {
      width: percent2 + "%",
      right: start2 + "%"
    } : {
      width: percent2 + "%",
      left: start2 + "%"
    }
  }));
  return {
    trackStyle,
    innerTrackStyle,
    rootStyle,
    getThumbStyle
  };
}
function getIsReversed(options) {
  var isReversed = options.isReversed, direction3 = options.direction, orientation = options.orientation;
  if (direction3 === "ltr" || orientation === "vertical") {
    return isReversed;
  }
  return !isReversed;
}
var _excluded$37 = ["min", "max", "onChange", "value", "defaultValue", "isReversed", "direction", "orientation", "id", "isDisabled", "isReadOnly", "onChangeStart", "onChangeEnd", "step", "getAriaValueText", "aria-valuetext", "aria-label", "aria-labelledby", "name", "focusThumbOnChange", "minStepsBetweenThumbs"];
var _excluded219 = ["index"];
var _excluded314 = ["value"];
var _excluded410 = ["index"];
function useRangeSlider(props) {
  var _props$min = props.min, min2 = _props$min === void 0 ? 0 : _props$min, _props$max = props.max, max2 = _props$max === void 0 ? 100 : _props$max, onChange = props.onChange, valueProp = props.value, defaultValue = props.defaultValue, isReversedProp = props.isReversed, _props$direction = props.direction, direction3 = _props$direction === void 0 ? "ltr" : _props$direction, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, idProp = props.id, isDisabled2 = props.isDisabled, isReadOnly = props.isReadOnly, onChangeStartProp = props.onChangeStart, onChangeEndProp = props.onChangeEnd, _props$step = props.step, step = _props$step === void 0 ? 1 : _props$step, getAriaValueTextProp = props.getAriaValueText, ariaValueText = props["aria-valuetext"], ariaLabel = props["aria-label"], ariaLabelledBy = props["aria-labelledby"], name = props.name, _props$focusThumbOnCh = props.focusThumbOnChange, focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh, _props$minStepsBetwee = props.minStepsBetweenThumbs, minStepsBetweenThumbs = _props$minStepsBetwee === void 0 ? 0 : _props$minStepsBetwee, htmlProps = _objectWithoutPropertiesLoose36(props, _excluded$37);
  var onChangeStart = useCallbackRef(onChangeStartProp);
  var onChangeEnd = useCallbackRef(onChangeEndProp);
  var getAriaValueText = useCallbackRef(getAriaValueTextProp);
  var isReversed = getIsReversed({
    isReversed: isReversedProp,
    direction: direction3,
    orientation
  });
  var _useControllableState = useControllableState({
    value: valueProp,
    defaultValue: defaultValue != null ? defaultValue : [25, 75],
    onChange
  }), valueState = _useControllableState[0], setValue = _useControllableState[1];
  if (!Array.isArray(valueState)) {
    throw new TypeError("[range-slider] You passed an invalid value for `value` or `defaultValue`, expected `Array` but got `" + typeof valueState + "`");
  }
  var _useBoolean = useBoolean(), isDragging = _useBoolean[0], setDragging = _useBoolean[1];
  var _useBoolean2 = useBoolean(), isFocused = _useBoolean2[0], setFocused = _useBoolean2[1];
  var _useState = (0, import_react86.useState)(-1), activeIndex = _useState[0], setActiveIndex = _useState[1];
  var eventSourceRef = (0, import_react86.useRef)(null);
  var isInteractive = !(isDisabled2 || isReadOnly);
  var initialValue = (0, import_react86.useRef)(valueState);
  var value = valueState.map(function(val) {
    return clampValue(val, min2, max2);
  });
  var valueRef = useLatestRef(value);
  var spacing3 = minStepsBetweenThumbs * step;
  var valueBounds = getValueBounds(value, min2, max2, spacing3);
  var reversedValue = value.map(function(val) {
    return max2 - val + min2;
  });
  var thumbValues = isReversed ? reversedValue : value;
  var thumbPercents = thumbValues.map(function(val) {
    return valueToPercent(val, min2, max2);
  });
  var isVertical = orientation === "vertical";
  var _useState2 = (0, import_react86.useState)(Array.from({
    length: value.length
  }).map(function() {
    return {
      width: 0,
      height: 0
    };
  })), thumbRects = _useState2[0], setThumbRects = _useState2[1];
  (0, import_react86.useEffect)(function() {
    var _rootRef$current;
    if (!rootRef.current)
      return;
    var thumbs = Array.from((_rootRef$current = rootRef.current) == null ? void 0 : _rootRef$current.querySelectorAll("[role=slider]"));
    var rects = thumbs.map(function(el) {
      return {
        width: el.offsetWidth,
        height: el.offsetHeight
      };
    });
    if (rects.length)
      setThumbRects(rects);
  }, []);
  var trackRef = (0, import_react86.useRef)(null);
  var rootRef = (0, import_react86.useRef)(null);
  var uuid = useId(idProp);
  var ids = getIds(uuid);
  var getValueFromPointer = (0, import_react86.useCallback)(function(event) {
    var _event$touches$, _event$touches;
    if (!trackRef.current)
      return;
    eventSourceRef.current = "pointer";
    var rect = trackRef.current.getBoundingClientRect();
    var _ref2 = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event, clientX = _ref2.clientX, clientY = _ref2.clientY;
    var diff = isVertical ? rect.bottom - clientY : clientX - rect.left;
    var length2 = isVertical ? rect.height : rect.width;
    var percent2 = diff / length2;
    if (isReversed)
      percent2 = 1 - percent2;
    return percentToValue(percent2, min2, max2);
  }, [isVertical, isReversed, max2, min2]);
  var tenSteps = (max2 - min2) / 10;
  var oneStep = step || (max2 - min2) / 100;
  var actions = (0, import_react86.useMemo)(function() {
    return {
      setValueAtIndex: function setValueAtIndex(index2, val) {
        if (!isInteractive)
          return;
        var bounds = valueBounds[index2];
        val = parseFloat(roundValueToStep(val, bounds.min, oneStep));
        val = clampValue(val, bounds.min, bounds.max);
        var next2 = [].concat(value);
        next2[index2] = val;
        setValue(next2);
      },
      setActiveIndex,
      stepUp: function stepUp(index2, step2) {
        if (step2 === void 0) {
          step2 = oneStep;
        }
        var valueAtIndex = value[index2];
        var next2 = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;
        actions.setValueAtIndex(index2, next2);
      },
      stepDown: function stepDown(index2, step2) {
        if (step2 === void 0) {
          step2 = oneStep;
        }
        var valueAtIndex = value[index2];
        var next2 = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;
        actions.setValueAtIndex(index2, next2);
      },
      reset: function reset() {
        return setValue(initialValue.current);
      }
    };
  }, [oneStep, value, isReversed, setValue, isInteractive, valueBounds]);
  var onKeyDown = (0, import_react86.useCallback)(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      ArrowRight: function ArrowRight() {
        return actions.stepUp(activeIndex);
      },
      ArrowUp: function ArrowUp() {
        return actions.stepUp(activeIndex);
      },
      ArrowLeft: function ArrowLeft() {
        return actions.stepDown(activeIndex);
      },
      ArrowDown: function ArrowDown() {
        return actions.stepDown(activeIndex);
      },
      PageUp: function PageUp() {
        return actions.stepUp(activeIndex, tenSteps);
      },
      PageDown: function PageDown() {
        return actions.stepDown(activeIndex, tenSteps);
      },
      Home: function Home() {
        var value2 = valueBounds[activeIndex].min;
        actions.setValueAtIndex(activeIndex, value2);
      },
      End: function End() {
        var value2 = valueBounds[activeIndex].max;
        actions.setValueAtIndex(activeIndex, value2);
      }
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      event.stopPropagation();
      action(event);
      eventSourceRef.current = "keyboard";
    }
  }, [actions, activeIndex, tenSteps, valueBounds]);
  var _useMemo = (0, import_react86.useMemo)(function() {
    return getStyles2({
      isReversed,
      orientation,
      thumbRects,
      thumbPercents
    });
  }, [isReversed, orientation, thumbPercents, thumbRects]), getThumbStyle = _useMemo.getThumbStyle, rootStyle = _useMemo.rootStyle, trackStyle = _useMemo.trackStyle, innerTrackStyle = _useMemo.innerTrackStyle;
  var focusThumb = (0, import_react86.useCallback)(function(index2) {
    var idx = index2 != null ? index2 : activeIndex;
    if (idx !== -1 && focusThumbOnChange) {
      var _rootRef$current2;
      var id2 = ids.getThumb(idx);
      var thumb = (_rootRef$current2 = rootRef.current) == null ? void 0 : _rootRef$current2.ownerDocument.getElementById(id2);
      if (thumb) {
        setTimeout(function() {
          return focus(thumb);
        });
      }
    }
  }, [focusThumbOnChange, activeIndex, ids]);
  useUpdateEffect(function() {
    if (eventSourceRef.current === "keyboard") {
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
    }
  }, [value, onChangeEnd]);
  var _onPanSessionStart = function onPanSessionStart(event) {
    var pointValue = getValueFromPointer(event) || 0;
    var distances = value.map(function(val) {
      return Math.abs(val - pointValue);
    });
    var closest = Math.min.apply(Math, distances);
    var index2 = distances.indexOf(closest);
    var thumbsAtPosition = distances.filter(function(distance4) {
      return distance4 === closest;
    });
    var isThumbStacked = thumbsAtPosition.length > 1;
    if (isThumbStacked && pointValue > value[index2]) {
      index2 = index2 + thumbsAtPosition.length - 1;
    }
    setActiveIndex(index2);
    actions.setValueAtIndex(index2, pointValue);
    focusThumb(index2);
  };
  var _onPan = function onPan(event) {
    if (activeIndex == -1)
      return;
    var pointValue = getValueFromPointer(event) || 0;
    setActiveIndex(activeIndex);
    actions.setValueAtIndex(activeIndex, pointValue);
    focusThumb(activeIndex);
  };
  usePanGesture(rootRef, {
    onPanSessionStart: function onPanSessionStart(event) {
      if (!isInteractive)
        return;
      setDragging.on();
      _onPanSessionStart(event);
      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);
    },
    onPanSessionEnd: function onPanSessionEnd() {
      if (!isInteractive)
        return;
      setDragging.off();
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
    },
    onPan: function onPan(event) {
      if (!isInteractive)
        return;
      _onPan(event);
    }
  });
  var getRootProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, htmlProps, {
      id: ids.root,
      ref: mergeRefs(ref, rootRef),
      tabIndex: -1,
      "aria-disabled": ariaAttr(isDisabled2),
      "data-focused": dataAttr(isFocused),
      style: _extends43({}, props2.style, rootStyle)
    });
  }, [htmlProps, isDisabled2, isFocused, rootStyle, ids]);
  var getTrackProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref: mergeRefs(ref, trackRef),
      id: ids.track,
      "data-disabled": dataAttr(isDisabled2),
      style: _extends43({}, props2.style, trackStyle)
    });
  }, [isDisabled2, trackStyle, ids]);
  var getInnerTrackProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref,
      id: ids.innerTrack,
      style: _extends43({}, props2.style, innerTrackStyle)
    });
  }, [innerTrackStyle, ids]);
  var getThumbProps = (0, import_react86.useCallback)(function(props2, ref) {
    var _getAriaValueText;
    if (ref === void 0) {
      ref = null;
    }
    var index2 = props2.index, rest = _objectWithoutPropertiesLoose36(props2, _excluded219);
    var _value = value[index2];
    if (_value == null) {
      throw new TypeError("[range-slider > thumb] Cannot find value at index `" + index2 + "`. The `value` or `defaultValue` length is : " + value.length);
    }
    var bounds = valueBounds[index2];
    return _extends43({}, rest, {
      ref,
      role: "slider",
      tabIndex: isInteractive ? 0 : void 0,
      id: ids.getThumb(index2),
      "data-active": dataAttr(isDragging && activeIndex === index2),
      "aria-valuetext": (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(_value)) != null ? _getAriaValueText : ariaValueText == null ? void 0 : ariaValueText[index2],
      "aria-valuemin": bounds.min,
      "aria-valuemax": bounds.max,
      "aria-valuenow": _value,
      "aria-orientation": orientation,
      "aria-disabled": ariaAttr(isDisabled2),
      "aria-readonly": ariaAttr(isReadOnly),
      "aria-label": ariaLabel == null ? void 0 : ariaLabel[index2],
      "aria-labelledby": ariaLabel != null && ariaLabel[index2] ? void 0 : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index2],
      style: _extends43({}, props2.style, getThumbStyle(index2)),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onFocus: callAllHandlers(props2.onFocus, function() {
        setFocused.on();
        setActiveIndex(index2);
      }),
      onBlur: callAllHandlers(props2.onBlur, function() {
        setFocused.off();
        setActiveIndex(-1);
      })
    });
  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled2, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);
  var getOutputProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref,
      id: ids.output,
      htmlFor: value.map(function(v, i) {
        return ids.getThumb(i);
      }).join(" "),
      "aria-live": "off"
    });
  }, [ids, value]);
  var getMarkerProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var _props = props2, v = _props.value, rest = _objectWithoutPropertiesLoose36(_props, _excluded314);
    var isInRange = !(v < min2 || v > max2);
    var isHighlighted = v >= value[0] && v <= value[value.length - 1];
    var percent2 = valueToPercent(v, min2, max2);
    percent2 = isReversed ? 100 - percent2 : percent2;
    var markerStyle = _extends43({
      position: "absolute",
      pointerEvents: "none"
    }, orient$1({
      orientation,
      vertical: {
        bottom: percent2 + "%"
      },
      horizontal: {
        left: percent2 + "%"
      }
    }));
    return _extends43({}, rest, {
      ref,
      id: ids.getMarker(props2.value),
      role: "presentation",
      "aria-hidden": true,
      "data-disabled": dataAttr(isDisabled2),
      "data-invalid": dataAttr(!isInRange),
      "data-highlighted": dataAttr(isHighlighted),
      style: _extends43({}, props2.style, markerStyle)
    });
  }, [isDisabled2, isReversed, max2, min2, orientation, value, ids]);
  var getInputProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (ref === void 0) {
      ref = null;
    }
    var index2 = props2.index, rest = _objectWithoutPropertiesLoose36(props2, _excluded410);
    return _extends43({}, rest, {
      ref,
      id: ids.getInput(index2),
      type: "hidden",
      value: value[index2],
      name: Array.isArray(name) ? name[index2] : name + "-" + index2
    });
  }, [name, value, ids]);
  return {
    state: {
      value,
      isFocused,
      isDragging,
      getThumbPercent: function getThumbPercent(i) {
        return thumbPercents[i];
      },
      getThumbMinValue: function getThumbMinValue(i) {
        return valueBounds[i].min;
      },
      getThumbMaxValue: function getThumbMaxValue(i) {
        return valueBounds[i].max;
      }
    },
    actions,
    getRootProps,
    getTrackProps,
    getInnerTrackProps,
    getThumbProps,
    getMarkerProps,
    getInputProps,
    getOutputProps
  };
}
var getValueBounds = function getValueBounds2(arr, min2, max2, spacing3) {
  return arr.map(function(v, i) {
    var _min = i === 0 ? min2 : arr[i - 1] + spacing3;
    var _max = i === arr.length - 1 ? max2 : arr[i + 1] - spacing3;
    return {
      min: _min,
      max: _max
    };
  });
};
var _excluded$29 = ["getRootProps"];
var _createContext$14 = createContext3({
  name: "SliderContext",
  errorMessage: "useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />"
});
var RangeSliderProvider = _createContext$14[0];
var useRangeSliderContext = _createContext$14[1];
var RangeSlider = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Slider", props);
  var ownProps = omitThemingProps2(props);
  var _useTheme = useTheme3(), direction3 = _useTheme.direction;
  ownProps.direction = direction3;
  var _useRangeSlider = useRangeSlider(ownProps), getRootProps = _useRangeSlider.getRootProps, context = _objectWithoutPropertiesLoose36(_useRangeSlider, _excluded$29);
  var ctx = React75.useMemo(function() {
    return _extends43({}, context, {
      name: props.name
    });
  }, [context, props.name]);
  return React75.createElement(RangeSliderProvider, {
    value: ctx
  }, React75.createElement(StylesProvider2, {
    value: styles3
  }, React75.createElement(chakra2.div, _extends43({}, getRootProps({}, ref), {
    className: "chakra-slider",
    __css: styles3.container
  }), props.children)));
});
RangeSlider.defaultProps = {
  orientation: "horizontal"
};
if (__DEV__) {
  RangeSlider.displayName = "RangeSlider";
}
var RangeSliderThumb = forwardRef5(function(props, ref) {
  var _useRangeSliderContex = useRangeSliderContext(), getThumbProps = _useRangeSliderContex.getThumbProps, getInputProps = _useRangeSliderContex.getInputProps, name = _useRangeSliderContex.name;
  var styles3 = useStyles2();
  var thumbProps = getThumbProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, thumbProps, {
    className: cx("chakra-slider__thumb", props.className),
    __css: styles3.thumb
  }), thumbProps.children, name && React75.createElement("input", getInputProps({
    index: props.index
  })));
});
if (__DEV__) {
  RangeSliderThumb.displayName = "RangeSliderThumb";
}
var RangeSliderTrack = forwardRef5(function(props, ref) {
  var _useRangeSliderContex2 = useRangeSliderContext(), getTrackProps = _useRangeSliderContex2.getTrackProps;
  var styles3 = useStyles2();
  var trackProps = getTrackProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, trackProps, {
    className: cx("chakra-slider__track", props.className),
    __css: styles3.track,
    "data-testid": "chakra-range-slider-track"
  }));
});
if (__DEV__) {
  RangeSliderTrack.displayName = "RangeSliderTrack";
}
var RangeSliderFilledTrack = forwardRef5(function(props, ref) {
  var _useRangeSliderContex3 = useRangeSliderContext(), getInnerTrackProps = _useRangeSliderContex3.getInnerTrackProps;
  var styles3 = useStyles2();
  var trackProps = getInnerTrackProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, trackProps, {
    className: "chakra-slider__filled-track",
    __css: styles3.filledTrack
  }));
});
if (__DEV__) {
  RangeSliderFilledTrack.displayName = "RangeSliderFilledTrack";
}
var RangeSliderMark = forwardRef5(function(props, ref) {
  var _useRangeSliderContex4 = useRangeSliderContext(), getMarkerProps = _useRangeSliderContex4.getMarkerProps;
  var markProps = getMarkerProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, markProps, {
    className: cx("chakra-slider__marker", props.className)
  }));
});
if (__DEV__) {
  RangeSliderMark.displayName = "RangeSliderMark";
}
var _excluded$119 = ["min", "max", "onChange", "value", "defaultValue", "isReversed", "direction", "orientation", "id", "isDisabled", "isReadOnly", "onChangeStart", "onChangeEnd", "step", "getAriaValueText", "aria-valuetext", "aria-label", "aria-labelledby", "name", "focusThumbOnChange"];
function useSlider(props) {
  var _getAriaValueText;
  var _props$min = props.min, min2 = _props$min === void 0 ? 0 : _props$min, _props$max = props.max, max2 = _props$max === void 0 ? 100 : _props$max, onChange = props.onChange, valueProp = props.value, defaultValue = props.defaultValue, isReversedProp = props.isReversed, _props$direction = props.direction, direction3 = _props$direction === void 0 ? "ltr" : _props$direction, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, idProp = props.id, isDisabled2 = props.isDisabled, isReadOnly = props.isReadOnly, onChangeStartProp = props.onChangeStart, onChangeEndProp = props.onChangeEnd, _props$step = props.step, step = _props$step === void 0 ? 1 : _props$step, getAriaValueTextProp = props.getAriaValueText, ariaValueText = props["aria-valuetext"], ariaLabel = props["aria-label"], ariaLabelledBy = props["aria-labelledby"], name = props.name, _props$focusThumbOnCh = props.focusThumbOnChange, focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh, htmlProps = _objectWithoutPropertiesLoose36(props, _excluded$119);
  var onChangeStart = useCallbackRef(onChangeStartProp);
  var onChangeEnd = useCallbackRef(onChangeEndProp);
  var getAriaValueText = useCallbackRef(getAriaValueTextProp);
  var isReversed = getIsReversed({
    isReversed: isReversedProp,
    direction: direction3,
    orientation
  });
  var _useControllableState = useControllableState({
    value: valueProp,
    defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min2, max2),
    onChange
  }), computedValue = _useControllableState[0], setValue = _useControllableState[1];
  var _useBoolean = useBoolean(), isDragging = _useBoolean[0], setDragging = _useBoolean[1];
  var _useBoolean2 = useBoolean(), isFocused = _useBoolean2[0], setFocused = _useBoolean2[1];
  var eventSourceRef = (0, import_react86.useRef)(null);
  var isInteractive = !(isDisabled2 || isReadOnly);
  var value = clampValue(computedValue, min2, max2);
  var valueRef = useLatestRef(value);
  var prevRef = (0, import_react86.useRef)(valueRef.current);
  var reversedValue = max2 - value + min2;
  var trackValue = isReversed ? reversedValue : value;
  var thumbPercent = valueToPercent(trackValue, min2, max2);
  var isVertical = orientation === "vertical";
  var trackRef = (0, import_react86.useRef)(null);
  var thumbRef = (0, import_react86.useRef)(null);
  var rootRef = (0, import_react86.useRef)(null);
  var _useIds = useIds(idProp, "slider-thumb", "slider-track"), thumbId = _useIds[0], trackId = _useIds[1];
  var getValueFromPointer = (0, import_react86.useCallback)(function(event) {
    var _event$touches$, _event$touches;
    if (!trackRef.current)
      return;
    eventSourceRef.current = "pointer";
    var trackRect = getBox(trackRef.current).borderBox;
    var _ref2 = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event, clientX = _ref2.clientX, clientY = _ref2.clientY;
    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;
    var length2 = isVertical ? trackRect.height : trackRect.width;
    var percent2 = diff / length2;
    if (isReversed) {
      percent2 = 1 - percent2;
    }
    var nextValue = percentToValue(percent2, min2, max2);
    if (step) {
      nextValue = parseFloat(roundValueToStep(nextValue, min2, step));
    }
    nextValue = clampValue(nextValue, min2, max2);
    return nextValue;
  }, [isVertical, isReversed, max2, min2, step]);
  var tenSteps = (max2 - min2) / 10;
  var oneStep = step || (max2 - min2) / 100;
  var constrain = (0, import_react86.useCallback)(function(value2) {
    if (!isInteractive)
      return;
    value2 = parseFloat(roundValueToStep(value2, min2, oneStep));
    value2 = clampValue(value2, min2, max2);
    setValue(value2);
  }, [oneStep, max2, min2, setValue, isInteractive]);
  var actions = (0, import_react86.useMemo)(function() {
    return {
      stepUp: function stepUp(step2) {
        if (step2 === void 0) {
          step2 = oneStep;
        }
        var next2 = isReversed ? value - step2 : value + step2;
        constrain(next2);
      },
      stepDown: function stepDown(step2) {
        if (step2 === void 0) {
          step2 = oneStep;
        }
        var next2 = isReversed ? value + step2 : value - step2;
        constrain(next2);
      },
      reset: function reset() {
        return constrain(defaultValue || 0);
      },
      stepTo: function stepTo(value2) {
        return constrain(value2);
      }
    };
  }, [constrain, isReversed, value, oneStep, defaultValue]);
  var onKeyDown = (0, import_react86.useCallback)(function(event) {
    var eventKey = normalizeEventKey(event);
    var keyMap = {
      ArrowRight: function ArrowRight() {
        return actions.stepUp();
      },
      ArrowUp: function ArrowUp() {
        return actions.stepUp();
      },
      ArrowLeft: function ArrowLeft() {
        return actions.stepDown();
      },
      ArrowDown: function ArrowDown() {
        return actions.stepDown();
      },
      PageUp: function PageUp() {
        return actions.stepUp(tenSteps);
      },
      PageDown: function PageDown() {
        return actions.stepDown(tenSteps);
      },
      Home: function Home() {
        return constrain(min2);
      },
      End: function End() {
        return constrain(max2);
      }
    };
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      event.stopPropagation();
      action(event);
      eventSourceRef.current = "keyboard";
    }
  }, [actions, constrain, max2, min2, tenSteps]);
  var valueText = (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _getAriaValueText : ariaValueText;
  var thumbBoxModel = useDimensions(thumbRef);
  var _useMemo = (0, import_react86.useMemo)(function() {
    var _thumbBoxModel$border;
    var thumbRect = (_thumbBoxModel$border = thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox) != null ? _thumbBoxModel$border : {
      width: 0,
      height: 0
    };
    return getStyles2({
      isReversed,
      orientation,
      thumbRects: [thumbRect],
      thumbPercents: [thumbPercent]
    });
  }, [isReversed, orientation, thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox, thumbPercent]), getThumbStyle = _useMemo.getThumbStyle, rootStyle = _useMemo.rootStyle, trackStyle = _useMemo.trackStyle, innerTrackStyle = _useMemo.innerTrackStyle;
  var focusThumb = (0, import_react86.useCallback)(function() {
    if (thumbRef.current && focusThumbOnChange) {
      setTimeout(function() {
        return focus(thumbRef.current);
      });
    }
  }, [focusThumbOnChange]);
  useUpdateEffect(function() {
    focusThumb();
    if (eventSourceRef.current === "keyboard") {
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
    }
  }, [value, onChangeEnd]);
  var setValueFromPointer = function setValueFromPointer2(event) {
    var nextValue = getValueFromPointer(event);
    if (nextValue != null && nextValue !== valueRef.current) {
      setValue(nextValue);
    }
  };
  usePanGesture(rootRef, {
    onPanSessionStart: function onPanSessionStart(event) {
      if (!isInteractive)
        return;
      setDragging.on();
      focusThumb();
      setValueFromPointer(event);
      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);
    },
    onPanSessionEnd: function onPanSessionEnd() {
      if (!isInteractive)
        return;
      setDragging.off();
      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);
      prevRef.current = valueRef.current;
    },
    onPan: function onPan(event) {
      if (!isInteractive)
        return;
      setValueFromPointer(event);
    }
  });
  var getRootProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, htmlProps, {
      ref: mergeRefs(ref, rootRef),
      tabIndex: -1,
      "aria-disabled": ariaAttr(isDisabled2),
      "data-focused": dataAttr(isFocused),
      style: _extends43({}, props2.style, rootStyle)
    });
  }, [htmlProps, isDisabled2, isFocused, rootStyle]);
  var getTrackProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref: mergeRefs(ref, trackRef),
      id: trackId,
      "data-disabled": dataAttr(isDisabled2),
      style: _extends43({}, props2.style, trackStyle)
    });
  }, [isDisabled2, trackId, trackStyle]);
  var getInnerTrackProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref,
      style: _extends43({}, props2.style, innerTrackStyle)
    });
  }, [innerTrackStyle]);
  var getThumbProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref: mergeRefs(ref, thumbRef),
      role: "slider",
      tabIndex: isInteractive ? 0 : void 0,
      id: thumbId,
      "data-active": dataAttr(isDragging),
      "aria-valuetext": valueText,
      "aria-valuemin": min2,
      "aria-valuemax": max2,
      "aria-valuenow": value,
      "aria-orientation": orientation,
      "aria-disabled": ariaAttr(isDisabled2),
      "aria-readonly": ariaAttr(isReadOnly),
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabel ? void 0 : ariaLabelledBy,
      style: _extends43({}, props2.style, getThumbStyle(0)),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onFocus: callAllHandlers(props2.onFocus, setFocused.on),
      onBlur: callAllHandlers(props2.onBlur, setFocused.off)
    });
  }, [isInteractive, thumbId, isDragging, valueText, min2, max2, value, orientation, isDisabled2, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused.on, setFocused.off]);
  var getMarkerProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var isInRange = !(props2.value < min2 || props2.value > max2);
    var isHighlighted = value >= props2.value;
    var markerPercent = valueToPercent(props2.value, min2, max2);
    var markerStyle = _extends43({
      position: "absolute",
      pointerEvents: "none"
    }, orient2({
      orientation,
      vertical: {
        bottom: isReversed ? 100 - markerPercent + "%" : markerPercent + "%"
      },
      horizontal: {
        left: isReversed ? 100 - markerPercent + "%" : markerPercent + "%"
      }
    }));
    return _extends43({}, props2, {
      ref,
      role: "presentation",
      "aria-hidden": true,
      "data-disabled": dataAttr(isDisabled2),
      "data-invalid": dataAttr(!isInRange),
      "data-highlighted": dataAttr(isHighlighted),
      style: _extends43({}, props2.style, markerStyle)
    });
  }, [isDisabled2, isReversed, max2, min2, orientation, value]);
  var getInputProps = (0, import_react86.useCallback)(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends43({}, props2, {
      ref,
      type: "hidden",
      value,
      name
    });
  }, [name, value]);
  return {
    state: {
      value,
      isFocused,
      isDragging
    },
    actions,
    getRootProps,
    getTrackProps,
    getInnerTrackProps,
    getThumbProps,
    getMarkerProps,
    getInputProps
  };
}
function orient2(options) {
  var orientation = options.orientation, vertical = options.vertical, horizontal = options.horizontal;
  return orientation === "vertical" ? vertical : horizontal;
}
function getDefaultValue(min2, max2) {
  return max2 < min2 ? min2 : min2 + (max2 - min2) / 2;
}
var _excluded55 = ["getInputProps", "getRootProps"];
var _createContext18 = createContext3({
  name: "SliderContext",
  errorMessage: "useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />"
});
var SliderProvider = _createContext18[0];
var useSliderContext = _createContext18[1];
var Slider2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Slider", props);
  var ownProps = omitThemingProps2(props);
  var _useTheme = useTheme3(), direction3 = _useTheme.direction;
  ownProps.direction = direction3;
  var _useSlider = useSlider(ownProps), getInputProps = _useSlider.getInputProps, getRootProps = _useSlider.getRootProps, context = _objectWithoutPropertiesLoose36(_useSlider, _excluded55);
  var rootProps = getRootProps();
  var inputProps = getInputProps({}, ref);
  return React75.createElement(SliderProvider, {
    value: context
  }, React75.createElement(StylesProvider2, {
    value: styles3
  }, React75.createElement(chakra2.div, _extends43({}, rootProps, {
    className: cx("chakra-slider", props.className),
    __css: styles3.container
  }), props.children, React75.createElement("input", inputProps))));
});
Slider2.defaultProps = {
  orientation: "horizontal"
};
if (__DEV__) {
  Slider2.displayName = "Slider";
}
var SliderThumb = forwardRef5(function(props, ref) {
  var _useSliderContext = useSliderContext(), getThumbProps = _useSliderContext.getThumbProps;
  var styles3 = useStyles2();
  var thumbProps = getThumbProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, thumbProps, {
    className: cx("chakra-slider__thumb", props.className),
    __css: styles3.thumb
  }));
});
if (__DEV__) {
  SliderThumb.displayName = "SliderThumb";
}
var SliderTrack = forwardRef5(function(props, ref) {
  var _useSliderContext2 = useSliderContext(), getTrackProps = _useSliderContext2.getTrackProps;
  var styles3 = useStyles2();
  var trackProps = getTrackProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, trackProps, {
    className: cx("chakra-slider__track", props.className),
    __css: styles3.track
  }));
});
if (__DEV__) {
  SliderTrack.displayName = "SliderTrack";
}
var SliderFilledTrack = forwardRef5(function(props, ref) {
  var _useSliderContext3 = useSliderContext(), getInnerTrackProps = _useSliderContext3.getInnerTrackProps;
  var styles3 = useStyles2();
  var trackProps = getInnerTrackProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, trackProps, {
    className: cx("chakra-slider__filled-track", props.className),
    __css: styles3.filledTrack
  }));
});
if (__DEV__) {
  SliderFilledTrack.displayName = "SliderFilledTrack";
}
var SliderMark = forwardRef5(function(props, ref) {
  var _useSliderContext4 = useSliderContext(), getMarkerProps = _useSliderContext4.getMarkerProps;
  var markProps = getMarkerProps(props, ref);
  return React75.createElement(chakra2.div, _extends43({}, markProps, {
    className: cx("chakra-slider__marker", props.className)
  }));
});
if (__DEV__) {
  SliderMark.displayName = "SliderMark";
}

// node_modules/.pnpm/@chakra-ui+stat@1.2.7_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/stat/dist/chakra-ui-stat.esm.js
var React76 = __toESM(require_react());
function _objectWithoutPropertiesLoose37(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends44() {
  _extends44 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends44.apply(this, arguments);
}
var _excluded56 = ["type", "aria-label"];
var _excluded220 = ["className", "children"];
var StatLabel = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React76.createElement(chakra2.dt, _extends44({
    ref
  }, props, {
    className: cx("chakra-stat__label", props.className),
    __css: styles3.label
  }));
});
if (__DEV__) {
  StatLabel.displayName = "StatLabel";
}
var StatHelpText = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React76.createElement(chakra2.dd, _extends44({
    ref
  }, props, {
    className: cx("chakra-stat__help-text", props.className),
    __css: styles3.helpText
  }));
});
if (__DEV__) {
  StatHelpText.displayName = "StatHelpText";
}
var StatNumber = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React76.createElement(chakra2.dd, _extends44({
    ref
  }, props, {
    className: cx("chakra-stat__number", props.className),
    __css: _extends44({}, styles3.number, {
      fontFeatureSettings: "pnum",
      fontVariantNumeric: "proportional-nums"
    })
  }));
});
if (__DEV__) {
  StatNumber.displayName = "StatNumber";
}
var StatDownArrow = function StatDownArrow2(props) {
  return React76.createElement(Icon, _extends44({
    color: "red.400"
  }, props), React76.createElement("path", {
    fill: "currentColor",
    d: "M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z"
  }));
};
if (__DEV__) {
  StatDownArrow.displayName = "StatDownArrow";
}
var StatUpArrow = function StatUpArrow2(props) {
  return React76.createElement(Icon, _extends44({
    color: "green.400"
  }, props), React76.createElement("path", {
    fill: "currentColor",
    d: "M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z"
  }));
};
if (__DEV__) {
  StatUpArrow.displayName = "StatUpArrow";
}
var StatArrow = function StatArrow2(props) {
  var type = props.type, ariaLabel = props["aria-label"], rest = _objectWithoutPropertiesLoose37(props, _excluded56);
  var styles3 = useStyles2();
  var IconComponent = type === "increase" ? StatUpArrow : StatDownArrow;
  var defaultAriaLabel = type === "increase" ? "increased by" : "decreased by";
  var label = ariaLabel || defaultAriaLabel;
  return React76.createElement(React76.Fragment, null, React76.createElement(VisuallyHidden, null, label), React76.createElement(IconComponent, _extends44({
    "aria-hidden": true
  }, rest, {
    __css: styles3.icon
  })));
};
if (__DEV__) {
  StatArrow.displayName = "StatArrow";
}
var Stat2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Stat", props);
  var statStyles = _extends44({
    position: "relative",
    flex: "1 1 0%"
  }, styles3.container);
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, children = _omitThemingProps.children, rest = _objectWithoutPropertiesLoose37(_omitThemingProps, _excluded220);
  return React76.createElement(StylesProvider2, {
    value: styles3
  }, React76.createElement(chakra2.div, _extends44({
    ref
  }, rest, {
    className: cx("chakra-stat", className),
    __css: statStyles
  }), React76.createElement("dl", null, children)));
});
if (__DEV__) {
  Stat2.displayName = "Stat";
}
var StatGroup = forwardRef5(function(props, ref) {
  return React76.createElement(chakra2.div, _extends44({}, props, {
    ref,
    role: "group",
    className: cx("chakra-stat__group", props.className),
    __css: {
      display: "flex",
      flexWrap: "wrap",
      justifyContent: "space-around",
      alignItems: "flex-start"
    }
  }));
});
if (__DEV__) {
  StatGroup.displayName = "StatGroup";
}

// node_modules/.pnpm/@chakra-ui+switch@1.3.10_5cdmrckxkyiume467upyiulfna/node_modules/@chakra-ui/switch/dist/chakra-ui-switch.esm.js
var React77 = __toESM(require_react());
function _extends45() {
  _extends45 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends45.apply(this, arguments);
}
function _objectWithoutPropertiesLoose38(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded57 = ["spacing", "children"];
var Switch2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Switch", props);
  var _omitThemingProps = omitThemingProps2(props), _omitThemingProps$spa = _omitThemingProps.spacing, spacing3 = _omitThemingProps$spa === void 0 ? "0.5rem" : _omitThemingProps$spa, children = _omitThemingProps.children, ownProps = _objectWithoutPropertiesLoose38(_omitThemingProps, _excluded57);
  var _useCheckbox = useCheckbox(ownProps), state3 = _useCheckbox.state, getInputProps = _useCheckbox.getInputProps, getCheckboxProps = _useCheckbox.getCheckboxProps, getRootProps = _useCheckbox.getRootProps, getLabelProps = _useCheckbox.getLabelProps;
  var containerStyles = React77.useMemo(function() {
    return _extends45({
      display: "inline-block",
      position: "relative",
      verticalAlign: "middle",
      lineHeight: 0
    }, styles3.container);
  }, [styles3.container]);
  var trackStyles = React77.useMemo(function() {
    return _extends45({
      display: "inline-flex",
      flexShrink: 0,
      justifyContent: "flex-start",
      boxSizing: "content-box",
      cursor: "pointer"
    }, styles3.track);
  }, [styles3.track]);
  var labelStyles = React77.useMemo(function() {
    return _extends45({
      userSelect: "none",
      marginStart: spacing3
    }, styles3.label);
  }, [spacing3, styles3.label]);
  return React77.createElement(chakra2.label, _extends45({}, getRootProps(), {
    className: cx("chakra-switch", props.className),
    __css: containerStyles
  }), React77.createElement("input", _extends45({
    className: "chakra-switch__input"
  }, getInputProps({}, ref))), React77.createElement(chakra2.span, _extends45({}, getCheckboxProps(), {
    className: "chakra-switch__track",
    __css: trackStyles
  }), React77.createElement(chakra2.span, {
    __css: styles3.thumb,
    className: "chakra-switch__thumb",
    "data-checked": dataAttr(state3.isChecked),
    "data-hover": dataAttr(state3.isHovered)
  })), children && React77.createElement(chakra2.span, _extends45({
    className: "chakra-switch__label"
  }, getLabelProps(), {
    __css: labelStyles
  }), children));
});
if (__DEV__) {
  Switch2.displayName = "Switch";
}

// node_modules/.pnpm/@chakra-ui+tabs@1.6.10_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js
var React78 = __toESM(require_react());
function _extends46() {
  _extends46 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends46.apply(this, arguments);
}
function _objectWithoutPropertiesLoose39(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$120 = ["defaultIndex", "onChange", "index", "isManual", "isLazy", "lazyBehavior", "orientation", "direction"];
var _excluded2$17 = ["isDisabled", "isFocusable"];
var _excluded315 = ["isSelected", "id", "children"];
var _createDescendantCont4 = createDescendantContext();
var TabsDescendantsProvider = _createDescendantCont4[0];
var useTabsDescendantsContext = _createDescendantCont4[1];
var useTabsDescendants = _createDescendantCont4[2];
var useTabsDescendant = _createDescendantCont4[3];
function useTabs(props) {
  var defaultIndex = props.defaultIndex, onChange = props.onChange, index2 = props.index, isManual = props.isManual, isLazy = props.isLazy, _props$lazyBehavior = props.lazyBehavior, lazyBehavior = _props$lazyBehavior === void 0 ? "unmount" : _props$lazyBehavior, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? "horizontal" : _props$orientation, _props$direction = props.direction, direction3 = _props$direction === void 0 ? "ltr" : _props$direction, htmlProps = _objectWithoutPropertiesLoose39(props, _excluded$120);
  var _React$useState = React78.useState(defaultIndex != null ? defaultIndex : 0), focusedIndex = _React$useState[0], setFocusedIndex = _React$useState[1];
  var _useControllableState = useControllableState({
    defaultValue: defaultIndex != null ? defaultIndex : 0,
    value: index2,
    onChange
  }), selectedIndex = _useControllableState[0], setSelectedIndex = _useControllableState[1];
  React78.useEffect(function() {
    if (index2 != null) {
      setFocusedIndex(index2);
    }
  }, [index2]);
  var descendants = useTabsDescendants();
  var id2 = useId(props.id, "tabs");
  return {
    id: id2,
    selectedIndex,
    focusedIndex,
    setSelectedIndex,
    setFocusedIndex,
    isManual,
    isLazy,
    lazyBehavior,
    orientation,
    descendants,
    direction: direction3,
    htmlProps
  };
}
var _createContext19 = createContext3({
  name: "TabsContext",
  errorMessage: "useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />"
});
var TabsProvider = _createContext19[0];
var useTabsContext = _createContext19[1];
function useTabList(props) {
  var _useTabsContext = useTabsContext(), focusedIndex = _useTabsContext.focusedIndex, orientation = _useTabsContext.orientation, direction3 = _useTabsContext.direction;
  var descendants = useTabsDescendantsContext();
  var onKeyDown = React78.useCallback(function(event) {
    var _keyMap;
    var nextTab = function nextTab2() {
      var next2 = descendants.nextEnabled(focusedIndex);
      if (next2)
        focus(next2.node);
    };
    var prevTab = function prevTab2() {
      var prev2 = descendants.prevEnabled(focusedIndex);
      if (prev2)
        focus(prev2.node);
    };
    var firstTab = function firstTab2() {
      var first = descendants.firstEnabled();
      if (first)
        focus(first.node);
    };
    var lastTab = function lastTab2() {
      var last3 = descendants.lastEnabled();
      if (last3)
        focus(last3.node);
    };
    var isHorizontal = orientation === "horizontal";
    var isVertical = orientation === "vertical";
    var eventKey = normalizeEventKey(event);
    var ArrowStart = direction3 === "ltr" ? "ArrowLeft" : "ArrowRight";
    var ArrowEnd = direction3 === "ltr" ? "ArrowRight" : "ArrowLeft";
    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function() {
      return isHorizontal && prevTab();
    }, _keyMap[ArrowEnd] = function() {
      return isHorizontal && nextTab();
    }, _keyMap.ArrowDown = function ArrowDown() {
      return isVertical && nextTab();
    }, _keyMap.ArrowUp = function ArrowUp() {
      return isVertical && prevTab();
    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);
    var action = keyMap[eventKey];
    if (action) {
      event.preventDefault();
      action(event);
    }
  }, [descendants, focusedIndex, orientation, direction3]);
  return _extends46({}, props, {
    role: "tablist",
    "aria-orientation": orientation,
    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)
  });
}
function useTab(props) {
  var isDisabled2 = props.isDisabled, isFocusable2 = props.isFocusable, htmlProps = _objectWithoutPropertiesLoose39(props, _excluded2$17);
  var _useTabsContext2 = useTabsContext(), setSelectedIndex = _useTabsContext2.setSelectedIndex, isManual = _useTabsContext2.isManual, id2 = _useTabsContext2.id, setFocusedIndex = _useTabsContext2.setFocusedIndex, selectedIndex = _useTabsContext2.selectedIndex;
  var _useTabsDescendant = useTabsDescendant({
    disabled: isDisabled2 && !isFocusable2
  }), index2 = _useTabsDescendant.index, register = _useTabsDescendant.register;
  var isSelected = index2 === selectedIndex;
  var onClick = function onClick2() {
    setSelectedIndex(index2);
  };
  var onFocus3 = function onFocus4() {
    setFocusedIndex(index2);
    var isDisabledButFocusable = isDisabled2 && isFocusable2;
    var shouldSelect = !isManual && !isDisabledButFocusable;
    if (shouldSelect) {
      setSelectedIndex(index2);
    }
  };
  var clickableProps = useClickable(_extends46({}, htmlProps, {
    ref: mergeRefs(register, props.ref),
    isDisabled: isDisabled2,
    isFocusable: isFocusable2,
    onClick: callAllHandlers(props.onClick, onClick)
  }));
  var type = "button";
  return _extends46({}, clickableProps, {
    id: makeTabId(id2, index2),
    role: "tab",
    tabIndex: isSelected ? 0 : -1,
    type,
    "aria-selected": isSelected,
    "aria-controls": makeTabPanelId(id2, index2),
    onFocus: isDisabled2 ? void 0 : callAllHandlers(props.onFocus, onFocus3)
  });
}
function useTabPanels(props) {
  var context = useTabsContext();
  var id2 = context.id, selectedIndex = context.selectedIndex;
  var validChildren = getValidChildren(props.children);
  var children = validChildren.map(function(child, index2) {
    return React78.cloneElement(child, {
      isSelected: index2 === selectedIndex,
      id: makeTabPanelId(id2, index2),
      "aria-labelledby": makeTabId(id2, index2)
    });
  });
  return _extends46({}, props, {
    children
  });
}
function useTabPanel(props) {
  var isSelected = props.isSelected, id2 = props.id, children = props.children, htmlProps = _objectWithoutPropertiesLoose39(props, _excluded315);
  var _useTabsContext3 = useTabsContext(), isLazy = _useTabsContext3.isLazy, lazyBehavior = _useTabsContext3.lazyBehavior;
  var hasBeenSelected = React78.useRef(false);
  if (isSelected) {
    hasBeenSelected.current = true;
  }
  var shouldRenderChildren = determineLazyBehavior({
    hasBeenSelected: hasBeenSelected.current,
    isSelected,
    isLazy,
    lazyBehavior
  });
  return _extends46({
    tabIndex: 0
  }, htmlProps, {
    children: shouldRenderChildren ? children : null,
    role: "tabpanel",
    hidden: !isSelected,
    id: id2
  });
}
function useTabIndicator() {
  var context = useTabsContext();
  var descendants = useTabsDescendantsContext();
  var selectedIndex = context.selectedIndex, orientation = context.orientation;
  var isHorizontal = orientation === "horizontal";
  var isVertical = orientation === "vertical";
  var _React$useState2 = React78.useState(function() {
    if (isHorizontal)
      return {
        left: 0,
        width: 0
      };
    if (isVertical)
      return {
        top: 0,
        height: 0
      };
    return void 0;
  }), rect = _React$useState2[0], setRect = _React$useState2[1];
  var _React$useState3 = React78.useState(false), hasMeasured = _React$useState3[0], setHasMeasured = _React$useState3[1];
  useSafeLayoutEffect(function() {
    if (isUndefined(selectedIndex))
      return void 0;
    var tab = descendants.item(selectedIndex);
    if (isUndefined(tab))
      return void 0;
    if (isHorizontal) {
      setRect({
        left: tab.node.offsetLeft,
        width: tab.node.offsetWidth
      });
    }
    if (isVertical) {
      setRect({
        top: tab.node.offsetTop,
        height: tab.node.offsetHeight
      });
    }
    var id2 = requestAnimationFrame(function() {
      setHasMeasured(true);
    });
    return function() {
      if (id2) {
        cancelAnimationFrame(id2);
      }
    };
  }, [selectedIndex, isHorizontal, isVertical, descendants]);
  return _extends46({
    position: "absolute",
    transitionProperty: "left, right, top, bottom, height, width",
    transitionDuration: hasMeasured ? "200ms" : "0ms",
    transitionTimingFunction: "cubic-bezier(0, 0, 0.2, 1)"
  }, rect);
}
function makeTabId(id2, index2) {
  return id2 + "--tab-" + index2;
}
function makeTabPanelId(id2, index2) {
  return id2 + "--tabpanel-" + index2;
}
var _excluded58 = ["children", "className"];
var _excluded221 = ["htmlProps", "descendants"];
var Tabs2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Tabs", props);
  var _omitThemingProps = omitThemingProps2(props), children = _omitThemingProps.children, className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose39(_omitThemingProps, _excluded58);
  var _useTabs = useTabs(rest), htmlProps = _useTabs.htmlProps, descendants = _useTabs.descendants, ctx = _objectWithoutPropertiesLoose39(_useTabs, _excluded221);
  var context = React78.useMemo(function() {
    return ctx;
  }, [ctx]);
  var rootProps = omit(htmlProps, ["isFitted"]);
  return React78.createElement(TabsDescendantsProvider, {
    value: descendants
  }, React78.createElement(TabsProvider, {
    value: context
  }, React78.createElement(StylesProvider2, {
    value: styles3
  }, React78.createElement(chakra2.div, _extends46({
    className: cx("chakra-tabs", className),
    ref
  }, rootProps, {
    __css: styles3.root
  }), children))));
});
if (__DEV__) {
  Tabs2.displayName = "Tabs";
}
var Tab = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  var tabProps = useTab(_extends46({}, props, {
    ref
  }));
  var tabStyles = _extends46({
    outline: "0",
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }, styles3.tab);
  return React78.createElement(chakra2.button, _extends46({}, tabProps, {
    className: cx("chakra-tabs__tab", props.className),
    __css: tabStyles
  }));
});
if (__DEV__) {
  Tab.displayName = "Tab";
}
var TabList = forwardRef5(function(props, ref) {
  var tablistProps = useTabList(_extends46({}, props, {
    ref
  }));
  var styles3 = useStyles2();
  var tablistStyles = _extends46({
    display: "flex"
  }, styles3.tablist);
  return React78.createElement(chakra2.div, _extends46({}, tablistProps, {
    className: cx("chakra-tabs__tablist", props.className),
    __css: tablistStyles
  }));
});
if (__DEV__) {
  TabList.displayName = "TabList";
}
var TabPanel = forwardRef5(function(props, ref) {
  var panelProps = useTabPanel(_extends46({}, props, {
    ref
  }));
  var styles3 = useStyles2();
  return React78.createElement(chakra2.div, _extends46({
    outline: "0"
  }, panelProps, {
    className: cx("chakra-tabs__tab-panel", props.className),
    __css: styles3.tabpanel
  }));
});
if (__DEV__) {
  TabPanel.displayName = "TabPanel";
}
var TabPanels = forwardRef5(function(props, ref) {
  var panelsProps = useTabPanels(props);
  var styles3 = useStyles2();
  return React78.createElement(chakra2.div, _extends46({}, panelsProps, {
    width: "100%",
    ref,
    className: cx("chakra-tabs__tab-panels", props.className),
    __css: styles3.tabpanels
  }));
});
if (__DEV__) {
  TabPanels.displayName = "TabPanels";
}
var TabIndicator = forwardRef5(function(props, ref) {
  var indicatorStyle = useTabIndicator();
  var style = _extends46({}, props.style, indicatorStyle);
  var styles3 = useStyles2();
  return React78.createElement(chakra2.div, _extends46({
    ref
  }, props, {
    className: cx("chakra-tabs__tab-indicator", props.className),
    style,
    __css: styles3.indicator
  }));
});
if (__DEV__) {
  TabIndicator.displayName = "TabIndicator";
}

// node_modules/.pnpm/@chakra-ui+tag@1.2.7_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/tag/dist/chakra-ui-tag.esm.js
var React79 = __toESM(require_react());
function _objectWithoutPropertiesLoose40(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends47() {
  _extends47 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends47.apply(this, arguments);
}
var _excluded59 = ["isDisabled", "children"];
var Tag2 = forwardRef5(function(props, ref) {
  var styles3 = useMultiStyleConfig("Tag", props);
  var ownProps = omitThemingProps2(props);
  var containerStyles = _extends47({
    display: "inline-flex",
    verticalAlign: "top",
    alignItems: "center",
    maxWidth: "100%"
  }, styles3.container);
  return React79.createElement(StylesProvider2, {
    value: styles3
  }, React79.createElement(chakra2.span, _extends47({
    ref
  }, ownProps, {
    __css: containerStyles
  })));
});
if (__DEV__) {
  Tag2.displayName = "Tag";
}
var TagLabel = forwardRef5(function(props, ref) {
  var styles3 = useStyles2();
  return React79.createElement(chakra2.span, _extends47({
    ref,
    isTruncated: true
  }, props, {
    __css: styles3.label
  }));
});
if (__DEV__) {
  TagLabel.displayName = "TagLabel";
}
var TagLeftIcon = forwardRef5(function(props, ref) {
  return React79.createElement(Icon, _extends47({
    ref,
    verticalAlign: "top",
    marginEnd: "0.5rem"
  }, props));
});
if (__DEV__) {
  TagLeftIcon.displayName = "TagLeftIcon";
}
var TagRightIcon = forwardRef5(function(props, ref) {
  return React79.createElement(Icon, _extends47({
    ref,
    verticalAlign: "top",
    marginStart: "0.5rem"
  }, props));
});
if (__DEV__) {
  TagRightIcon.displayName = "TagRightIcon";
}
var TagCloseIcon = function TagCloseIcon2(props) {
  return React79.createElement(Icon, _extends47({
    verticalAlign: "inherit",
    viewBox: "0 0 512 512"
  }, props), React79.createElement("path", {
    fill: "currentColor",
    d: "M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"
  }));
};
if (__DEV__) {
  TagCloseIcon.displayName = "TagCloseIcon";
}
var TagCloseButton = function TagCloseButton2(props) {
  var isDisabled2 = props.isDisabled, children = props.children, rest = _objectWithoutPropertiesLoose40(props, _excluded59);
  var styles3 = useStyles2();
  var btnStyles = _extends47({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    outline: "0"
  }, styles3.closeButton);
  return React79.createElement(chakra2.button, _extends47({
    "aria-label": "close"
  }, rest, {
    type: "button",
    disabled: isDisabled2,
    __css: btnStyles
  }), children || React79.createElement(TagCloseIcon, null));
};
if (__DEV__) {
  TagCloseButton.displayName = "TagCloseButton";
}

// node_modules/.pnpm/@chakra-ui+textarea@1.2.11_vosjsru4xlrepq3trcotndrwda/node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js
var React80 = __toESM(require_react());
function _extends48() {
  _extends48 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends48.apply(this, arguments);
}
function _objectWithoutPropertiesLoose41(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded60 = ["className", "rows"];
var Textarea2 = forwardRef5(function(props, ref) {
  var styles3 = useStyleConfig2("Textarea", props);
  var _omitThemingProps = omitThemingProps2(props), className = _omitThemingProps.className, rows = _omitThemingProps.rows, rest = _objectWithoutPropertiesLoose41(_omitThemingProps, _excluded60);
  var textareaProps = useFormControl(rest);
  var omitted = ["h", "minH", "height", "minHeight"];
  var textareaStyles = rows ? omit(styles3, omitted) : styles3;
  return React80.createElement(chakra2.textarea, _extends48({
    ref,
    rows
  }, textareaProps, {
    className: cx("chakra-textarea", className),
    __css: textareaStyles
  }));
});
if (__DEV__) {
  Textarea2.displayName = "Textarea";
}

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/spacing/dist/chakra-ui-theme-foundations-spacing.esm.js
var spacing2 = {
  px: "1px",
  0.5: "0.125rem",
  1: "0.25rem",
  1.5: "0.375rem",
  2: "0.5rem",
  2.5: "0.625rem",
  3: "0.75rem",
  3.5: "0.875rem",
  4: "1rem",
  5: "1.25rem",
  6: "1.5rem",
  7: "1.75rem",
  8: "2rem",
  9: "2.25rem",
  10: "2.5rem",
  12: "3rem",
  14: "3.5rem",
  16: "4rem",
  20: "5rem",
  24: "6rem",
  28: "7rem",
  32: "8rem",
  36: "9rem",
  40: "10rem",
  44: "11rem",
  48: "12rem",
  52: "13rem",
  56: "14rem",
  60: "15rem",
  64: "16rem",
  72: "18rem",
  80: "20rem",
  96: "24rem"
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/dist/sizes-6d76cdc8.esm.js
function _extends49() {
  _extends49 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends49.apply(this, arguments);
}
var largeSizes2 = {
  max: "max-content",
  min: "min-content",
  full: "100%",
  "3xs": "14rem",
  "2xs": "16rem",
  xs: "20rem",
  sm: "24rem",
  md: "28rem",
  lg: "32rem",
  xl: "36rem",
  "2xl": "42rem",
  "3xl": "48rem",
  "4xl": "56rem",
  "5xl": "64rem",
  "6xl": "72rem",
  "7xl": "80rem",
  "8xl": "90rem"
};
var container2 = {
  sm: "640px",
  md: "768px",
  lg: "1024px",
  xl: "1280px"
};
var sizes3 = _extends49({}, spacing2, largeSizes2, {
  container: container2
});

// node_modules/.pnpm/@chakra-ui+theme-tools@1.3.6_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme-tools/dist/chakra-ui-theme-tools.esm.js
init_public_api();
var getColor3 = function getColor4(theme3, color4, fallback) {
  var hex2 = memoizedGet(theme3, "colors." + color4, color4);
  var _TinyColor = new TinyColor(hex2), isValid = _TinyColor.isValid;
  return isValid ? hex2 : fallback;
};
var tone3 = function tone4(color4) {
  return function(theme3) {
    var hex2 = getColor3(theme3, color4);
    var isDark5 = new TinyColor(hex2).isDark();
    return isDark5 ? "dark" : "light";
  };
};
var isDark3 = function isDark4(color4) {
  return function(theme3) {
    return tone3(color4)(theme3) === "dark";
  };
};
var transparentize3 = function transparentize4(color4, opacity) {
  return function(theme3) {
    var raw = getColor3(theme3, color4);
    return new TinyColor(raw).setAlpha(opacity).toRgbString();
  };
};
function generateStripe2(size3, color4) {
  if (size3 === void 0) {
    size3 = "1rem";
  }
  if (color4 === void 0) {
    color4 = "rgba(255, 255, 255, 0.15)";
  }
  return {
    backgroundImage: "linear-gradient(\n    45deg,\n    " + color4 + " 25%,\n    transparent 25%,\n    transparent 50%,\n    " + color4 + " 50%,\n    " + color4 + " 75%,\n    transparent 75%,\n    transparent\n  )",
    backgroundSize: size3 + " " + size3
  };
}
function randomColor2(opts) {
  var fallback = random().toHexString();
  if (!opts || isEmptyObject(opts)) {
    return fallback;
  }
  if (opts.string && opts.colors) {
    return randomColorFromList2(opts.string, opts.colors);
  }
  if (opts.string && !opts.colors) {
    return randomColorFromString2(opts.string);
  }
  if (opts.colors && !opts.string) {
    return randomFromList2(opts.colors);
  }
  return fallback;
}
function randomColorFromString2(str) {
  var hash4 = 0;
  if (str.length === 0)
    return hash4.toString();
  for (var i = 0; i < str.length; i += 1) {
    hash4 = str.charCodeAt(i) + ((hash4 << 5) - hash4);
    hash4 = hash4 & hash4;
  }
  var color4 = "#";
  for (var j = 0; j < 3; j += 1) {
    var value = hash4 >> j * 8 & 255;
    color4 += ("00" + value.toString(16)).substr(-2);
  }
  return color4;
}
function randomColorFromList2(str, list4) {
  var index2 = 0;
  if (str.length === 0)
    return list4[0];
  for (var i = 0; i < str.length; i += 1) {
    index2 = str.charCodeAt(i) + ((index2 << 5) - index2);
    index2 = index2 & index2;
  }
  index2 = (index2 % list4.length + list4.length) % list4.length;
  return list4[index2];
}
function randomFromList2(list4) {
  return list4[Math.floor(Math.random() * list4.length)];
}
function mode2(light, dark) {
  return function(props) {
    return props.colorMode === "dark" ? dark : light;
  };
}
function orient3(options) {
  var orientation = options.orientation, vertical = options.vertical, horizontal = options.horizontal;
  if (!orientation)
    return {};
  return orientation === "vertical" ? vertical : horizontal;
}
function _extends50() {
  _extends50 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends50.apply(this, arguments);
}
var createBreakpoints3 = function createBreakpoints4(config3) {
  warn({
    condition: true,
    message: ["[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon", "simply pass the breakpoints as an object. Remove the createBreakpoint(..) call"].join("")
  });
  return _extends50({
    base: "0em"
  }, config3);
};
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  return Constructor;
}
var Anatomy2 = function() {
  function Anatomy3(name) {
    var _this = this;
    this.map = {};
    this.called = false;
    this.assert = function() {
      if (!_this.called) {
        _this.called = true;
        return;
      }
      throw new Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?");
    };
    this.parts = function() {
      _this.assert();
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }
      for (var _i = 0, _values = values; _i < _values.length; _i++) {
        var part = _values[_i];
        _this.map[part] = _this.toPart(part);
      }
      return _this;
    };
    this.extend = function() {
      for (var _len2 = arguments.length, parts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        parts[_key2] = arguments[_key2];
      }
      for (var _i2 = 0, _parts = parts; _i2 < _parts.length; _i2++) {
        var part = _parts[_i2];
        if (part in _this.map)
          continue;
        _this.map[part] = _this.toPart(part);
      }
      return _this;
    };
    this.toPart = function(part) {
      var el = ["container", "root"].includes(part != null ? part : "") ? [_this.name] : [_this.name, part];
      var attr = el.filter(Boolean).join("__");
      var className = "chakra-" + attr;
      var partObj = {
        className,
        selector: "." + className,
        toString: function toString() {
          return part;
        }
      };
      return partObj;
    };
    this.__type = {};
  }
  _createClass2(Anatomy3, [{
    key: "selectors",
    get: function get5() {
      var value = fromEntries(Object.entries(this.map).map(function(_ref2) {
        var key = _ref2[0], part = _ref2[1];
        return [key, part.selector];
      }));
      return value;
    }
  }, {
    key: "classNames",
    get: function get5() {
      var value = fromEntries(Object.entries(this.map).map(function(_ref2) {
        var key = _ref2[0], part = _ref2[1];
        return [key, part.className];
      }));
      return value;
    }
  }, {
    key: "keys",
    get: function get5() {
      return Object.keys(this.map);
    }
  }]);
  return Anatomy3;
}();
function anatomy2(name) {
  return new Anatomy2(name);
}
function toRef2(operand) {
  if (isObject(operand) && operand.reference) {
    return operand.reference;
  }
  return String(operand);
}
var toExpr3 = function toExpr4(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }
  return operands.map(toRef2).join(" " + operator + " ").replace(/calc/g, "");
};
var _add4 = function add5() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }
  return "calc(" + toExpr3.apply(void 0, ["+"].concat(operands)) + ")";
};
var _subtract4 = function subtract6() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }
  return "calc(" + toExpr3.apply(void 0, ["-"].concat(operands)) + ")";
};
var _multiply4 = function multiply4() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }
  return "calc(" + toExpr3.apply(void 0, ["*"].concat(operands)) + ")";
};
var _divide4 = function divide4() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }
  return "calc(" + toExpr3.apply(void 0, ["/"].concat(operands)) + ")";
};
var _negate4 = function negate4(x) {
  var value = toRef2(x);
  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }
  return _multiply4(value, -1);
};
var calc4 = Object.assign(function(x) {
  return {
    add: function add6() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }
      return calc4(_add4.apply(void 0, [x].concat(operands)));
    },
    subtract: function subtract7() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }
      return calc4(_subtract4.apply(void 0, [x].concat(operands)));
    },
    multiply: function multiply5() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }
      return calc4(_multiply4.apply(void 0, [x].concat(operands)));
    },
    divide: function divide5() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }
      return calc4(_divide4.apply(void 0, [x].concat(operands)));
    },
    negate: function negate5() {
      return calc4(_negate4(x));
    },
    toString: function toString() {
      return x.toString();
    }
  };
}, {
  add: _add4,
  subtract: _subtract4,
  multiply: _multiply4,
  divide: _divide4,
  negate: _negate4
});
function isDecimal2(value) {
  return !Number.isInteger(parseFloat(value.toString()));
}
function replaceWhiteSpace4(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }
  return value.replace(/\s+/g, replaceValue);
}
function escape4(value) {
  var valueStr = replaceWhiteSpace4(value.toString());
  if (valueStr.includes("\\."))
    return value;
  return isDecimal2(value) ? valueStr.replace(".", "\\.") : value;
}
function addPrefix4(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return [prefix3, escape4(value)].filter(Boolean).join("-");
}
function toVarRef2(name, fallback) {
  return "var(" + escape4(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVar4(value, prefix3) {
  if (prefix3 === void 0) {
    prefix3 = "";
  }
  return "--" + addPrefix4(value, prefix3);
}
function cssVar4(name, options) {
  var cssVariable = toVar4(name, options == null ? void 0 : options.prefix);
  return {
    variable: cssVariable,
    reference: toVarRef2(cssVariable, getFallback2(options == null ? void 0 : options.fallback))
  };
}
function getFallback2(fallback) {
  if (typeof fallback === "string")
    return fallback;
  return fallback == null ? void 0 : fallback.reference;
}

// node_modules/.pnpm/@chakra-ui+anatomy@1.3.0_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/anatomy/dist/chakra-ui-anatomy.esm.js
var accordionAnatomy2 = anatomy2("accordion").parts("root", "container", "button", "panel").extend("icon");
var alertAnatomy2 = anatomy2("alert").parts("title", "description", "container").extend("icon");
var avatarAnatomy2 = anatomy2("avatar").parts("label", "badge", "container").extend("excessLabel", "group");
var breadcrumbAnatomy2 = anatomy2("breadcrumb").parts("link", "item", "container").extend("separator");
var buttonAnatomy2 = anatomy2("button").parts();
var checkboxAnatomy2 = anatomy2("checkbox").parts("control", "icon", "container").extend("label");
var circularProgressAnatomy2 = anatomy2("progress").parts("track", "filledTrack").extend("label");
var drawerAnatomy2 = anatomy2("drawer").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var editableAnatomy2 = anatomy2("editable").parts("preview", "input", "textarea");
var formAnatomy2 = anatomy2("form").parts("container", "requiredIndicator", "helperText");
var formErrorAnatomy2 = anatomy2("formError").parts("text", "icon");
var inputAnatomy2 = anatomy2("input").parts("addon", "field", "element");
var listAnatomy2 = anatomy2("list").parts("container", "item", "icon");
var menuAnatomy2 = anatomy2("menu").parts("button", "list", "item").extend("groupTitle", "command", "divider");
var modalAnatomy2 = anatomy2("modal").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var numberInputAnatomy2 = anatomy2("numberinput").parts("root", "field", "stepperGroup", "stepper");
var pinInputAnatomy2 = anatomy2("pininput").parts("field");
var popoverAnatomy2 = anatomy2("popover").parts("content", "header", "body", "footer").extend("popper", "arrow", "closeButton");
var progressAnatomy2 = anatomy2("progress").parts("label", "filledTrack", "track");
var radioAnatomy2 = anatomy2("radio").parts("container", "control", "label");
var selectAnatomy2 = anatomy2("select").parts("field", "icon");
var sliderAnatomy2 = anatomy2("slider").parts("container", "track", "thumb", "filledTrack");
var statAnatomy2 = anatomy2("stat").parts("container", "label", "helpText", "number", "icon");
var switchAnatomy2 = anatomy2("switch").parts("container", "track", "thumb");
var tableAnatomy2 = anatomy2("table").parts("table", "thead", "tbody", "tr", "th", "td", "tfoot", "caption");
var tabsAnatomy2 = anatomy2("tabs").parts("root", "tab", "tablist", "tabpanel", "tabpanels", "indicator");
var tagAnatomy2 = anatomy2("tag").parts("container", "label", "closeButton");

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/typography/dist/chakra-ui-theme-foundations-typography.esm.js
var typography4 = {
  letterSpacings: {
    tighter: "-0.05em",
    tight: "-0.025em",
    normal: "0",
    wide: "0.025em",
    wider: "0.05em",
    widest: "0.1em"
  },
  lineHeights: {
    normal: "normal",
    none: 1,
    shorter: 1.25,
    "short": 1.375,
    base: 1.5,
    tall: 1.625,
    taller: "2",
    "3": ".75rem",
    "4": "1rem",
    "5": "1.25rem",
    "6": "1.5rem",
    "7": "1.75rem",
    "8": "2rem",
    "9": "2.25rem",
    "10": "2.5rem"
  },
  fontWeights: {
    hairline: 100,
    thin: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    black: 900
  },
  fonts: {
    heading: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'
  },
  fontSizes: {
    xs: "0.75rem",
    sm: "0.875rem",
    md: "1rem",
    lg: "1.125rem",
    xl: "1.25rem",
    "2xl": "1.5rem",
    "3xl": "1.875rem",
    "4xl": "2.25rem",
    "5xl": "3rem",
    "6xl": "3.75rem",
    "7xl": "4.5rem",
    "8xl": "6rem",
    "9xl": "8rem"
  }
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/dist/index-895c67e0.esm.js
var baseStyleContainer$42 = {
  borderTopWidth: "1px",
  borderColor: "inherit",
  _last: {
    borderBottomWidth: "1px"
  }
};
var baseStyleButton$12 = {
  transitionProperty: "common",
  transitionDuration: "normal",
  fontSize: "1rem",
  _focus: {
    boxShadow: "outline"
  },
  _hover: {
    bg: "blackAlpha.50"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed"
  },
  px: 4,
  py: 2
};
var baseStylePanel2 = {
  pt: 2,
  px: 4,
  pb: 5
};
var baseStyleIcon$52 = {
  fontSize: "1.25em"
};
var baseStyle$D2 = {
  root: {},
  container: baseStyleContainer$42,
  button: baseStyleButton$12,
  panel: baseStylePanel2,
  icon: baseStyleIcon$52
};
var accordion = {
  parts: accordionAnatomy2.keys,
  baseStyle: baseStyle$D2
};
var baseStyle$C2 = {
  container: {
    px: 4,
    py: 3
  },
  title: {
    fontWeight: "bold",
    lineHeight: 6,
    marginEnd: 2
  },
  description: {
    lineHeight: 6
  },
  icon: {
    flexShrink: 0,
    marginEnd: 3,
    w: 5,
    h: 6
  }
};
function getBg2(props) {
  var theme3 = props.theme, c2 = props.colorScheme;
  var lightBg = getColor3(theme3, c2 + ".100", c2);
  var darkBg = transparentize3(c2 + ".200", 0.16)(theme3);
  return mode2(lightBg, darkBg)(props);
}
var variantSubtle$12 = function variantSubtle4(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      bg: getBg2(props)
    },
    icon: {
      color: mode2(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantLeftAccent3 = function variantLeftAccent4(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      paddingStart: 3,
      borderStartWidth: "4px",
      borderStartColor: mode2(c2 + ".500", c2 + ".200")(props),
      bg: getBg2(props)
    },
    icon: {
      color: mode2(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantTopAccent3 = function variantTopAccent4(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      pt: 2,
      borderTopWidth: "4px",
      borderTopColor: mode2(c2 + ".500", c2 + ".200")(props),
      bg: getBg2(props)
    },
    icon: {
      color: mode2(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantSolid$32 = function variantSolid5(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      bg: mode2(c2 + ".500", c2 + ".200")(props),
      color: mode2("white", "gray.900")(props)
    }
  };
};
var variants$b2 = {
  subtle: variantSubtle$12,
  "left-accent": variantLeftAccent3,
  "top-accent": variantTopAccent3,
  solid: variantSolid$32
};
var defaultProps$n2 = {
  variant: "subtle",
  colorScheme: "blue"
};
var alert = {
  parts: alertAnatomy2.keys,
  baseStyle: baseStyle$C2,
  variants: variants$b2,
  defaultProps: defaultProps$n2
};
var baseStyleBadge3 = function baseStyleBadge4(props) {
  return {
    transform: "translate(25%, 25%)",
    borderRadius: "full",
    border: "0.2em solid",
    borderColor: mode2("white", "gray.800")(props)
  };
};
var baseStyleExcessLabel3 = function baseStyleExcessLabel4(props) {
  return {
    bg: mode2("gray.200", "whiteAlpha.400")(props)
  };
};
var baseStyleContainer$32 = function baseStyleContainer4(props) {
  var name = props.name, theme3 = props.theme;
  var bg = name ? randomColor2({
    string: name
  }) : "gray.400";
  var isBgDark = isDark3(bg)(theme3);
  var color4 = "white";
  if (!isBgDark)
    color4 = "gray.800";
  var borderColor = mode2("white", "gray.800")(props);
  return {
    bg,
    color: color4,
    borderColor,
    verticalAlign: "top"
  };
};
var baseStyle$B2 = function baseStyle23(props) {
  return {
    badge: baseStyleBadge3(props),
    excessLabel: baseStyleExcessLabel3(props),
    container: baseStyleContainer$32(props)
  };
};
function getSize$32(size3) {
  var themeSize = sizes3[size3];
  return {
    container: {
      width: size3,
      height: size3,
      fontSize: "calc(" + (themeSize != null ? themeSize : size3) + " / 2.5)"
    },
    excessLabel: {
      width: size3,
      height: size3
    },
    label: {
      fontSize: "calc(" + (themeSize != null ? themeSize : size3) + " / 2.5)",
      lineHeight: size3 !== "100%" ? themeSize != null ? themeSize : size3 : void 0
    }
  };
}
var sizes$k2 = {
  "2xs": getSize$32("4"),
  xs: getSize$32("6"),
  sm: getSize$32("8"),
  md: getSize$32("12"),
  lg: getSize$32("16"),
  xl: getSize$32("24"),
  "2xl": getSize$32("32"),
  full: getSize$32("100%")
};
var defaultProps$m2 = {
  size: "md"
};
var avatar = {
  parts: avatarAnatomy2.keys,
  baseStyle: baseStyle$B2,
  sizes: sizes$k2,
  defaultProps: defaultProps$m2
};
var baseStyle$A2 = {
  px: 1,
  textTransform: "uppercase",
  fontSize: "xs",
  borderRadius: "sm",
  fontWeight: "bold"
};
var variantSolid$22 = function variantSolid6(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  var dark = transparentize3(c2 + ".500", 0.6)(theme3);
  return {
    bg: mode2(c2 + ".500", dark)(props),
    color: mode2("white", "whiteAlpha.800")(props)
  };
};
var variantSubtle5 = function variantSubtle6(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  var darkBg = transparentize3(c2 + ".200", 0.16)(theme3);
  return {
    bg: mode2(c2 + ".100", darkBg)(props),
    color: mode2(c2 + ".800", c2 + ".200")(props)
  };
};
var variantOutline$22 = function variantOutline5(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  var darkColor = transparentize3(c2 + ".200", 0.8)(theme3);
  var lightColor = getColor3(theme3, c2 + ".500");
  var color4 = mode2(lightColor, darkColor)(props);
  return {
    color: color4,
    boxShadow: "inset 0 0 0px 1px " + color4
  };
};
var variants$a2 = {
  solid: variantSolid$22,
  subtle: variantSubtle5,
  outline: variantOutline$22
};
var defaultProps$l2 = {
  variant: "subtle",
  colorScheme: "gray"
};
var Badge3 = {
  baseStyle: baseStyle$A2,
  variants: variants$a2,
  defaultProps: defaultProps$l2
};
var baseStyleLink2 = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focus: {
    boxShadow: "outline"
  }
};
var baseStyle$z2 = {
  link: baseStyleLink2
};
var breadcrumb = {
  parts: breadcrumbAnatomy2.keys,
  baseStyle: baseStyle$z2
};
var baseStyle$y2 = {
  lineHeight: "1.2",
  borderRadius: "md",
  fontWeight: "semibold",
  transitionProperty: "common",
  transitionDuration: "normal",
  _focus: {
    boxShadow: "outline"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed",
    boxShadow: "none"
  },
  _hover: {
    _disabled: {
      bg: "initial"
    }
  }
};
var variantGhost3 = function variantGhost4(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  if (c2 === "gray") {
    return {
      color: mode2("inherit", "whiteAlpha.900")(props),
      _hover: {
        bg: mode2("gray.100", "whiteAlpha.200")(props)
      },
      _active: {
        bg: mode2("gray.200", "whiteAlpha.300")(props)
      }
    };
  }
  var darkHoverBg = transparentize3(c2 + ".200", 0.12)(theme3);
  var darkActiveBg = transparentize3(c2 + ".200", 0.24)(theme3);
  return {
    color: mode2(c2 + ".600", c2 + ".200")(props),
    bg: "transparent",
    _hover: {
      bg: mode2(c2 + ".50", darkHoverBg)(props)
    },
    _active: {
      bg: mode2(c2 + ".100", darkActiveBg)(props)
    }
  };
};
var variantOutline$12 = function variantOutline6(props) {
  var c2 = props.colorScheme;
  var borderColor = mode2("gray.200", "whiteAlpha.300")(props);
  return _extends49({
    border: "1px solid",
    borderColor: c2 === "gray" ? borderColor : "currentColor"
  }, variantGhost3(props));
};
var accessibleColorMap2 = {
  yellow: {
    bg: "yellow.400",
    color: "black",
    hoverBg: "yellow.500",
    activeBg: "yellow.600"
  },
  cyan: {
    bg: "cyan.400",
    color: "black",
    hoverBg: "cyan.500",
    activeBg: "cyan.600"
  }
};
var variantSolid$12 = function variantSolid7(props) {
  var _accessibleColorMap$c;
  var c2 = props.colorScheme;
  if (c2 === "gray") {
    var _bg = mode2("gray.100", "whiteAlpha.200")(props);
    return {
      bg: _bg,
      _hover: {
        bg: mode2("gray.200", "whiteAlpha.300")(props),
        _disabled: {
          bg: _bg
        }
      },
      _active: {
        bg: mode2("gray.300", "whiteAlpha.400")(props)
      }
    };
  }
  var _ref2 = (_accessibleColorMap$c = accessibleColorMap2[c2]) != null ? _accessibleColorMap$c : {}, _ref$bg = _ref2.bg, bg = _ref$bg === void 0 ? c2 + ".500" : _ref$bg, _ref$color = _ref2.color, color4 = _ref$color === void 0 ? "white" : _ref$color, _ref$hoverBg = _ref2.hoverBg, hoverBg = _ref$hoverBg === void 0 ? c2 + ".600" : _ref$hoverBg, _ref$activeBg = _ref2.activeBg, activeBg = _ref$activeBg === void 0 ? c2 + ".700" : _ref$activeBg;
  var background3 = mode2(bg, c2 + ".200")(props);
  return {
    bg: background3,
    color: mode2(color4, "gray.800")(props),
    _hover: {
      bg: mode2(hoverBg, c2 + ".300")(props),
      _disabled: {
        bg: background3
      }
    },
    _active: {
      bg: mode2(activeBg, c2 + ".400")(props)
    }
  };
};
var variantLink3 = function variantLink4(props) {
  var c2 = props.colorScheme;
  return {
    padding: 0,
    height: "auto",
    lineHeight: "normal",
    verticalAlign: "baseline",
    color: mode2(c2 + ".500", c2 + ".200")(props),
    _hover: {
      textDecoration: "underline",
      _disabled: {
        textDecoration: "none"
      }
    },
    _active: {
      color: mode2(c2 + ".700", c2 + ".500")(props)
    }
  };
};
var variantUnstyled$22 = {
  bg: "none",
  color: "inherit",
  display: "inline",
  lineHeight: "inherit",
  m: 0,
  p: 0
};
var variants$92 = {
  ghost: variantGhost3,
  outline: variantOutline$12,
  solid: variantSolid$12,
  link: variantLink3,
  unstyled: variantUnstyled$22
};
var sizes$j2 = {
  lg: {
    h: 12,
    minW: 12,
    fontSize: "lg",
    px: 6
  },
  md: {
    h: 10,
    minW: 10,
    fontSize: "md",
    px: 4
  },
  sm: {
    h: 8,
    minW: 8,
    fontSize: "sm",
    px: 3
  },
  xs: {
    h: 6,
    minW: 6,
    fontSize: "xs",
    px: 2
  }
};
var defaultProps$k2 = {
  variant: "solid",
  size: "md",
  colorScheme: "gray"
};
var button = {
  baseStyle: baseStyle$y2,
  variants: variants$92,
  sizes: sizes$j2,
  defaultProps: defaultProps$k2
};
var baseStyleControl$12 = function baseStyleControl4(props) {
  var c2 = props.colorScheme;
  return {
    w: "100%",
    transitionProperty: "box-shadow",
    transitionDuration: "normal",
    border: "2px solid",
    borderRadius: "sm",
    borderColor: "inherit",
    color: "white",
    _checked: {
      bg: mode2(c2 + ".500", c2 + ".200")(props),
      borderColor: mode2(c2 + ".500", c2 + ".200")(props),
      color: mode2("white", "gray.900")(props),
      _hover: {
        bg: mode2(c2 + ".600", c2 + ".300")(props),
        borderColor: mode2(c2 + ".600", c2 + ".300")(props)
      },
      _disabled: {
        borderColor: mode2("gray.200", "transparent")(props),
        bg: mode2("gray.200", "whiteAlpha.300")(props),
        color: mode2("gray.500", "whiteAlpha.500")(props)
      }
    },
    _indeterminate: {
      bg: mode2(c2 + ".500", c2 + ".200")(props),
      borderColor: mode2(c2 + ".500", c2 + ".200")(props),
      color: mode2("white", "gray.900")(props)
    },
    _disabled: {
      bg: mode2("gray.100", "whiteAlpha.100")(props),
      borderColor: mode2("gray.100", "transparent")(props)
    },
    _focus: {
      boxShadow: "outline"
    },
    _invalid: {
      borderColor: mode2("red.500", "red.300")(props)
    }
  };
};
var baseStyleContainer$22 = {
  _disabled: {
    cursor: "not-allowed"
  }
};
var baseStyleLabel$32 = {
  userSelect: "none",
  _disabled: {
    opacity: 0.4
  }
};
var baseStyleIcon$42 = {
  transitionProperty: "transform",
  transitionDuration: "normal"
};
var baseStyle$x2 = function baseStyle24(props) {
  return {
    icon: baseStyleIcon$42,
    container: baseStyleContainer$22,
    control: baseStyleControl$12(props),
    label: baseStyleLabel$32
  };
};
var sizes$i2 = {
  sm: {
    control: {
      h: 3,
      w: 3
    },
    label: {
      fontSize: "sm"
    },
    icon: {
      fontSize: "0.45rem"
    }
  },
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    },
    icon: {
      fontSize: "0.625rem"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    },
    icon: {
      fontSize: "0.625rem"
    }
  }
};
var defaultProps$j2 = {
  size: "md",
  colorScheme: "blue"
};
var Checkbox3 = {
  parts: checkboxAnatomy2.keys,
  baseStyle: baseStyle$x2,
  sizes: sizes$i2,
  defaultProps: defaultProps$j2
};
var _lg$12;
var _md$12;
var _sm$12;
var $size$12 = cssVar4("close-button-size");
var baseStyle$w2 = function baseStyle25(props) {
  var hoverBg = mode2("blackAlpha.100", "whiteAlpha.100")(props);
  var activeBg = mode2("blackAlpha.200", "whiteAlpha.200")(props);
  return {
    w: [$size$12.reference],
    h: [$size$12.reference],
    borderRadius: "md",
    transitionProperty: "common",
    transitionDuration: "normal",
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed",
      boxShadow: "none"
    },
    _hover: {
      bg: hoverBg
    },
    _active: {
      bg: activeBg
    },
    _focus: {
      boxShadow: "outline"
    }
  };
};
var sizes$h2 = {
  lg: (_lg$12 = {}, _lg$12[$size$12.variable] = "40px", _lg$12.fontSize = "16px", _lg$12),
  md: (_md$12 = {}, _md$12[$size$12.variable] = "32px", _md$12.fontSize = "12px", _md$12),
  sm: (_sm$12 = {}, _sm$12[$size$12.variable] = "24px", _sm$12.fontSize = "10px", _sm$12)
};
var defaultProps$i2 = {
  size: "md"
};
var closeButton = {
  baseStyle: baseStyle$w2,
  sizes: sizes$h2,
  defaultProps: defaultProps$i2
};
var variants$82 = Badge3.variants;
var defaultProps$h2 = Badge3.defaultProps;
var baseStyle$v2 = {
  fontFamily: "mono",
  fontSize: "sm",
  px: "0.2em",
  borderRadius: "sm"
};
var code = {
  baseStyle: baseStyle$v2,
  variants: variants$82,
  defaultProps: defaultProps$h2
};
var baseStyle$u2 = {
  w: "100%",
  mx: "auto",
  maxW: "60ch",
  px: "1rem"
};
var container3 = {
  baseStyle: baseStyle$u2
};
var baseStyle$t2 = {
  opacity: 0.6,
  borderColor: "inherit"
};
var variantSolid8 = {
  borderStyle: "solid"
};
var variantDashed2 = {
  borderStyle: "dashed"
};
var variants$72 = {
  solid: variantSolid8,
  dashed: variantDashed2
};
var defaultProps$g2 = {
  variant: "solid"
};
var divider = {
  baseStyle: baseStyle$t2,
  variants: variants$72,
  defaultProps: defaultProps$g2
};
function getSize$22(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        h: "100vh"
      }
    };
  }
  return {
    dialog: {
      maxW: value
    }
  };
}
var baseStyleOverlay$12 = {
  bg: "blackAlpha.600",
  zIndex: "overlay"
};
var baseStyleDialogContainer$12 = {
  display: "flex",
  zIndex: "modal",
  justifyContent: "center"
};
var baseStyleDialog$12 = function baseStyleDialog4(props) {
  var isFullHeight = props.isFullHeight;
  return _extends49({}, isFullHeight && {
    height: "100vh"
  }, {
    zIndex: "modal",
    maxH: "100vh",
    bg: mode2("white", "gray.700")(props),
    color: "inherit",
    boxShadow: mode2("lg", "dark-lg")(props)
  });
};
var baseStyleHeader$22 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$32 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$22 = {
  px: 6,
  py: 2,
  flex: 1,
  overflow: "auto"
};
var baseStyleFooter$22 = {
  px: 6,
  py: 4
};
var baseStyle$s2 = function baseStyle26(props) {
  return {
    overlay: baseStyleOverlay$12,
    dialogContainer: baseStyleDialogContainer$12,
    dialog: baseStyleDialog$12(props),
    header: baseStyleHeader$22,
    closeButton: baseStyleCloseButton$32,
    body: baseStyleBody$22,
    footer: baseStyleFooter$22
  };
};
var sizes$g2 = {
  xs: getSize$22("xs"),
  sm: getSize$22("md"),
  md: getSize$22("lg"),
  lg: getSize$22("2xl"),
  xl: getSize$22("4xl"),
  full: getSize$22("full")
};
var defaultProps$f2 = {
  size: "xs"
};
var drawer = {
  parts: drawerAnatomy2.keys,
  baseStyle: baseStyle$s2,
  sizes: sizes$g2,
  defaultProps: defaultProps$f2
};
var baseStylePreview2 = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyleInput2 = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal",
  width: "full",
  _focus: {
    boxShadow: "outline"
  },
  _placeholder: {
    opacity: 0.6
  }
};
var baseStyleTextarea2 = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal",
  width: "full",
  _focus: {
    boxShadow: "outline"
  },
  _placeholder: {
    opacity: 0.6
  }
};
var baseStyle$r2 = {
  preview: baseStylePreview2,
  input: baseStyleInput2,
  textarea: baseStyleTextarea2
};
var editable = {
  parts: editableAnatomy2.keys,
  baseStyle: baseStyle$r2
};
var baseStyleRequiredIndicator3 = function baseStyleRequiredIndicator4(props) {
  return {
    marginStart: 1,
    color: mode2("red.500", "red.300")(props)
  };
};
var baseStyleHelperText3 = function baseStyleHelperText4(props) {
  return {
    mt: 2,
    color: mode2("gray.500", "whiteAlpha.600")(props),
    lineHeight: "normal",
    fontSize: "sm"
  };
};
var baseStyle$q2 = function baseStyle27(props) {
  return {
    container: {
      width: "100%",
      position: "relative"
    },
    requiredIndicator: baseStyleRequiredIndicator3(props),
    helperText: baseStyleHelperText3(props)
  };
};
var form = {
  parts: formAnatomy2.keys,
  baseStyle: baseStyle$q2
};
var baseStyleText3 = function baseStyleText4(props) {
  return {
    color: mode2("red.500", "red.300")(props),
    mt: 2,
    fontSize: "sm",
    lineHeight: "normal"
  };
};
var baseStyleIcon$32 = function baseStyleIcon3(props) {
  return {
    marginEnd: "0.5em",
    color: mode2("red.500", "red.300")(props)
  };
};
var baseStyle$p2 = function baseStyle28(props) {
  return {
    text: baseStyleText3(props),
    icon: baseStyleIcon$32(props)
  };
};
var formError = {
  parts: formErrorAnatomy2.keys,
  baseStyle: baseStyle$p2
};
var baseStyle$o2 = {
  fontSize: "md",
  marginEnd: 3,
  mb: 2,
  fontWeight: "medium",
  transitionProperty: "common",
  transitionDuration: "normal",
  opacity: 1,
  _disabled: {
    opacity: 0.4
  }
};
var formLabel = {
  baseStyle: baseStyle$o2
};
var baseStyle$n2 = {
  fontFamily: "heading",
  fontWeight: "bold"
};
var sizes$f2 = {
  "4xl": {
    fontSize: ["6xl", null, "7xl"],
    lineHeight: 1
  },
  "3xl": {
    fontSize: ["5xl", null, "6xl"],
    lineHeight: 1
  },
  "2xl": {
    fontSize: ["4xl", null, "5xl"],
    lineHeight: [1.2, null, 1]
  },
  xl: {
    fontSize: ["3xl", null, "4xl"],
    lineHeight: [1.33, null, 1.2]
  },
  lg: {
    fontSize: ["2xl", null, "3xl"],
    lineHeight: [1.33, null, 1.2]
  },
  md: {
    fontSize: "xl",
    lineHeight: 1.2
  },
  sm: {
    fontSize: "md",
    lineHeight: 1.2
  },
  xs: {
    fontSize: "sm",
    lineHeight: 1.2
  }
};
var defaultProps$e2 = {
  size: "xl"
};
var heading = {
  baseStyle: baseStyle$n2,
  sizes: sizes$f2,
  defaultProps: defaultProps$e2
};
var baseStyle$m2 = {
  field: {
    width: "100%",
    minWidth: 0,
    outline: 0,
    position: "relative",
    appearance: "none",
    transitionProperty: "common",
    transitionDuration: "normal"
  }
};
var size2 = {
  lg: {
    fontSize: "lg",
    px: 4,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    px: 4,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    px: 3,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    px: 2,
    h: 6,
    borderRadius: "sm"
  }
};
var sizes$e2 = {
  lg: {
    field: size2.lg,
    addon: size2.lg
  },
  md: {
    field: size2.md,
    addon: size2.md
  },
  sm: {
    field: size2.sm,
    addon: size2.sm
  },
  xs: {
    field: size2.xs,
    addon: size2.xs
  }
};
function getDefaults2(props) {
  var fc = props.focusBorderColor, ec = props.errorBorderColor;
  return {
    focusBorderColor: fc || mode2("blue.500", "blue.300")(props),
    errorBorderColor: ec || mode2("red.500", "red.300")(props)
  };
}
var variantOutline7 = function variantOutline8(props) {
  var theme3 = props.theme;
  var _getDefaults = getDefaults2(props), fc = _getDefaults.focusBorderColor, ec = _getDefaults.errorBorderColor;
  return {
    field: {
      border: "1px solid",
      borderColor: "inherit",
      bg: "inherit",
      _hover: {
        borderColor: mode2("gray.300", "whiteAlpha.400")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: getColor3(theme3, ec),
        boxShadow: "0 0 0 1px " + getColor3(theme3, ec)
      },
      _focus: {
        zIndex: 1,
        borderColor: getColor3(theme3, fc),
        boxShadow: "0 0 0 1px " + getColor3(theme3, fc)
      }
    },
    addon: {
      border: "1px solid",
      borderColor: mode2("inherit", "whiteAlpha.50")(props),
      bg: mode2("gray.100", "whiteAlpha.300")(props)
    }
  };
};
var variantFilled3 = function variantFilled4(props) {
  var theme3 = props.theme;
  var _getDefaults2 = getDefaults2(props), fc = _getDefaults2.focusBorderColor, ec = _getDefaults2.errorBorderColor;
  return {
    field: {
      border: "2px solid",
      borderColor: "transparent",
      bg: mode2("gray.100", "whiteAlpha.50")(props),
      _hover: {
        bg: mode2("gray.200", "whiteAlpha.100")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: getColor3(theme3, ec)
      },
      _focus: {
        bg: "transparent",
        borderColor: getColor3(theme3, fc)
      }
    },
    addon: {
      border: "2px solid",
      borderColor: "transparent",
      bg: mode2("gray.100", "whiteAlpha.50")(props)
    }
  };
};
var variantFlushed3 = function variantFlushed4(props) {
  var theme3 = props.theme;
  var _getDefaults3 = getDefaults2(props), fc = _getDefaults3.focusBorderColor, ec = _getDefaults3.errorBorderColor;
  return {
    field: {
      borderBottom: "1px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent",
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _invalid: {
        borderColor: getColor3(theme3, ec),
        boxShadow: "0px 1px 0px 0px " + getColor3(theme3, ec)
      },
      _focus: {
        borderColor: getColor3(theme3, fc),
        boxShadow: "0px 1px 0px 0px " + getColor3(theme3, fc)
      }
    },
    addon: {
      borderBottom: "2px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent"
    }
  };
};
var variantUnstyled$12 = {
  field: {
    bg: "transparent",
    px: 0,
    height: "auto"
  },
  addon: {
    bg: "transparent",
    px: 0,
    height: "auto"
  }
};
var variants$62 = {
  outline: variantOutline7,
  filled: variantFilled3,
  flushed: variantFlushed3,
  unstyled: variantUnstyled$12
};
var defaultProps$d2 = {
  size: "md",
  variant: "outline"
};
var Input3 = {
  parts: inputAnatomy2.keys,
  baseStyle: baseStyle$m2,
  sizes: sizes$e2,
  variants: variants$62,
  defaultProps: defaultProps$d2
};
var baseStyle$l2 = function baseStyle29(props) {
  return {
    bg: mode2("gray.100", "whiteAlpha")(props),
    borderRadius: "md",
    borderWidth: "1px",
    borderBottomWidth: "3px",
    fontSize: "0.8em",
    fontWeight: "bold",
    lineHeight: "normal",
    px: "0.4em",
    whiteSpace: "nowrap"
  };
};
var kbd = {
  baseStyle: baseStyle$l2
};
var baseStyle$k2 = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focus: {
    boxShadow: "outline"
  }
};
var link = {
  baseStyle: baseStyle$k2
};
var baseStyleIcon$22 = {
  marginEnd: "0.5rem",
  display: "inline",
  verticalAlign: "text-bottom"
};
var baseStyle$j2 = {
  container: {},
  item: {},
  icon: baseStyleIcon$22
};
var list3 = {
  parts: listAnatomy2.keys,
  baseStyle: baseStyle$j2
};
var baseStyleList3 = function baseStyleList4(props) {
  return {
    bg: mode2("#fff", "gray.700")(props),
    boxShadow: mode2("sm", "dark-lg")(props),
    color: "inherit",
    minW: "3xs",
    py: "2",
    zIndex: 1,
    borderRadius: "md",
    borderWidth: "1px"
  };
};
var baseStyleItem3 = function baseStyleItem4(props) {
  return {
    py: "0.4rem",
    px: "0.8rem",
    transitionProperty: "background",
    transitionDuration: "ultra-fast",
    transitionTimingFunction: "ease-in",
    _focus: {
      bg: mode2("gray.100", "whiteAlpha.100")(props)
    },
    _active: {
      bg: mode2("gray.200", "whiteAlpha.200")(props)
    },
    _expanded: {
      bg: mode2("gray.100", "whiteAlpha.100")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};
var baseStyleGroupTitle2 = {
  mx: 4,
  my: 2,
  fontWeight: "semibold",
  fontSize: "sm"
};
var baseStyleCommand2 = {
  opacity: 0.6
};
var baseStyleDivider2 = {
  border: 0,
  borderBottom: "1px solid",
  borderColor: "inherit",
  my: "0.5rem",
  opacity: 0.6
};
var baseStyleButton2 = {
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyle$i2 = function baseStyle30(props) {
  return {
    button: baseStyleButton2,
    list: baseStyleList3(props),
    item: baseStyleItem3(props),
    groupTitle: baseStyleGroupTitle2,
    command: baseStyleCommand2,
    divider: baseStyleDivider2
  };
};
var menu = {
  parts: menuAnatomy2.keys,
  baseStyle: baseStyle$i2
};
var baseStyleOverlay2 = {
  bg: "blackAlpha.600",
  zIndex: "modal"
};
var baseStyleDialogContainer3 = function baseStyleDialogContainer4(props) {
  var isCentered = props.isCentered, scrollBehavior = props.scrollBehavior;
  return {
    display: "flex",
    zIndex: "modal",
    justifyContent: "center",
    alignItems: isCentered ? "center" : "flex-start",
    overflow: scrollBehavior === "inside" ? "hidden" : "auto"
  };
};
var baseStyleDialog5 = function baseStyleDialog6(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    borderRadius: "md",
    bg: mode2("white", "gray.700")(props),
    color: "inherit",
    my: "3.75rem",
    zIndex: "modal",
    maxH: scrollBehavior === "inside" ? "calc(100% - 7.5rem)" : void 0,
    boxShadow: mode2("lg", "dark-lg")(props)
  };
};
var baseStyleHeader$12 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$22 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$12 = function baseStyleBody3(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    px: 6,
    py: 2,
    flex: 1,
    overflow: scrollBehavior === "inside" ? "auto" : void 0
  };
};
var baseStyleFooter$12 = {
  px: 6,
  py: 4
};
var baseStyle$h2 = function baseStyle31(props) {
  return {
    overlay: baseStyleOverlay2,
    dialogContainer: baseStyleDialogContainer3(props),
    dialog: baseStyleDialog5(props),
    header: baseStyleHeader$12,
    closeButton: baseStyleCloseButton$22,
    body: baseStyleBody$12(props),
    footer: baseStyleFooter$12
  };
};
function getSize$12(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        minH: "100vh",
        "@supports(min-height: -webkit-fill-available)": {
          minH: "-webkit-fill-available"
        },
        my: 0
      }
    };
  }
  return {
    dialog: {
      maxW: value
    }
  };
}
var sizes$d2 = {
  xs: getSize$12("xs"),
  sm: getSize$12("sm"),
  md: getSize$12("md"),
  lg: getSize$12("lg"),
  xl: getSize$12("xl"),
  "2xl": getSize$12("2xl"),
  "3xl": getSize$12("3xl"),
  "4xl": getSize$12("4xl"),
  "5xl": getSize$12("5xl"),
  "6xl": getSize$12("6xl"),
  full: getSize$12("full")
};
var defaultProps$c2 = {
  size: "md"
};
var modal = {
  parts: modalAnatomy2.keys,
  baseStyle: baseStyle$h2,
  sizes: sizes$d2,
  defaultProps: defaultProps$c2
};
var _baseStyleRoot2;
var _Input$baseStyle$fiel2;
var _Input$baseStyle2;
var variants$52 = Input3.variants;
var defaultProps$b2 = Input3.defaultProps;
var $stepperWidth2 = cssVar4("number-input-stepper-width");
var $inputPadding2 = cssVar4("number-input-input-padding");
var inputPaddingValue2 = calc4($stepperWidth2).add("0.5rem").toString();
var baseStyleRoot$12 = (_baseStyleRoot2 = {}, _baseStyleRoot2[$stepperWidth2.variable] = "24px", _baseStyleRoot2[$inputPadding2.variable] = inputPaddingValue2, _baseStyleRoot2);
var baseStyleField$12 = (_Input$baseStyle$fiel2 = (_Input$baseStyle2 = Input3.baseStyle) == null ? void 0 : _Input$baseStyle2.field) != null ? _Input$baseStyle$fiel2 : {};
var baseStyleStepperGroup2 = {
  width: [$stepperWidth2.reference]
};
var baseStyleStepper3 = function baseStyleStepper4(props) {
  return {
    borderStart: "1px solid",
    borderStartColor: mode2("inherit", "whiteAlpha.300")(props),
    color: mode2("inherit", "whiteAlpha.800")(props),
    _active: {
      bg: mode2("gray.200", "whiteAlpha.300")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};
var baseStyle$g2 = function baseStyle32(props) {
  return {
    root: baseStyleRoot$12,
    field: baseStyleField$12,
    stepperGroup: baseStyleStepperGroup2,
    stepper: baseStyleStepper3(props)
  };
};
function getSize2(size3) {
  var _sizeStyle$field$font, _sizeStyle$field;
  var sizeStyle = Input3.sizes[size3];
  var radius = {
    lg: "md",
    md: "md",
    sm: "sm",
    xs: "sm"
  };
  var _fontSize = (_sizeStyle$field$font = (_sizeStyle$field = sizeStyle.field) == null ? void 0 : _sizeStyle$field.fontSize) != null ? _sizeStyle$field$font : "md";
  var fontSize = typography4.fontSizes[_fontSize.toString()];
  return {
    field: _extends49({}, sizeStyle.field, {
      paddingInlineEnd: $inputPadding2.reference,
      verticalAlign: "top"
    }),
    stepper: {
      fontSize: calc4(fontSize).multiply(0.75).toString(),
      _first: {
        borderTopEndRadius: radius[size3]
      },
      _last: {
        borderBottomEndRadius: radius[size3],
        mt: "-1px",
        borderTopWidth: 1
      }
    }
  };
}
var sizes$c2 = {
  xs: getSize2("xs"),
  sm: getSize2("sm"),
  md: getSize2("md"),
  lg: getSize2("lg")
};
var numberInput = {
  parts: numberInputAnatomy2.keys,
  baseStyle: baseStyle$g2,
  sizes: sizes$c2,
  variants: variants$52,
  defaultProps: defaultProps$b2
};
var _Input$variants$unsty$12;
var baseStyle$f2 = _extends49({}, Input3.baseStyle.field, {
  textAlign: "center"
});
var sizes$b2 = {
  lg: {
    fontSize: "lg",
    w: 12,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    w: 10,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    w: 8,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    w: 6,
    h: 6,
    borderRadius: "sm"
  }
};
var variants$43 = {
  outline: function outline6(props) {
    var _Input$variants$outli;
    return (_Input$variants$outli = Input3.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed3(props) {
    var _Input$variants$flush;
    return (_Input$variants$flush = Input3.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled3(props) {
    var _Input$variants$fille;
    return (_Input$variants$fille = Input3.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty$12 = Input3.variants.unstyled.field) != null ? _Input$variants$unsty$12 : {}
};
var defaultProps$a2 = Input3.defaultProps;
var pinInput = {
  baseStyle: baseStyle$f2,
  sizes: sizes$b2,
  variants: variants$43,
  defaultProps: defaultProps$a2
};
var $popperBg2 = cssVar4("popper-bg");
var $arrowBg$12 = cssVar4("popper-arrow-bg");
var $arrowShadowColor2 = cssVar4("popper-arrow-shadow-color");
var baseStylePopper2 = {
  zIndex: 10
};
var baseStyleContent3 = function baseStyleContent4(props) {
  var _ref2;
  var bg = mode2("white", "gray.700")(props);
  var shadowColor = mode2("gray.200", "whiteAlpha.300")(props);
  return _ref2 = {}, _ref2[$popperBg2.variable] = "colors." + bg, _ref2.bg = $popperBg2.reference, _ref2[$arrowBg$12.variable] = $popperBg2.reference, _ref2[$arrowShadowColor2.variable] = "colors." + shadowColor, _ref2.width = "xs", _ref2.border = "1px solid", _ref2.borderColor = "inherit", _ref2.borderRadius = "md", _ref2.boxShadow = "sm", _ref2.zIndex = "inherit", _ref2._focus = {
    outline: 0,
    boxShadow: "outline"
  }, _ref2;
};
var baseStyleHeader2 = {
  px: 3,
  py: 2,
  borderBottomWidth: "1px"
};
var baseStyleBody4 = {
  px: 3,
  py: 2
};
var baseStyleFooter2 = {
  px: 3,
  py: 2,
  borderTopWidth: "1px"
};
var baseStyleCloseButton$12 = {
  position: "absolute",
  borderRadius: "md",
  top: 1,
  insetEnd: 2,
  padding: 2
};
var baseStyle$e2 = function baseStyle33(props) {
  return {
    popper: baseStylePopper2,
    content: baseStyleContent3(props),
    header: baseStyleHeader2,
    body: baseStyleBody4,
    footer: baseStyleFooter2,
    arrow: {},
    closeButton: baseStyleCloseButton$12
  };
};
var popover = {
  parts: popoverAnatomy2.keys,
  baseStyle: baseStyle$e2
};
function filledStyle2(props) {
  var c2 = props.colorScheme, t3 = props.theme, isIndeterminate = props.isIndeterminate, hasStripe = props.hasStripe;
  var stripeStyle = mode2(generateStripe2(), generateStripe2("1rem", "rgba(0,0,0,0.1)"))(props);
  var bgColor = mode2(c2 + ".500", c2 + ".200")(props);
  var gradient = "linear-gradient(\n    to right,\n    transparent 0%,\n    " + getColor3(t3, bgColor) + " 50%,\n    transparent 100%\n  )";
  var addStripe = !isIndeterminate && hasStripe;
  return _extends49({}, addStripe && stripeStyle, isIndeterminate ? {
    bgImage: gradient
  } : {
    bgColor
  });
}
var baseStyleLabel$22 = {
  lineHeight: "1",
  fontSize: "0.25em",
  fontWeight: "bold",
  color: "white"
};
var baseStyleTrack$22 = function baseStyleTrack5(props) {
  return {
    bg: mode2("gray.100", "whiteAlpha.300")(props)
  };
};
var baseStyleFilledTrack$12 = function baseStyleFilledTrack4(props) {
  return _extends49({
    transitionProperty: "common",
    transitionDuration: "slow"
  }, filledStyle2(props));
};
var baseStyle$d2 = function baseStyle34(props) {
  return {
    label: baseStyleLabel$22,
    filledTrack: baseStyleFilledTrack$12(props),
    track: baseStyleTrack$22(props)
  };
};
var sizes$a2 = {
  xs: {
    track: {
      h: "0.25rem"
    }
  },
  sm: {
    track: {
      h: "0.5rem"
    }
  },
  md: {
    track: {
      h: "0.75rem"
    }
  },
  lg: {
    track: {
      h: "1rem"
    }
  }
};
var defaultProps$92 = {
  size: "md",
  colorScheme: "blue"
};
var progress3 = {
  parts: progressAnatomy2.keys,
  sizes: sizes$a2,
  baseStyle: baseStyle$d2,
  defaultProps: defaultProps$92
};
var baseStyleControl5 = function baseStyleControl6(props) {
  var _Checkbox$baseStyle = Checkbox3.baseStyle(props), _Checkbox$baseStyle$c = _Checkbox$baseStyle.control, control = _Checkbox$baseStyle$c === void 0 ? {} : _Checkbox$baseStyle$c;
  return _extends49({}, control, {
    borderRadius: "full",
    _checked: _extends49({}, control["_checked"], {
      _before: {
        content: '""',
        display: "inline-block",
        pos: "relative",
        w: "50%",
        h: "50%",
        borderRadius: "50%",
        bg: "currentColor"
      }
    })
  });
};
var baseStyle$c2 = function baseStyle35(props) {
  return {
    label: Checkbox3.baseStyle(props).label,
    container: Checkbox3.baseStyle(props).container,
    control: baseStyleControl5(props)
  };
};
var sizes$92 = {
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    }
  },
  sm: {
    control: {
      width: 3,
      height: 3
    },
    label: {
      fontSize: "sm"
    }
  }
};
var defaultProps$82 = {
  size: "md",
  colorScheme: "blue"
};
var radio = {
  parts: radioAnatomy2.keys,
  baseStyle: baseStyle$c2,
  sizes: sizes$92,
  defaultProps: defaultProps$82
};
var baseStyleField3 = function baseStyleField4(props) {
  return _extends49({}, Input3.baseStyle.field, {
    bg: mode2("white", "gray.700")(props),
    appearance: "none",
    paddingBottom: "1px",
    lineHeight: "normal",
    "> option, > optgroup": {
      bg: mode2("white", "gray.700")(props)
    }
  });
};
var baseStyleIcon$12 = {
  width: "1.5rem",
  height: "100%",
  insetEnd: "0.5rem",
  position: "relative",
  color: "currentColor",
  fontSize: "1.25rem",
  _disabled: {
    opacity: 0.5
  }
};
var baseStyle$b2 = function baseStyle36(props) {
  return {
    field: baseStyleField3(props),
    icon: baseStyleIcon$12
  };
};
var iconSpacing2 = {
  paddingInlineEnd: "2rem"
};
var sizes$82 = (0, import_lodash.default)({}, Input3.sizes, {
  lg: {
    field: iconSpacing2
  },
  md: {
    field: iconSpacing2
  },
  sm: {
    field: iconSpacing2
  },
  xs: {
    field: iconSpacing2,
    icon: {
      insetEnd: "0.25rem"
    }
  }
});
var select = {
  parts: selectAnatomy2.keys,
  baseStyle: baseStyle$b2,
  sizes: sizes$82,
  variants: Input3.variants,
  defaultProps: Input3.defaultProps
};
var fade4 = function fade5(startColor, endColor) {
  return keyframes({
    from: {
      borderColor: startColor,
      background: startColor
    },
    to: {
      borderColor: endColor,
      background: endColor
    }
  });
};
var baseStyle$a2 = function baseStyle37(props) {
  var defaultStartColor = mode2("gray.100", "gray.800")(props);
  var defaultEndColor = mode2("gray.400", "gray.600")(props);
  var _props$startColor = props.startColor, startColor = _props$startColor === void 0 ? defaultStartColor : _props$startColor, _props$endColor = props.endColor, endColor = _props$endColor === void 0 ? defaultEndColor : _props$endColor, speed = props.speed, theme3 = props.theme;
  var start2 = getColor3(theme3, startColor);
  var end2 = getColor3(theme3, endColor);
  return {
    opacity: 0.7,
    borderRadius: "2px",
    borderColor: start2,
    background: end2,
    animation: speed + "s linear infinite alternate " + fade4(start2, end2)
  };
};
var skeleton = {
  baseStyle: baseStyle$a2
};
var baseStyle$92 = function baseStyle38(props) {
  return {
    borderRadius: "md",
    fontWeight: "semibold",
    _focus: {
      boxShadow: "outline",
      padding: "1rem",
      position: "fixed",
      top: "1.5rem",
      insetStart: "1.5rem",
      bg: mode2("white", "gray.700")(props)
    }
  };
};
var skipLink = {
  baseStyle: baseStyle$92
};
function thumbOrientation2(props) {
  return orient3({
    orientation: props.orientation,
    vertical: {
      left: "50%",
      transform: "translateX(-50%)",
      _active: {
        transform: "translateX(-50%) scale(1.15)"
      }
    },
    horizontal: {
      top: "50%",
      transform: "translateY(-50%)",
      _active: {
        transform: "translateY(-50%) scale(1.15)"
      }
    }
  });
}
var baseStyleContainer$12 = function baseStyleContainer5(props) {
  var orientation = props.orientation;
  return _extends49({
    display: "inline-block",
    position: "relative",
    cursor: "pointer",
    _disabled: {
      opacity: 0.6,
      cursor: "default",
      pointerEvents: "none"
    }
  }, orient3({
    orientation,
    vertical: {
      h: "100%"
    },
    horizontal: {
      w: "100%"
    }
  }));
};
var baseStyleTrack$12 = function baseStyleTrack6(props) {
  return {
    overflow: "hidden",
    borderRadius: "sm",
    bg: mode2("gray.200", "whiteAlpha.200")(props),
    _disabled: {
      bg: mode2("gray.300", "whiteAlpha.300")(props)
    }
  };
};
var baseStyleThumb$12 = function baseStyleThumb3(props) {
  return _extends49({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    outline: 0,
    zIndex: 1,
    borderRadius: "full",
    bg: "white",
    boxShadow: "base",
    border: "1px solid",
    borderColor: "transparent",
    transitionProperty: "transform",
    transitionDuration: "normal",
    _focus: {
      boxShadow: "outline"
    },
    _disabled: {
      bg: "gray.300"
    }
  }, thumbOrientation2(props));
};
var baseStyleFilledTrack5 = function baseStyleFilledTrack6(props) {
  var c2 = props.colorScheme;
  return {
    width: "inherit",
    height: "inherit",
    bg: mode2(c2 + ".500", c2 + ".200")(props)
  };
};
var baseStyle$82 = function baseStyle39(props) {
  return {
    container: baseStyleContainer$12(props),
    track: baseStyleTrack$12(props),
    thumb: baseStyleThumb$12(props),
    filledTrack: baseStyleFilledTrack5(props)
  };
};
var sizeLg3 = function sizeLg4(props) {
  return {
    thumb: {
      w: "16px",
      h: "16px"
    },
    track: orient3({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};
var sizeMd3 = function sizeMd4(props) {
  return {
    thumb: {
      w: "14px",
      h: "14px"
    },
    track: orient3({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};
var sizeSm3 = function sizeSm4(props) {
  return {
    thumb: {
      w: "10px",
      h: "10px"
    },
    track: orient3({
      orientation: props.orientation,
      horizontal: {
        h: "2px"
      },
      vertical: {
        w: "2px"
      }
    })
  };
};
var sizes$72 = {
  lg: sizeLg3,
  md: sizeMd3,
  sm: sizeSm3
};
var defaultProps$72 = {
  size: "md",
  colorScheme: "blue"
};
var slider = {
  parts: sliderAnatomy2.keys,
  sizes: sizes$72,
  baseStyle: baseStyle$82,
  defaultProps: defaultProps$72
};
var _xs2;
var _sm2;
var _md2;
var _lg2;
var _xl2;
var $size2 = cssVar4("spinner-size");
var baseStyle$72 = {
  width: [$size2.reference],
  height: [$size2.reference]
};
var sizes$62 = {
  xs: (_xs2 = {}, _xs2[$size2.variable] = "0.75rem", _xs2),
  sm: (_sm2 = {}, _sm2[$size2.variable] = "1rem", _sm2),
  md: (_md2 = {}, _md2[$size2.variable] = "1.5rem", _md2),
  lg: (_lg2 = {}, _lg2[$size2.variable] = "2rem", _lg2),
  xl: (_xl2 = {}, _xl2[$size2.variable] = "3rem", _xl2)
};
var defaultProps$62 = {
  size: "md"
};
var spinner = {
  baseStyle: baseStyle$72,
  sizes: sizes$62,
  defaultProps: defaultProps$62
};
var baseStyleLabel$12 = {
  fontWeight: "medium"
};
var baseStyleHelpText2 = {
  opacity: 0.8,
  marginBottom: 2
};
var baseStyleNumber2 = {
  verticalAlign: "baseline",
  fontWeight: "semibold"
};
var baseStyleIcon4 = {
  marginEnd: 1,
  w: "14px",
  h: "14px",
  verticalAlign: "middle"
};
var baseStyle$62 = {
  container: {},
  label: baseStyleLabel$12,
  helpText: baseStyleHelpText2,
  number: baseStyleNumber2,
  icon: baseStyleIcon4
};
var sizes$52 = {
  md: {
    label: {
      fontSize: "sm"
    },
    helpText: {
      fontSize: "sm"
    },
    number: {
      fontSize: "2xl"
    }
  }
};
var defaultProps$52 = {
  size: "md"
};
var stat = {
  parts: statAnatomy2.keys,
  baseStyle: baseStyle$62,
  sizes: sizes$52,
  defaultProps: defaultProps$52
};
var _container22;
var _container32;
var _container42;
var $width2 = cssVar4("switch-track-width");
var $height2 = cssVar4("switch-track-height");
var $diff2 = cssVar4("switch-track-diff");
var diffValue2 = calc4.subtract($width2, $height2);
var $translateX2 = cssVar4("switch-thumb-x");
var baseStyleTrack7 = function baseStyleTrack8(props) {
  var c2 = props.colorScheme;
  return {
    borderRadius: "full",
    p: "2px",
    width: [$width2.reference],
    height: [$height2.reference],
    transitionProperty: "common",
    transitionDuration: "fast",
    bg: mode2("gray.300", "whiteAlpha.400")(props),
    _focus: {
      boxShadow: "outline"
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    },
    _checked: {
      bg: mode2(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var baseStyleThumb4 = {
  bg: "white",
  transitionProperty: "transform",
  transitionDuration: "normal",
  borderRadius: "inherit",
  width: [$height2.reference],
  height: [$height2.reference],
  _checked: {
    transform: "translateX(" + $translateX2.reference + ")"
  }
};
var baseStyle$52 = function baseStyle40(props) {
  var _rtl, _container;
  return {
    container: (_container = {}, _container[$diff2.variable] = diffValue2, _container[$translateX2.variable] = $diff2.reference, _container._rtl = (_rtl = {}, _rtl[$translateX2.variable] = calc4($diff2).negate().toString(), _rtl), _container),
    track: baseStyleTrack7(props),
    thumb: baseStyleThumb4
  };
};
var sizes$42 = {
  sm: {
    container: (_container22 = {}, _container22[$width2.variable] = "1.375rem", _container22[$height2.variable] = "0.75rem", _container22)
  },
  md: {
    container: (_container32 = {}, _container32[$width2.variable] = "1.875rem", _container32[$height2.variable] = "1rem", _container32)
  },
  lg: {
    container: (_container42 = {}, _container42[$width2.variable] = "2.875rem", _container42[$height2.variable] = "1.5rem", _container42)
  }
};
var defaultProps$42 = {
  size: "md",
  colorScheme: "blue"
};
var _switch = {
  parts: switchAnatomy2.keys,
  baseStyle: baseStyle$52,
  sizes: sizes$42,
  defaultProps: defaultProps$42
};
var baseStyle$42 = {
  table: {
    fontVariantNumeric: "lining-nums tabular-nums",
    borderCollapse: "collapse",
    width: "full"
  },
  th: {
    fontFamily: "heading",
    fontWeight: "bold",
    textTransform: "uppercase",
    letterSpacing: "wider",
    textAlign: "start"
  },
  td: {
    textAlign: "start"
  },
  caption: {
    mt: 4,
    fontFamily: "heading",
    textAlign: "center",
    fontWeight: "medium"
  }
};
var numericStyles2 = {
  "&[data-is-numeric=true]": {
    textAlign: "end"
  }
};
var variantSimple3 = function variantSimple4(props) {
  var c2 = props.colorScheme;
  return {
    th: _extends49({
      color: mode2("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: mode2(c2 + ".100", c2 + ".700")(props)
    }, numericStyles2),
    td: _extends49({
      borderBottom: "1px",
      borderColor: mode2(c2 + ".100", c2 + ".700")(props)
    }, numericStyles2),
    caption: {
      color: mode2("gray.600", "gray.100")(props)
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};
var variantStripe3 = function variantStripe4(props) {
  var c2 = props.colorScheme;
  return {
    th: _extends49({
      color: mode2("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: mode2(c2 + ".100", c2 + ".700")(props)
    }, numericStyles2),
    td: _extends49({
      borderBottom: "1px",
      borderColor: mode2(c2 + ".100", c2 + ".700")(props)
    }, numericStyles2),
    caption: {
      color: mode2("gray.600", "gray.100")(props)
    },
    tbody: {
      tr: {
        "&:nth-of-type(odd)": {
          "th, td": {
            borderBottomWidth: "1px",
            borderColor: mode2(c2 + ".100", c2 + ".700")(props)
          },
          td: {
            background: mode2(c2 + ".100", c2 + ".700")(props)
          }
        }
      }
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};
var variants$33 = {
  simple: variantSimple3,
  striped: variantStripe3,
  unstyled: {}
};
var sizes$32 = {
  sm: {
    th: {
      px: "4",
      py: "1",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "4",
      py: "2",
      fontSize: "sm",
      lineHeight: "4"
    },
    caption: {
      px: "4",
      py: "2",
      fontSize: "xs"
    }
  },
  md: {
    th: {
      px: "6",
      py: "3",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "6",
      py: "4",
      lineHeight: "5"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "sm"
    }
  },
  lg: {
    th: {
      px: "8",
      py: "4",
      lineHeight: "5",
      fontSize: "sm"
    },
    td: {
      px: "8",
      py: "5",
      lineHeight: "6"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "md"
    }
  }
};
var defaultProps$32 = {
  variant: "simple",
  size: "md",
  colorScheme: "gray"
};
var table = {
  parts: tableAnatomy2.keys,
  baseStyle: baseStyle$42,
  variants: variants$33,
  sizes: sizes$32,
  defaultProps: defaultProps$32
};
var baseStyleRoot3 = function baseStyleRoot4(props) {
  var orientation = props.orientation;
  return {
    display: orientation === "vertical" ? "flex" : "block"
  };
};
var baseStyleTab3 = function baseStyleTab4(props) {
  var isFitted = props.isFitted;
  return {
    flex: isFitted ? 1 : void 0,
    transitionProperty: "common",
    transitionDuration: "normal",
    _focus: {
      zIndex: 1,
      boxShadow: "outline"
    }
  };
};
var baseStyleTablist3 = function baseStyleTablist4(props) {
  var _props$align = props.align, align = _props$align === void 0 ? "start" : _props$align, orientation = props.orientation;
  var alignments = {
    end: "flex-end",
    center: "center",
    start: "flex-start"
  };
  return {
    justifyContent: alignments[align],
    flexDirection: orientation === "vertical" ? "column" : "row"
  };
};
var baseStyleTabpanel2 = {
  p: 4
};
var baseStyle$32 = function baseStyle41(props) {
  return {
    root: baseStyleRoot3(props),
    tab: baseStyleTab3(props),
    tablist: baseStyleTablist3(props),
    tabpanel: baseStyleTabpanel2
  };
};
var sizes$22 = {
  sm: {
    tab: {
      py: 1,
      px: 4,
      fontSize: "sm"
    }
  },
  md: {
    tab: {
      fontSize: "md",
      py: 2,
      px: 4
    }
  },
  lg: {
    tab: {
      fontSize: "lg",
      py: 3,
      px: 4
    }
  }
};
var variantLine3 = function variantLine4(props) {
  var _tablist, _tab;
  var c2 = props.colorScheme, orientation = props.orientation;
  var isVertical = orientation === "vertical";
  var borderProp = orientation === "vertical" ? "borderStart" : "borderBottom";
  var marginProp = isVertical ? "marginStart" : "marginBottom";
  return {
    tablist: (_tablist = {}, _tablist[borderProp] = "2px solid", _tablist.borderColor = "inherit", _tablist),
    tab: (_tab = {}, _tab[borderProp] = "2px solid", _tab.borderColor = "transparent", _tab[marginProp] = "-2px", _tab._selected = {
      color: mode2(c2 + ".600", c2 + ".300")(props),
      borderColor: "currentColor"
    }, _tab._active = {
      bg: mode2("gray.200", "whiteAlpha.300")(props)
    }, _tab._disabled = {
      opacity: 0.4,
      cursor: "not-allowed"
    }, _tab)
  };
};
var variantEnclosed3 = function variantEnclosed4(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      borderTopRadius: "md",
      border: "1px solid",
      borderColor: "transparent",
      mb: "-1px",
      _selected: {
        color: mode2(c2 + ".600", c2 + ".300")(props),
        borderColor: "inherit",
        borderBottomColor: mode2("white", "gray.800")(props)
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};
var variantEnclosedColored3 = function variantEnclosedColored4(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      border: "1px solid",
      borderColor: "inherit",
      bg: mode2("gray.50", "whiteAlpha.50")(props),
      mb: "-1px",
      _notLast: {
        marginEnd: "-1px"
      },
      _selected: {
        bg: mode2("#fff", "gray.800")(props),
        color: mode2(c2 + ".600", c2 + ".300")(props),
        borderColor: "inherit",
        borderTopColor: "currentColor",
        borderBottomColor: "transparent"
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};
var variantSoftRounded3 = function variantSoftRounded4(props) {
  var c2 = props.colorScheme, theme3 = props.theme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: "gray.600",
      _selected: {
        color: getColor3(theme3, c2 + ".700"),
        bg: getColor3(theme3, c2 + ".100")
      }
    }
  };
};
var variantSolidRounded3 = function variantSolidRounded4(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: mode2("gray.600", "inherit")(props),
      _selected: {
        color: mode2("#fff", "gray.800")(props),
        bg: mode2(c2 + ".600", c2 + ".300")(props)
      }
    }
  };
};
var variantUnstyled2 = {};
var variants$23 = {
  line: variantLine3,
  enclosed: variantEnclosed3,
  "enclosed-colored": variantEnclosedColored3,
  "soft-rounded": variantSoftRounded3,
  "solid-rounded": variantSolidRounded3,
  unstyled: variantUnstyled2
};
var defaultProps$22 = {
  size: "md",
  variant: "line",
  colorScheme: "blue"
};
var tabs = {
  parts: tabsAnatomy2.keys,
  baseStyle: baseStyle$32,
  sizes: sizes$22,
  variants: variants$23,
  defaultProps: defaultProps$22
};
var baseStyleContainer6 = {
  fontWeight: "medium",
  lineHeight: 1.2,
  outline: 0,
  _focus: {
    boxShadow: "outline"
  }
};
var baseStyleLabel2 = {
  lineHeight: 1.2,
  overflow: "visible"
};
var baseStyleCloseButton2 = {
  fontSize: "18px",
  w: "1.25rem",
  h: "1.25rem",
  transitionProperty: "common",
  transitionDuration: "normal",
  borderRadius: "full",
  marginStart: "0.375rem",
  marginEnd: "-1",
  opacity: 0.5,
  _disabled: {
    opacity: 0.4
  },
  _focus: {
    boxShadow: "outline",
    bg: "rgba(0, 0, 0, 0.14)"
  },
  _hover: {
    opacity: 0.8
  },
  _active: {
    opacity: 1
  }
};
var baseStyle$22 = {
  container: baseStyleContainer6,
  label: baseStyleLabel2,
  closeButton: baseStyleCloseButton2
};
var sizes$12 = {
  sm: {
    container: {
      minH: "1.25rem",
      minW: "1.25rem",
      fontSize: "xs",
      px: 2,
      borderRadius: "md"
    },
    closeButton: {
      marginEnd: "-2px",
      marginStart: "0.35rem"
    }
  },
  md: {
    container: {
      minH: "1.5rem",
      minW: "1.5rem",
      fontSize: "sm",
      borderRadius: "md",
      px: 2
    }
  },
  lg: {
    container: {
      minH: 8,
      minW: 8,
      fontSize: "md",
      borderRadius: "md",
      px: 3
    }
  }
};
var variants$13 = {
  subtle: function subtle2(props) {
    return {
      container: Badge3.variants.subtle(props)
    };
  },
  solid: function solid2(props) {
    return {
      container: Badge3.variants.solid(props)
    };
  },
  outline: function outline7(props) {
    return {
      container: Badge3.variants.outline(props)
    };
  }
};
var defaultProps$12 = {
  size: "md",
  variant: "subtle",
  colorScheme: "gray"
};
var tag = {
  parts: tagAnatomy2.keys,
  variants: variants$13,
  baseStyle: baseStyle$22,
  sizes: sizes$12,
  defaultProps: defaultProps$12
};
var _Input$variants$unsty2;
var _Input$sizes$xs$field2;
var _Input$sizes$sm$field2;
var _Input$sizes$md$field2;
var _Input$sizes$lg$field2;
var baseStyle$12 = _extends49({}, Input3.baseStyle.field, {
  paddingY: "8px",
  minHeight: "80px",
  lineHeight: "short",
  verticalAlign: "top"
});
var variants3 = {
  outline: function outline8(props) {
    var _Input$variants$outli;
    return (_Input$variants$outli = Input3.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed4(props) {
    var _Input$variants$flush;
    return (_Input$variants$flush = Input3.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled4(props) {
    var _Input$variants$fille;
    return (_Input$variants$fille = Input3.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty2 = Input3.variants.unstyled.field) != null ? _Input$variants$unsty2 : {}
};
var sizes4 = {
  xs: (_Input$sizes$xs$field2 = Input3.sizes.xs.field) != null ? _Input$sizes$xs$field2 : {},
  sm: (_Input$sizes$sm$field2 = Input3.sizes.sm.field) != null ? _Input$sizes$sm$field2 : {},
  md: (_Input$sizes$md$field2 = Input3.sizes.md.field) != null ? _Input$sizes$md$field2 : {},
  lg: (_Input$sizes$lg$field2 = Input3.sizes.lg.field) != null ? _Input$sizes$lg$field2 : {}
};
var defaultProps2 = {
  size: "md",
  variant: "outline"
};
var textarea = {
  baseStyle: baseStyle$12,
  sizes: sizes4,
  variants: variants3,
  defaultProps: defaultProps2
};
var $bg2 = cssVar4("tooltip-bg");
var $arrowBg2 = cssVar4("popper-arrow-bg");
var baseStyle42 = function baseStyle43(props) {
  var _ref2;
  var bg = mode2("gray.700", "gray.300")(props);
  return _ref2 = {}, _ref2[$bg2.variable] = "colors." + bg, _ref2.px = "8px", _ref2.py = "2px", _ref2.bg = [$bg2.reference], _ref2[$arrowBg2.variable] = [$bg2.reference], _ref2.color = mode2("whiteAlpha.900", "gray.900")(props), _ref2.borderRadius = "sm", _ref2.fontWeight = "medium", _ref2.fontSize = "sm", _ref2.boxShadow = "md", _ref2.maxW = "320px", _ref2.zIndex = "tooltip", _ref2;
};
var tooltip = {
  baseStyle: baseStyle42
};
var components2 = Object.freeze({
  __proto__: null,
  Accordion: accordion,
  Alert: alert,
  Avatar: avatar,
  Badge: Badge3,
  Breadcrumb: breadcrumb,
  Button: button,
  Checkbox: Checkbox3,
  CloseButton: closeButton,
  Code: code,
  Container: container3,
  Divider: divider,
  Drawer: drawer,
  Editable: editable,
  Form: form,
  FormError: formError,
  FormLabel: formLabel,
  Heading: heading,
  Input: Input3,
  Kbd: kbd,
  Link: link,
  List: list3,
  Menu: menu,
  Modal: modal,
  NumberInput: numberInput,
  PinInput: pinInput,
  Popover: popover,
  Progress: progress3,
  Radio: radio,
  Select: select,
  Skeleton: skeleton,
  SkipLink: skipLink,
  Slider: slider,
  Spinner: spinner,
  Stat: stat,
  Switch: _switch,
  Table: table,
  Tabs: tabs,
  Tag: tag,
  Textarea: textarea,
  Tooltip: tooltip
});

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/borders/dist/chakra-ui-theme-foundations-borders.esm.js
var borders3 = {
  none: 0,
  "1px": "1px solid",
  "2px": "2px solid",
  "4px": "4px solid",
  "8px": "8px solid"
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/breakpoints/dist/chakra-ui-theme-foundations-breakpoints.esm.js
var breakpoints4 = createBreakpoints3({
  sm: "30em",
  md: "48em",
  lg: "62em",
  xl: "80em",
  "2xl": "96em"
});

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/colors/dist/chakra-ui-theme-foundations-colors.esm.js
var colors2 = {
  transparent: "transparent",
  current: "currentColor",
  black: "#000000",
  white: "#FFFFFF",
  whiteAlpha: {
    50: "rgba(255, 255, 255, 0.04)",
    100: "rgba(255, 255, 255, 0.06)",
    200: "rgba(255, 255, 255, 0.08)",
    300: "rgba(255, 255, 255, 0.16)",
    400: "rgba(255, 255, 255, 0.24)",
    500: "rgba(255, 255, 255, 0.36)",
    600: "rgba(255, 255, 255, 0.48)",
    700: "rgba(255, 255, 255, 0.64)",
    800: "rgba(255, 255, 255, 0.80)",
    900: "rgba(255, 255, 255, 0.92)"
  },
  blackAlpha: {
    50: "rgba(0, 0, 0, 0.04)",
    100: "rgba(0, 0, 0, 0.06)",
    200: "rgba(0, 0, 0, 0.08)",
    300: "rgba(0, 0, 0, 0.16)",
    400: "rgba(0, 0, 0, 0.24)",
    500: "rgba(0, 0, 0, 0.36)",
    600: "rgba(0, 0, 0, 0.48)",
    700: "rgba(0, 0, 0, 0.64)",
    800: "rgba(0, 0, 0, 0.80)",
    900: "rgba(0, 0, 0, 0.92)"
  },
  gray: {
    50: "#F7FAFC",
    100: "#EDF2F7",
    200: "#E2E8F0",
    300: "#CBD5E0",
    400: "#A0AEC0",
    500: "#718096",
    600: "#4A5568",
    700: "#2D3748",
    800: "#1A202C",
    900: "#171923"
  },
  red: {
    50: "#FFF5F5",
    100: "#FED7D7",
    200: "#FEB2B2",
    300: "#FC8181",
    400: "#F56565",
    500: "#E53E3E",
    600: "#C53030",
    700: "#9B2C2C",
    800: "#822727",
    900: "#63171B"
  },
  orange: {
    50: "#FFFAF0",
    100: "#FEEBC8",
    200: "#FBD38D",
    300: "#F6AD55",
    400: "#ED8936",
    500: "#DD6B20",
    600: "#C05621",
    700: "#9C4221",
    800: "#7B341E",
    900: "#652B19"
  },
  yellow: {
    50: "#FFFFF0",
    100: "#FEFCBF",
    200: "#FAF089",
    300: "#F6E05E",
    400: "#ECC94B",
    500: "#D69E2E",
    600: "#B7791F",
    700: "#975A16",
    800: "#744210",
    900: "#5F370E"
  },
  green: {
    50: "#F0FFF4",
    100: "#C6F6D5",
    200: "#9AE6B4",
    300: "#68D391",
    400: "#48BB78",
    500: "#38A169",
    600: "#2F855A",
    700: "#276749",
    800: "#22543D",
    900: "#1C4532"
  },
  teal: {
    50: "#E6FFFA",
    100: "#B2F5EA",
    200: "#81E6D9",
    300: "#4FD1C5",
    400: "#38B2AC",
    500: "#319795",
    600: "#2C7A7B",
    700: "#285E61",
    800: "#234E52",
    900: "#1D4044"
  },
  blue: {
    50: "#ebf8ff",
    100: "#bee3f8",
    200: "#90cdf4",
    300: "#63b3ed",
    400: "#4299e1",
    500: "#3182ce",
    600: "#2b6cb0",
    700: "#2c5282",
    800: "#2a4365",
    900: "#1A365D"
  },
  cyan: {
    50: "#EDFDFD",
    100: "#C4F1F9",
    200: "#9DECF9",
    300: "#76E4F7",
    400: "#0BC5EA",
    500: "#00B5D8",
    600: "#00A3C4",
    700: "#0987A0",
    800: "#086F83",
    900: "#065666"
  },
  purple: {
    50: "#FAF5FF",
    100: "#E9D8FD",
    200: "#D6BCFA",
    300: "#B794F4",
    400: "#9F7AEA",
    500: "#805AD5",
    600: "#6B46C1",
    700: "#553C9A",
    800: "#44337A",
    900: "#322659"
  },
  pink: {
    50: "#FFF5F7",
    100: "#FED7E2",
    200: "#FBB6CE",
    300: "#F687B3",
    400: "#ED64A6",
    500: "#D53F8C",
    600: "#B83280",
    700: "#97266D",
    800: "#702459",
    900: "#521B41"
  },
  linkedin: {
    50: "#E8F4F9",
    100: "#CFEDFB",
    200: "#9BDAF3",
    300: "#68C7EC",
    400: "#34B3E4",
    500: "#00A0DC",
    600: "#008CC9",
    700: "#0077B5",
    800: "#005E93",
    900: "#004471"
  },
  facebook: {
    50: "#E8F4F9",
    100: "#D9DEE9",
    200: "#B7C2DA",
    300: "#6482C0",
    400: "#4267B2",
    500: "#385898",
    600: "#314E89",
    700: "#29487D",
    800: "#223B67",
    900: "#1E355B"
  },
  messenger: {
    50: "#D0E6FF",
    100: "#B9DAFF",
    200: "#A2CDFF",
    300: "#7AB8FF",
    400: "#2E90FF",
    500: "#0078FF",
    600: "#0063D1",
    700: "#0052AC",
    800: "#003C7E",
    900: "#002C5C"
  },
  whatsapp: {
    50: "#dffeec",
    100: "#b9f5d0",
    200: "#90edb3",
    300: "#65e495",
    400: "#3cdd78",
    500: "#22c35e",
    600: "#179848",
    700: "#0c6c33",
    800: "#01421c",
    900: "#001803"
  },
  twitter: {
    50: "#E5F4FD",
    100: "#C8E9FB",
    200: "#A8DCFA",
    300: "#83CDF7",
    400: "#57BBF5",
    500: "#1DA1F2",
    600: "#1A94DA",
    700: "#1681BF",
    800: "#136B9E",
    900: "#0D4D71"
  },
  telegram: {
    50: "#E3F2F9",
    100: "#C5E4F3",
    200: "#A2D4EC",
    300: "#7AC1E4",
    400: "#47A9DA",
    500: "#0088CC",
    600: "#007AB8",
    700: "#006BA1",
    800: "#005885",
    900: "#003F5E"
  }
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/radius/dist/chakra-ui-theme-foundations-radius.esm.js
var radii2 = {
  none: "0",
  sm: "0.125rem",
  base: "0.25rem",
  md: "0.375rem",
  lg: "0.5rem",
  xl: "0.75rem",
  "2xl": "1rem",
  "3xl": "1.5rem",
  full: "9999px"
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/shadows/dist/chakra-ui-theme-foundations-shadows.esm.js
var shadows2 = {
  xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
  sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
  base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
  md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
  lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
  xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
  "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
  outline: "0 0 0 3px rgba(66, 153, 225, 0.6)",
  inner: "inset 0 2px 4px 0 rgba(0,0,0,0.06)",
  none: "none",
  "dark-lg": "rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/transition/dist/chakra-ui-theme-foundations-transition.esm.js
var transitionProperty2 = {
  common: "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
  colors: "background-color, border-color, color, fill, stroke",
  dimensions: "width, height",
  position: "left, right, top, bottom",
  background: "background-color, background-image, background-position"
};
var transitionTimingFunction2 = {
  "ease-in": "cubic-bezier(0.4, 0, 1, 1)",
  "ease-out": "cubic-bezier(0, 0, 0.2, 1)",
  "ease-in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
};
var transitionDuration2 = {
  "ultra-fast": "50ms",
  faster: "100ms",
  fast: "150ms",
  normal: "200ms",
  slow: "300ms",
  slower: "400ms",
  "ultra-slow": "500ms"
};
var transition4 = {
  property: transitionProperty2,
  easing: transitionTimingFunction2,
  duration: transitionDuration2
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/z-index/dist/chakra-ui-theme-foundations-z-index.esm.js
var zIndices2 = {
  hide: -1,
  auto: "auto",
  base: 0,
  docked: 10,
  dropdown: 1e3,
  sticky: 1100,
  banner: 1200,
  overlay: 1300,
  modal: 1400,
  popover: 1500,
  skipLink: 1600,
  toast: 1700,
  tooltip: 1800
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/blur/dist/chakra-ui-theme-foundations-blur.esm.js
var blur3 = {
  none: 0,
  sm: "4px",
  base: "8px",
  md: "12px",
  lg: "16px",
  xl: "24px",
  "2xl": "40px",
  "3xl": "64px"
};

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/foundations/dist/chakra-ui-theme-foundations.esm.js
var foundations2 = _extends49({
  breakpoints: breakpoints4,
  zIndices: zIndices2,
  radii: radii2,
  blur: blur3,
  colors: colors2
}, typography4, {
  sizes: sizes3,
  shadows: shadows2,
  space: spacing2,
  borders: borders3,
  transition: transition4
});

// node_modules/.pnpm/@chakra-ui+theme@1.14.1_@chakra-ui+system@2.1.3/node_modules/@chakra-ui/theme/dist/chakra-ui-theme.esm.js
var styles2 = {
  global: function global2(props) {
    return {
      body: {
        fontFamily: "body",
        color: mode2("gray.800", "whiteAlpha.900")(props),
        bg: mode2("white", "gray.800")(props),
        transitionProperty: "background-color",
        transitionDuration: "normal",
        lineHeight: "base"
      },
      "*::placeholder": {
        color: mode2("gray.400", "whiteAlpha.400")(props)
      },
      "*, *::before, &::after": {
        borderColor: mode2("gray.200", "whiteAlpha.300")(props),
        wordWrap: "break-word"
      }
    };
  }
};
var styles$12 = styles2;
var direction2 = "ltr";
var config2 = {
  useSystemColorMode: false,
  initialColorMode: "light",
  cssVarPrefix: "chakra"
};
var theme2 = _extends49({
  direction: direction2
}, foundations2, {
  components: components2,
  styles: styles$12,
  config: config2
});

// node_modules/.pnpm/@chakra-ui+toast@1.5.9_pe2bzncnuenomjyugkagg3bqqq/node_modules/@chakra-ui/toast/dist/chakra-ui-toast.esm.js
var React82 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());

// node_modules/.pnpm/@reach+alert@0.13.2_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/@reach/alert/dist/reach-alert.esm.js
var import_react89 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/.pnpm/@reach+visually-hidden@0.13.2_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/@reach/visually-hidden/dist/reach-visually-hidden.esm.js
var import_react87 = __toESM(require_react());
var import_prop_types7 = __toESM(require_prop_types());
function _extends51() {
  _extends51 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends51.apply(this, arguments);
}
function _objectWithoutPropertiesLoose42(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var VisuallyHidden2 = (0, import_react87.forwardRef)(function VisuallyHidden3(_ref2, ref) {
  var _ref$as = _ref2.as, Comp = _ref$as === void 0 ? "span" : _ref$as, _ref$style = _ref2.style, style = _ref$style === void 0 ? {} : _ref$style, props = _objectWithoutPropertiesLoose42(_ref2, ["as", "style"]);
  return (0, import_react87.createElement)(Comp, _extends51({
    ref,
    style: _extends51({
      border: 0,
      clip: "rect(0 0 0 0)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      whiteSpace: "nowrap",
      wordWrap: "normal"
    }, style)
  }, props));
});
if (true) {
  VisuallyHidden2.displayName = "VisuallyHidden";
  VisuallyHidden2.propTypes = {
    as: import_prop_types7.default.any,
    children: import_prop_types7.default.node
  };
}

// node_modules/.pnpm/@reach+utils@0.13.2_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/@reach/utils/dist/reach-utils.esm.js
var React81 = __toESM(require_react());
var import_react88 = __toESM(require_react());
var import_warning = __toESM(require_warning());
var useIsomorphicLayoutEffect2 = canUseDOM3() ? import_react88.useLayoutEffect : import_react88.useEffect;
var checkedPkgs = {};
var checkStyles = noop7;
if (true) {
  _ref2 = typeof process !== "undefined" ? process : {
    env: {
      NODE_ENV: "development"
    }
  }, env3 = _ref2.env;
  checkStyles = function checkStyles2(packageName) {
    if (checkedPkgs[packageName])
      return;
    checkedPkgs[packageName] = true;
    if (env3.NODE_ENV !== "test" && parseInt(window.getComputedStyle(document.body).getPropertyValue("--reach-" + packageName), 10) !== 1) {
      console.warn("@reach/" + packageName + ' styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\n\n    import "@reach/' + packageName + `/styles.css";

  Otherwise you'll need to include them some other way:

    <link rel="stylesheet" type="text/css" href="node_modules/@reach/` + packageName + '/styles.css" />\n\n  For more information visit https://ui.reach.tech/styling.\n  ');
    }
  };
}
var _ref2;
var env3;
var ponyfillGlobal = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
function assignRef4(ref, value) {
  if (ref == null)
    return;
  if (isFunction3(ref)) {
    ref(value);
  } else {
    try {
      ref.current = value;
    } catch (error3) {
      throw new Error('Cannot assign value "' + value + '" to ref "' + ref + '"');
    }
  }
}
function canUseDOM3() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
function forwardRefWithAs(render3) {
  return (0, import_react88.forwardRef)(render3);
}
function getOwnerDocument3(element) {
  return canUseDOM3() ? element ? element.ownerDocument : document : null;
}
function isFunction3(value) {
  return !!(value && {}.toString.call(value) == "[object Function]");
}
function noop7() {
}
var useControlledSwitchWarning = noop7;
if (true) {
  useControlledSwitchWarning = function useControlledSwitchWarning2(controlledValue, controlledPropName, componentName) {
    var controlledRef = (0, import_react88.useRef)(controlledValue != null);
    var nameCache = (0, import_react88.useRef)({
      componentName,
      controlledPropName
    });
    (0, import_react88.useEffect)(function() {
      nameCache.current = {
        componentName,
        controlledPropName
      };
    }, [componentName, controlledPropName]);
    (0, import_react88.useEffect)(function() {
      var wasControlled = controlledRef.current;
      var _nameCache$current = nameCache.current, componentName2 = _nameCache$current.componentName, controlledPropName2 = _nameCache$current.controlledPropName;
      var isControlled = controlledValue != null;
      if (wasControlled !== isControlled) {
        console.error("A component is changing an " + (wasControlled ? "" : "un") + "controlled `" + controlledPropName2 + "` state of " + componentName2 + " to be " + (wasControlled ? "un" : "") + "controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled " + componentName2 + " element for the lifetime of the component.\nMore info: https://fb.me/react-controlled-components");
      }
    }, [controlledValue]);
  };
}
var useCheckStyles = noop7;
if (true) {
  useCheckStyles = function useCheckStyles2(pkg2) {
    var name = (0, import_react88.useRef)(pkg2);
    (0, import_react88.useEffect)(function() {
      return void (name.current = pkg2);
    }, [pkg2]);
    (0, import_react88.useEffect)(function() {
      return checkStyles(name.current);
    }, []);
  };
}
function useForkedRef() {
  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    refs[_key4] = arguments[_key4];
  }
  return (0, import_react88.useMemo)(function() {
    if (refs.every(function(ref) {
      return ref == null;
    })) {
      return null;
    }
    return function(node3) {
      refs.forEach(function(ref) {
        assignRef4(ref, node3);
      });
    };
  }, [].concat(refs));
}
function usePrevious2(value) {
  var ref = (0, import_react88.useRef)(null);
  (0, import_react88.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref.current;
}
var useStateLogger = noop7;
if (true) {
  useStateLogger = function useStateLogger2(state3, DEBUG) {
    if (DEBUG === void 0) {
      DEBUG = false;
    }
    var debugRef = (0, import_react88.useRef)(DEBUG);
    (0, import_react88.useEffect)(function() {
      debugRef.current = DEBUG;
    }, [DEBUG]);
    (0, import_react88.useEffect)(function() {
      if (debugRef.current) {
        console.group("State Updated");
        console.log("%c" + state3, "font-weight: normal; font-size: 120%; font-style: italic;");
        console.groupEnd();
      }
    }, [state3]);
  };
}

// node_modules/.pnpm/@reach+alert@0.13.2_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/@reach/alert/dist/reach-alert.esm.js
var import_prop_types8 = __toESM(require_prop_types());
function _extends52() {
  _extends52 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends52.apply(this, arguments);
}
function _objectWithoutPropertiesLoose43(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var keys3 = {
  polite: -1,
  assertive: -1
};
var elements = {
  polite: {},
  assertive: {}
};
var liveRegions = {
  polite: null,
  assertive: null
};
var renderTimer;
var Alert3 = forwardRefWithAs(function Alert4(_ref2, forwardedRef) {
  var _ref$as = _ref2.as, Comp = _ref$as === void 0 ? "div" : _ref$as, children = _ref2.children, _ref$type = _ref2.type, regionType = _ref$type === void 0 ? "polite" : _ref$type, props = _objectWithoutPropertiesLoose43(_ref2, ["as", "children", "type"]);
  var ownRef = (0, import_react89.useRef)(null);
  var ref = useForkedRef(forwardedRef, ownRef);
  var child = (0, import_react89.useMemo)(function() {
    return (0, import_react89.createElement)(Comp, _extends52({}, props, {
      ref,
      "data-reach-alert": true
    }), children);
  }, [children, props]);
  useMirrorEffects(regionType, child, ownRef);
  return child;
});
if (true) {
  Alert3.displayName = "Alert";
  Alert3.propTypes = {
    children: import_prop_types8.default.node,
    type: import_prop_types8.default.oneOf(["assertive", "polite"])
  };
}
function createMirror(type, doc2) {
  var key = ++keys3[type];
  var mount = function mount2(element) {
    if (liveRegions[type]) {
      elements[type][key] = element;
      renderAlerts();
    } else {
      var node3 = doc2.createElement("div");
      node3.setAttribute("data-reach-live-" + type, "true");
      liveRegions[type] = node3;
      doc2.body.appendChild(liveRegions[type]);
      mount2(element);
    }
  };
  var update = function update2(element) {
    elements[type][key] = element;
    renderAlerts();
  };
  var unmount = function unmount2() {
    delete elements[type][key];
    renderAlerts();
  };
  return {
    mount,
    update,
    unmount
  };
}
function renderAlerts() {
  if (renderTimer != null) {
    window.clearTimeout(renderTimer);
  }
  renderTimer = window.setTimeout(function() {
    Object.keys(elements).forEach(function(elementType) {
      var regionType = elementType;
      var container4 = liveRegions[regionType];
      if (container4) {
        (0, import_react_dom2.render)((0, import_react89.createElement)(VisuallyHidden2, {
          as: "div"
        }, (0, import_react89.createElement)("div", {
          role: regionType === "assertive" ? "alert" : "status",
          "aria-live": regionType
        }, Object.keys(elements[regionType]).map(function(key) {
          return (0, import_react89.cloneElement)(elements[regionType][key], {
            key,
            ref: null
          });
        }))), liveRegions[regionType]);
      }
    });
  }, 500);
}
function useMirrorEffects(regionType, element, ref) {
  var prevType = usePrevious2(regionType);
  var mirror = (0, import_react89.useRef)(null);
  var mounted = (0, import_react89.useRef)(false);
  (0, import_react89.useEffect)(function() {
    var ownerDocument = getOwnerDocument3(ref.current);
    if (!mounted.current) {
      mounted.current = true;
      mirror.current = createMirror(regionType, ownerDocument);
      mirror.current.mount(element);
    } else if (prevType !== regionType) {
      mirror.current && mirror.current.unmount();
      mirror.current = createMirror(regionType, ownerDocument);
      mirror.current.mount(element);
    } else {
      mirror.current && mirror.current.update(element);
    }
  }, [element, regionType, prevType, ref]);
  (0, import_react89.useEffect)(function() {
    return function() {
      mirror.current && mirror.current.unmount();
    };
  }, []);
}
var reach_alert_esm_default = Alert3;

// node_modules/.pnpm/@chakra-ui+toast@1.5.9_pe2bzncnuenomjyugkagg3bqqq/node_modules/@chakra-ui/toast/dist/chakra-ui-toast.esm.js
function _extends53() {
  _extends53 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends53.apply(this, arguments);
}
function _setPrototypeOf4(o, p) {
  _setPrototypeOf4 = Object.setPrototypeOf || function _setPrototypeOf5(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf4(o, p);
}
function _inheritsLoose2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf4(subClass, superClass);
}
function findToast(toasts, id2) {
  var position4 = getToastPosition(toasts, id2);
  var index2 = position4 ? toasts[position4].findIndex(function(toast2) {
    return toast2.id === id2;
  }) : -1;
  return {
    position: position4,
    index: index2
  };
}
var getToastPosition = function getToastPosition2(toasts, id2) {
  var _Object$values$flat$f;
  return (_Object$values$flat$f = Object.values(toasts).flat().find(function(toast2) {
    return toast2.id === id2;
  })) == null ? void 0 : _Object$values$flat$f.position;
};
function getToastStyle(position4) {
  var isRighty = position4.includes("right");
  var isLefty = position4.includes("left");
  var alignItems = "center";
  if (isRighty)
    alignItems = "flex-end";
  if (isLefty)
    alignItems = "flex-start";
  return {
    display: "flex",
    flexDirection: "column",
    alignItems
  };
}
var toastMotionVariants = {
  initial: function initial2(props) {
    var _ref2;
    var position4 = props.position;
    var dir = ["top", "bottom"].includes(position4) ? "y" : "x";
    var factor = ["top-right", "bottom-right"].includes(position4) ? 1 : -1;
    if (position4 === "bottom")
      factor = 1;
    return _ref2 = {
      opacity: 0
    }, _ref2[dir] = factor * 24, _ref2;
  },
  animate: {
    opacity: 1,
    y: 0,
    x: 0,
    scale: 1,
    transition: {
      duration: 0.4,
      ease: [0.4, 0, 0.2, 1]
    }
  },
  exit: {
    opacity: 0,
    scale: 0.85,
    transition: {
      duration: 0.2,
      ease: [0.4, 0, 1, 1]
    }
  }
};
var Toast$1 = function Toast(props) {
  var id2 = props.id, message = props.message, onCloseComplete = props.onCloseComplete, onRequestRemove = props.onRequestRemove, _props$requestClose = props.requestClose, requestClose = _props$requestClose === void 0 ? false : _props$requestClose, _props$position = props.position, position4 = _props$position === void 0 ? "bottom" : _props$position, _props$duration = props.duration, duration = _props$duration === void 0 ? 5e3 : _props$duration, _props$containerStyle = props.containerStyle, containerStyle = _props$containerStyle === void 0 ? {} : _props$containerStyle;
  var _React$useState = React82.useState(duration), delay = _React$useState[0], setDelay = _React$useState[1];
  var isPresent2 = useIsPresent();
  useUpdateEffect(function() {
    if (!isPresent2) {
      onCloseComplete == null ? void 0 : onCloseComplete();
    }
  }, [isPresent2]);
  useUpdateEffect(function() {
    setDelay(duration);
  }, [duration]);
  var onMouseEnter = function onMouseEnter2() {
    return setDelay(null);
  };
  var onMouseLeave = function onMouseLeave2() {
    return setDelay(duration);
  };
  var close = function close2() {
    if (isPresent2)
      onRequestRemove();
  };
  React82.useEffect(function() {
    if (isPresent2 && requestClose) {
      onRequestRemove();
    }
  }, [isPresent2, requestClose, onRequestRemove]);
  useTimeout(close, delay);
  var style = React82.useMemo(function() {
    return getToastStyle(position4);
  }, [position4]);
  return React82.createElement(motion.li, {
    layout: true,
    className: "chakra-toast",
    variants: toastMotionVariants,
    initial: "initial",
    animate: "animate",
    exit: "exit",
    onHoverStart: onMouseEnter,
    onHoverEnd: onMouseLeave,
    custom: {
      position: position4
    },
    style
  }, React82.createElement(reach_alert_esm_default, {
    className: "chakra-toast__inner",
    style: _extends53({
      pointerEvents: "auto",
      maxWidth: 560,
      minWidth: 300,
      margin: "0.5rem"
    }, containerStyle)
  }, isFunction(message) ? message({
    id: id2,
    onClose: close
  }) : message));
};
if (__DEV__) {
  Toast$1.displayName = "Toast";
}
var ToastManager = function(_React$Component) {
  _inheritsLoose2(ToastManager2, _React$Component);
  function ToastManager2(props) {
    var _this;
    _this = _React$Component.call(this, props) || this;
    _this.state = {
      top: [],
      "top-left": [],
      "top-right": [],
      "bottom-left": [],
      bottom: [],
      "bottom-right": []
    };
    _this.notify = function(message, options) {
      var toast2 = _this.createToast(message, options);
      var position4 = toast2.position, id2 = toast2.id;
      _this.setState(function(prevToasts) {
        var _extends210;
        var isTop = position4.includes("top");
        var toasts = isTop ? [toast2].concat(prevToasts[position4]) : [].concat(prevToasts[position4], [toast2]);
        return _extends53({}, prevToasts, (_extends210 = {}, _extends210[position4] = toasts, _extends210));
      });
      return id2;
    };
    _this.updateToast = function(id2, options) {
      _this.setState(function(prevState) {
        var nextState = _extends53({}, prevState);
        var _findToast = findToast(nextState, id2), position4 = _findToast.position, index2 = _findToast.index;
        if (position4 && index2 !== -1) {
          nextState[position4][index2] = _extends53({}, nextState[position4][index2], options);
        }
        return nextState;
      });
    };
    _this.closeAll = function(_temp) {
      var _ref2 = _temp === void 0 ? {} : _temp, positions = _ref2.positions;
      _this.setState(function(prev2) {
        var allPositions = ["bottom", "bottom-right", "bottom-left", "top", "top-left", "top-right"];
        var positionsToClose = positions != null ? positions : allPositions;
        return positionsToClose.reduce(function(acc, position4) {
          acc[position4] = prev2[position4].map(function(toast2) {
            return _extends53({}, toast2, {
              requestClose: true
            });
          });
          return acc;
        }, {});
      });
    };
    _this.createToast = function(message, options) {
      var _options$id, _options$position;
      ToastManager2.counter += 1;
      var id2 = (_options$id = options.id) != null ? _options$id : ToastManager2.counter;
      var position4 = (_options$position = options.position) != null ? _options$position : "top";
      return {
        id: id2,
        message,
        position: position4,
        duration: options.duration,
        onCloseComplete: options.onCloseComplete,
        onRequestRemove: function onRequestRemove() {
          return _this.removeToast(String(id2), position4);
        },
        status: options.status,
        requestClose: false,
        containerStyle: options.containerStyle
      };
    };
    _this.closeToast = function(id2) {
      _this.setState(function(prevState) {
        var _extends310;
        var position4 = getToastPosition(prevState, id2);
        if (!position4)
          return prevState;
        return _extends53({}, prevState, (_extends310 = {}, _extends310[position4] = prevState[position4].map(function(toast2) {
          if (toast2.id == id2) {
            return _extends53({}, toast2, {
              requestClose: true
            });
          }
          return toast2;
        }), _extends310));
      });
    };
    _this.removeToast = function(id2, position4) {
      _this.setState(function(prevState) {
        var _extends410;
        return _extends53({}, prevState, (_extends410 = {}, _extends410[position4] = prevState[position4].filter(function(toast2) {
          return toast2.id != id2;
        }), _extends410));
      });
    };
    _this.isVisible = function(id2) {
      var _findToast2 = findToast(_this.state, id2), position4 = _findToast2.position;
      return Boolean(position4);
    };
    _this.getStyle = function(position4) {
      var isTopOrBottom = position4 === "top" || position4 === "bottom";
      var margin = isTopOrBottom ? "0 auto" : void 0;
      var top2 = position4.includes("top") ? "env(safe-area-inset-top, 0px)" : void 0;
      var bottom2 = position4.includes("bottom") ? "env(safe-area-inset-bottom, 0px)" : void 0;
      var right2 = !position4.includes("left") ? "env(safe-area-inset-right, 0px)" : void 0;
      var left2 = !position4.includes("right") ? "env(safe-area-inset-left, 0px)" : void 0;
      return {
        position: "fixed",
        zIndex: 5500,
        pointerEvents: "none",
        display: "flex",
        flexDirection: "column",
        margin,
        top: top2,
        bottom: bottom2,
        right: right2,
        left: left2
      };
    };
    var methods = {
      notify: _this.notify,
      closeAll: _this.closeAll,
      close: _this.closeToast,
      update: _this.updateToast,
      isActive: _this.isVisible
    };
    props.notify(methods);
    return _this;
  }
  var _proto = ToastManager2.prototype;
  _proto.render = function render3() {
    var _this2 = this;
    return objectKeys(this.state).map(function(position4) {
      var toasts = _this2.state[position4];
      return React82.createElement("ul", {
        key: position4,
        id: "chakra-toast-manager-" + position4,
        style: _this2.getStyle(position4)
      }, React82.createElement(AnimatePresence, {
        initial: false
      }, toasts.map(function(toast2) {
        return React82.createElement(Toast$1, _extends53({
          key: toast2.id
        }, toast2));
      })));
    });
  };
  return ToastManager2;
}(React82.Component);
ToastManager.counter = 0;
var portalId = "chakra-toast-portal";
var Toaster = function Toaster2() {
  var _this = this;
  this.createToast = void 0;
  this.removeAll = void 0;
  this.closeToast = void 0;
  this.updateToast = void 0;
  this.isToastActive = void 0;
  this.bindFunctions = function(methods) {
    _this.createToast = methods.notify;
    _this.removeAll = methods.closeAll;
    _this.closeToast = methods.close;
    _this.updateToast = methods.update;
    _this.isToastActive = methods.isActive;
  };
  this.notify = function(message, options) {
    if (options === void 0) {
      options = {};
    }
    return _this.createToast == null ? void 0 : _this.createToast(message, options);
  };
  this.close = function(id2) {
    _this.closeToast == null ? void 0 : _this.closeToast(id2);
  };
  this.closeAll = function(options) {
    _this.removeAll == null ? void 0 : _this.removeAll(options);
  };
  this.update = function(id2, options) {
    if (options === void 0) {
      options = {};
    }
    _this.updateToast == null ? void 0 : _this.updateToast(id2, options);
  };
  this.isActive = function(id2) {
    return _this.isToastActive == null ? void 0 : _this.isToastActive(id2);
  };
  if (!isBrowser2)
    return;
  var portal;
  var existingPortal = document.getElementById(portalId);
  if (existingPortal) {
    portal = existingPortal;
  } else {
    var _document$body;
    var div = document.createElement("div");
    div.id = portalId;
    (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);
    portal = div;
  }
  (0, import_react_dom3.render)(React82.createElement(ToastManager, {
    notify: this.bindFunctions
  }), portal);
};
var toast = new Toaster();
function getToastPlacement(position4, dir) {
  var _logical$dir;
  if (!position4)
    return;
  var logicals2 = {
    "top-start": {
      ltr: "top-left",
      rtl: "top-right"
    },
    "top-end": {
      ltr: "top-right",
      rtl: "top-left"
    },
    "bottom-start": {
      ltr: "bottom-left",
      rtl: "bottom-right"
    },
    "bottom-end": {
      ltr: "bottom-right",
      rtl: "bottom-left"
    }
  };
  var logical3 = logicals2[position4];
  return (_logical$dir = logical3 == null ? void 0 : logical3[dir]) != null ? _logical$dir : position4;
}
var Toast2 = function Toast3(props) {
  var status = props.status, variant = props.variant, id2 = props.id, title = props.title, isClosable = props.isClosable, onClose = props.onClose, description = props.description;
  var alertTitleId = typeof id2 !== "undefined" ? "toast-" + id2 + "-title" : void 0;
  return React82.createElement(Alert2, {
    status,
    variant,
    id: id2,
    alignItems: "start",
    borderRadius: "md",
    boxShadow: "lg",
    paddingEnd: 8,
    textAlign: "start",
    width: "auto",
    "aria-labelledby": alertTitleId
  }, React82.createElement(AlertIcon, null), React82.createElement(chakra2.div, {
    flex: "1",
    maxWidth: "100%"
  }, title && React82.createElement(AlertTitle, {
    id: alertTitleId
  }, title), description && React82.createElement(AlertDescription, {
    display: "block"
  }, description)), isClosable && React82.createElement(CloseButton2, {
    size: "sm",
    onClick: onClose,
    position: "absolute",
    insetEnd: 1,
    top: 1
  }));
};
var defaults = {
  duration: 5e3,
  position: "bottom",
  variant: "solid"
};
var defaultStandaloneParam = {
  theme: theme2,
  colorMode: "light",
  toggleColorMode: noop,
  setColorMode: noop,
  defaultOptions: defaults
};
function createStandaloneToast(_temp) {
  var _ref2 = _temp === void 0 ? defaultStandaloneParam : _temp, _ref$theme = _ref2.theme, theme3 = _ref$theme === void 0 ? defaultStandaloneParam.theme : _ref$theme, _ref$colorMode = _ref2.colorMode, colorMode = _ref$colorMode === void 0 ? defaultStandaloneParam.colorMode : _ref$colorMode, _ref$toggleColorMode = _ref2.toggleColorMode, toggleColorMode = _ref$toggleColorMode === void 0 ? defaultStandaloneParam.toggleColorMode : _ref$toggleColorMode, _ref$setColorMode = _ref2.setColorMode, setColorMode = _ref$setColorMode === void 0 ? defaultStandaloneParam.setColorMode : _ref$setColorMode, _ref$defaultOptions = _ref2.defaultOptions, defaultOptions2 = _ref$defaultOptions === void 0 ? defaultStandaloneParam.defaultOptions : _ref$defaultOptions;
  var renderWithProviders = function renderWithProviders2(props, options) {
    return React82.createElement(ThemeProvider5, {
      theme: theme3
    }, React82.createElement(ColorModeContext2.Provider, {
      value: {
        colorMode,
        setColorMode,
        toggleColorMode
      }
    }, isFunction(options.render) ? options.render(props) : React82.createElement(Toast2, _extends53({}, props, options))));
  };
  var toastImpl = function toastImpl2(options) {
    var opts = _extends53({}, defaultOptions2, options);
    opts.position = getToastPlacement(opts.position, theme3.direction);
    var Message = function Message2(props) {
      return renderWithProviders(props, opts);
    };
    return toast.notify(Message, opts);
  };
  toastImpl.close = toast.close;
  toastImpl.closeAll = toast.closeAll;
  toastImpl.update = function(id2, options) {
    if (!id2)
      return;
    var opts = _extends53({}, defaultOptions2, options);
    opts.position = getToastPlacement(opts.position, theme3.direction);
    toast.update(id2, _extends53({}, opts, {
      message: function message(props) {
        return renderWithProviders(props, opts);
      }
    }));
  };
  toastImpl.isActive = toast.isActive;
  return toastImpl;
}
function useToast(options) {
  var _useChakra = useChakra2(), theme3 = _useChakra.theme, setColorMode = _useChakra.setColorMode, toggleColorMode = _useChakra.toggleColorMode, colorMode = _useChakra.colorMode;
  var toastOptions = useLatestRef(options);
  return React82.useMemo(function() {
    return createStandaloneToast({
      theme: theme3,
      colorMode,
      setColorMode,
      toggleColorMode,
      defaultOptions: _extends53({}, defaults, toastOptions.current)
    });
  }, [theme3, setColorMode, toggleColorMode, colorMode, toastOptions]);
}

// node_modules/.pnpm/@chakra-ui+tooltip@1.5.1_pe2bzncnuenomjyugkagg3bqqq/node_modules/@chakra-ui/tooltip/dist/chakra-ui-tooltip.esm.js
var React83 = __toESM(require_react());
function _extends54() {
  _extends54 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends54.apply(this, arguments);
}
function _objectWithoutPropertiesLoose44(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var scale2 = {
  exit: {
    scale: 0.85,
    opacity: 0,
    transition: {
      opacity: {
        duration: 0.15,
        easings: "easeInOut"
      },
      scale: {
        duration: 0.2,
        easings: "easeInOut"
      }
    }
  },
  enter: {
    scale: 1,
    opacity: 1,
    transition: {
      opacity: {
        easings: "easeOut",
        duration: 0.2
      },
      scale: {
        duration: 0.2,
        ease: [0.175, 0.885, 0.4, 1.1]
      }
    }
  }
};
var _excluded$121 = ["openDelay", "closeDelay", "closeOnClick", "closeOnMouseDown", "closeOnEsc", "onOpen", "onClose", "placement", "id", "isOpen", "defaultIsOpen", "arrowSize", "arrowShadowColor", "arrowPadding", "modifiers", "isDisabled", "gutter", "offset", "direction"];
function useTooltip(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, _props$openDelay = _props.openDelay, openDelay = _props$openDelay === void 0 ? 0 : _props$openDelay, _props$closeDelay = _props.closeDelay, closeDelay = _props$closeDelay === void 0 ? 0 : _props$closeDelay, _props$closeOnClick = _props.closeOnClick, closeOnClick = _props$closeOnClick === void 0 ? true : _props$closeOnClick, closeOnMouseDown = _props.closeOnMouseDown, _props$closeOnEsc = _props.closeOnEsc, closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc, onOpenProp = _props.onOpen, onCloseProp = _props.onClose, placement = _props.placement, id2 = _props.id, isOpenProp = _props.isOpen, defaultIsOpen = _props.defaultIsOpen, _props$arrowSize = _props.arrowSize, arrowSize = _props$arrowSize === void 0 ? 10 : _props$arrowSize, arrowShadowColor = _props.arrowShadowColor, arrowPadding = _props.arrowPadding, modifiers = _props.modifiers, isDisabled2 = _props.isDisabled, gutter = _props.gutter, offset2 = _props.offset, direction3 = _props.direction, htmlProps = _objectWithoutPropertiesLoose44(_props, _excluded$121);
  var _useDisclosure = useDisclosure({
    isOpen: isOpenProp,
    defaultIsOpen,
    onOpen: onOpenProp,
    onClose: onCloseProp
  }), isOpen = _useDisclosure.isOpen, onOpen = _useDisclosure.onOpen, onClose = _useDisclosure.onClose;
  var _usePopper = usePopper({
    enabled: isOpen,
    placement,
    arrowPadding,
    modifiers,
    gutter,
    offset: offset2,
    direction: direction3
  }), referenceRef = _usePopper.referenceRef, getPopperProps = _usePopper.getPopperProps, getArrowInnerProps = _usePopper.getArrowInnerProps, getArrowProps = _usePopper.getArrowProps;
  var tooltipId = useId(id2, "tooltip");
  var ref = React83.useRef(null);
  var enterTimeout = React83.useRef();
  var exitTimeout = React83.useRef();
  var openWithDelay = React83.useCallback(function() {
    if (!isDisabled2) {
      enterTimeout.current = window.setTimeout(onOpen, openDelay);
    }
  }, [isDisabled2, onOpen, openDelay]);
  var closeWithDelay = React83.useCallback(function() {
    if (enterTimeout.current) {
      clearTimeout(enterTimeout.current);
    }
    exitTimeout.current = window.setTimeout(onClose, closeDelay);
  }, [closeDelay, onClose]);
  var onClick = React83.useCallback(function() {
    if (closeOnClick) {
      closeWithDelay();
    }
  }, [closeOnClick, closeWithDelay]);
  var onMouseDown = React83.useCallback(function() {
    if (closeOnMouseDown) {
      closeWithDelay();
    }
  }, [closeOnMouseDown, closeWithDelay]);
  var onKeyDown = React83.useCallback(function(event) {
    if (isOpen && event.key === "Escape") {
      closeWithDelay();
    }
  }, [isOpen, closeWithDelay]);
  useEventListener("keydown", closeOnEsc ? onKeyDown : void 0);
  React83.useEffect(function() {
    return function() {
      clearTimeout(enterTimeout.current);
      clearTimeout(exitTimeout.current);
    };
  }, []);
  useEventListener("mouseleave", closeWithDelay, function() {
    return ref.current;
  });
  var getTriggerProps = React83.useCallback(function(props2, _ref2) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (_ref2 === void 0) {
      _ref2 = null;
    }
    var triggerProps = _extends54({}, props2, {
      ref: mergeRefs(ref, _ref2, referenceRef),
      onMouseEnter: callAllHandlers(props2.onMouseEnter, openWithDelay),
      onClick: callAllHandlers(props2.onClick, onClick),
      onMouseDown: callAllHandlers(props2.onMouseDown, onMouseDown),
      onFocus: callAllHandlers(props2.onFocus, openWithDelay),
      onBlur: callAllHandlers(props2.onBlur, closeWithDelay),
      "aria-describedby": isOpen ? tooltipId : void 0
    });
    return triggerProps;
  }, [openWithDelay, closeWithDelay, onMouseDown, isOpen, tooltipId, onClick, referenceRef]);
  var getTooltipPositionerProps = React83.useCallback(function(props2, forwardedRef) {
    var _extends210;
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return getPopperProps(_extends54({}, props2, {
      style: _extends54({}, props2.style, (_extends210 = {}, _extends210[cssVars.arrowSize["var"]] = arrowSize ? px(arrowSize) : void 0, _extends210[cssVars.arrowShadowColor["var"]] = arrowShadowColor, _extends210))
    }), forwardedRef);
  }, [getPopperProps, arrowSize, arrowShadowColor]);
  var getTooltipProps = React83.useCallback(function(props2, _ref2) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (_ref2 === void 0) {
      _ref2 = null;
    }
    var tooltipProps = _extends54({
      ref: _ref2
    }, htmlProps, props2, {
      id: tooltipId,
      role: "tooltip",
      style: _extends54({}, props2.style, {
        position: "relative",
        transformOrigin: cssVars.transformOrigin.varRef
      })
    });
    return tooltipProps;
  }, [htmlProps, tooltipId]);
  return {
    isOpen,
    show: openWithDelay,
    hide: closeWithDelay,
    getTriggerProps,
    getTooltipProps,
    getTooltipPositionerProps,
    getArrowProps,
    getArrowInnerProps
  };
}
var _excluded61 = ["children", "label", "shouldWrapChildren", "aria-label", "hasArrow", "bg", "portalProps", "background", "backgroundColor", "bgColor"];
var StyledTooltip = chakra2(motion.div);
var Tooltip2 = forwardRef5(function(props, ref) {
  var _ref2, _ref22;
  var styles3 = useStyleConfig2("Tooltip", props);
  var ownProps = omitThemingProps2(props);
  var theme3 = useTheme3();
  var children = ownProps.children, label = ownProps.label, shouldWrapChildren = ownProps.shouldWrapChildren, ariaLabel = ownProps["aria-label"], hasArrow = ownProps.hasArrow, bg = ownProps.bg, portalProps = ownProps.portalProps, background3 = ownProps.background, backgroundColor = ownProps.backgroundColor, bgColor = ownProps.bgColor, rest = _objectWithoutPropertiesLoose44(ownProps, _excluded61);
  var userDefinedBg = (_ref2 = (_ref22 = background3 != null ? background3 : backgroundColor) != null ? _ref22 : bg) != null ? _ref2 : bgColor;
  if (userDefinedBg) {
    styles3.bg = userDefinedBg;
    styles3[cssVars.arrowBg["var"]] = getCSSVar(theme3, "colors", userDefinedBg);
  }
  var tooltip2 = useTooltip(_extends54({}, rest, {
    direction: theme3.direction
  }));
  var shouldWrap = isString(children) || shouldWrapChildren;
  var trigger;
  if (shouldWrap) {
    trigger = React83.createElement(chakra2.span, _extends54({
      tabIndex: 0
    }, tooltip2.getTriggerProps()), children);
  } else {
    var child = React83.Children.only(children);
    trigger = React83.cloneElement(child, tooltip2.getTriggerProps(child.props, child.ref));
  }
  var hasAriaLabel = !!ariaLabel;
  var _tooltipProps = tooltip2.getTooltipProps({}, ref);
  var tooltipProps = hasAriaLabel ? omit(_tooltipProps, ["role", "id"]) : _tooltipProps;
  var hiddenProps = pick(_tooltipProps, ["role", "id"]);
  if (!label) {
    return React83.createElement(React83.Fragment, null, children);
  }
  return React83.createElement(React83.Fragment, null, trigger, React83.createElement(AnimatePresence, null, tooltip2.isOpen && React83.createElement(Portal, portalProps, React83.createElement(chakra2.div, _extends54({}, tooltip2.getTooltipPositionerProps(), {
    __css: {
      zIndex: styles3.zIndex,
      pointerEvents: "none"
    }
  }), React83.createElement(StyledTooltip, _extends54({
    variants: scale2
  }, tooltipProps, {
    initial: "exit",
    animate: "enter",
    exit: "exit",
    __css: styles3
  }), label, hasAriaLabel && React83.createElement(VisuallyHidden, hiddenProps, ariaLabel), hasArrow && React83.createElement(chakra2.div, {
    "data-popper-arrow": true,
    className: "chakra-tooltip__arrow-wrapper"
  }, React83.createElement(chakra2.div, {
    "data-popper-arrow-inner": true,
    className: "chakra-tooltip__arrow",
    __css: {
      bg: styles3.bg
    }
  })))))));
});
if (__DEV__) {
  Tooltip2.displayName = "Tooltip";
}

// node_modules/.pnpm/@chakra-ui+react@1.8.8_lqhkmgw2ow2i5fj6qq3vvpkb2m/node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js
var ChakraProvider3 = ChakraProvider;
ChakraProvider3.defaultProps = {
  theme
};
function extendTheme() {
  for (var _len = arguments.length, extensions = new Array(_len), _key = 0; _key < _len; _key++) {
    extensions[_key] = arguments[_key];
  }
  var overrides = [].concat(extensions);
  var baseTheme = extensions[extensions.length - 1];
  if (isChakraTheme(baseTheme) && overrides.length > 1) {
    overrides = overrides.slice(0, overrides.length - 1);
  } else {
    baseTheme = theme;
  }
  return pipe.apply(void 0, overrides.map(function(extension) {
    return function(prevTheme) {
      return isFunction(extension) ? extension(prevTheme) : mergeThemeOverride(prevTheme, extension);
    };
  }))(baseTheme);
}
function mergeThemeOverride() {
  for (var _len2 = arguments.length, overrides = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    overrides[_key2] = arguments[_key2];
  }
  return import_lodash.default.apply(void 0, [{}].concat(overrides, [mergeThemeCustomizer]));
}
function mergeThemeCustomizer(source, override, key, object2) {
  if ((isFunction(source) || isFunction(override)) && Object.prototype.hasOwnProperty.call(object2, key)) {
    return function() {
      var sourceValue = isFunction(source) ? source.apply(void 0, arguments) : source;
      var overrideValue = isFunction(override) ? override.apply(void 0, arguments) : override;
      return (0, import_lodash.default)({}, sourceValue, overrideValue, mergeThemeCustomizer);
    };
  }
  return void 0;
}
function withDefaultColorScheme(_ref2) {
  var colorScheme = _ref2.colorScheme, components3 = _ref2.components;
  return function(theme3) {
    var names2 = Object.keys(theme3.components || {});
    if (Array.isArray(components3)) {
      names2 = components3;
    } else if (isObject(components3)) {
      names2 = Object.keys(components3);
    }
    return mergeThemeOverride(theme3, {
      components: fromEntries(names2.map(function(componentName) {
        var withColorScheme = {
          defaultProps: {
            colorScheme
          }
        };
        return [componentName, withColorScheme];
      }))
    });
  };
}
function withDefaultSize(_ref2) {
  var size3 = _ref2.size, components3 = _ref2.components;
  return function(theme3) {
    var names2 = Object.keys(theme3.components || {});
    if (Array.isArray(components3)) {
      names2 = components3;
    } else if (isObject(components3)) {
      names2 = Object.keys(components3);
    }
    return mergeThemeOverride(theme3, {
      components: fromEntries(names2.map(function(componentName) {
        var withSize = {
          defaultProps: {
            size: size3
          }
        };
        return [componentName, withSize];
      }))
    });
  };
}
function withDefaultVariant(_ref2) {
  var variant = _ref2.variant, components3 = _ref2.components;
  return function(theme3) {
    var names2 = Object.keys(theme3.components || {});
    if (Array.isArray(components3)) {
      names2 = components3;
    } else if (isObject(components3)) {
      names2 = Object.keys(components3);
    }
    return mergeThemeOverride(theme3, {
      components: fromEntries(names2.map(function(componentName) {
        var withVariant = {
          defaultProps: {
            variant
          }
        };
        return [componentName, withVariant];
      }))
    });
  };
}
function withDefaultProps(_ref2) {
  var _ref$defaultProps = _ref2.defaultProps, colorScheme = _ref$defaultProps.colorScheme, variant = _ref$defaultProps.variant, size3 = _ref$defaultProps.size, components3 = _ref2.components;
  var identity2 = function identity3(t3) {
    return t3;
  };
  var fns = [colorScheme ? withDefaultColorScheme({
    colorScheme,
    components: components3
  }) : identity2, size3 ? withDefaultSize({
    size: size3,
    components: components3
  }) : identity2, variant ? withDefaultVariant({
    variant,
    components: components3
  }) : identity2];
  return function(theme3) {
    return mergeThemeOverride(pipe.apply(void 0, fns)(theme3));
  };
}
export {
  AbsoluteCenter,
  Accordion2 as Accordion,
  AccordionButton,
  AccordionDescendantsProvider,
  AccordionIcon,
  AccordionItem,
  AccordionPanel,
  AccordionProvider,
  Alert2 as Alert,
  AlertDescription,
  AlertDialog,
  ModalBody as AlertDialogBody,
  ModalCloseButton as AlertDialogCloseButton,
  AlertDialogContent,
  ModalFooter as AlertDialogFooter,
  ModalHeader as AlertDialogHeader,
  ModalOverlay as AlertDialogOverlay,
  AlertIcon,
  AlertTitle,
  AspectRatio,
  Avatar2 as Avatar,
  AvatarBadge,
  AvatarGroup,
  Badge2 as Badge,
  Box,
  Breadcrumb2 as Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbSeparator,
  Button2 as Button,
  ButtonGroup,
  ButtonSpinner,
  CSSReset,
  CSSVars3 as CSSVars,
  Center,
  ChakraProvider3 as ChakraProvider,
  Checkbox2 as Checkbox,
  CheckboxGroup,
  Circle,
  CircularProgress,
  CircularProgressLabel,
  CloseButton2 as CloseButton,
  Code2 as Code,
  Collapse,
  ColorModeContext2 as ColorModeContext,
  ColorModeProvider2 as ColorModeProvider,
  ColorModeScript,
  Container4 as Container,
  ControlBox,
  DarkMode3 as DarkMode,
  DefaultIcon3 as DefaultIcon,
  Divider2 as Divider,
  Drawer2 as Drawer,
  ModalBody as DrawerBody,
  ModalCloseButton as DrawerCloseButton,
  DrawerContent,
  ModalFooter as DrawerFooter,
  ModalHeader as DrawerHeader,
  ModalOverlay as DrawerOverlay,
  TransitionEasings as EASINGS,
  Editable2 as Editable,
  EditableInput,
  EditablePreview,
  EditableTextarea,
  Fade,
  Flex,
  FormControl,
  FormErrorIcon,
  FormErrorMessage,
  FormHelperText,
  FormLabel2 as FormLabel,
  GlobalStyle3 as GlobalStyle,
  Grid,
  GridItem,
  HStack,
  Heading2 as Heading,
  Hide,
  Icon,
  IconButton,
  IdProvider,
  Image$1 as Image,
  Img,
  Input2 as Input,
  InputAddon,
  InputGroup,
  InputLeftAddon,
  InputLeftElement,
  InputRightAddon,
  InputRightElement,
  Kbd2 as Kbd,
  LightMode3 as LightMode,
  Link2 as Link,
  LinkBox,
  LinkOverlay,
  List2 as List,
  ListIcon,
  ListItem,
  Menu2 as Menu,
  MenuButton,
  MenuCommand,
  MenuDescendantsProvider,
  MenuDivider,
  MenuGroup,
  MenuIcon,
  MenuItem,
  MenuItemOption,
  MenuList,
  MenuOptionGroup,
  MenuProvider,
  Modal2 as Modal,
  ModalBody,
  ModalCloseButton,
  ModalContent,
  ModalContextProvider,
  ModalFocusScope,
  ModalFooter,
  ModalHeader,
  ModalOverlay,
  NumberDecrementStepper,
  NumberIncrementStepper,
  NumberInput2 as NumberInput,
  NumberInputField,
  NumberInputStepper,
  OrderedList,
  PinInput2 as PinInput,
  PinInputDescendantsProvider,
  PinInputField,
  PinInputProvider,
  Popover2 as Popover,
  PopoverAnchor,
  PopoverArrow,
  PopoverBody,
  PopoverCloseButton,
  PopoverContent,
  PopoverFooter,
  PopoverHeader,
  PopoverTrigger,
  Portal,
  PortalManager,
  Progress2 as Progress,
  ProgressLabel,
  Radio2 as Radio,
  RadioGroup,
  RangeSlider,
  RangeSliderFilledTrack,
  RangeSliderMark,
  RangeSliderProvider,
  RangeSliderThumb,
  RangeSliderTrack,
  RequiredIndicator,
  STORAGE_KEY,
  ScaleFade,
  Select2 as Select,
  SelectField,
  Show,
  SimpleGrid,
  Skeleton2 as Skeleton,
  SkeletonCircle,
  SkeletonText,
  Slide,
  SlideFade,
  Slider2 as Slider,
  SliderFilledTrack,
  SliderMark,
  SliderProvider,
  SliderThumb,
  SliderTrack,
  Spacer,
  Spinner2 as Spinner,
  Square,
  Stack,
  StackDivider,
  StackItem,
  Stat2 as Stat,
  StatArrow,
  StatDownArrow,
  StatGroup,
  StatHelpText,
  StatLabel,
  StatNumber,
  StatUpArrow,
  StyledStepper,
  StylesProvider2 as StylesProvider,
  Switch2 as Switch,
  Tab,
  TabIndicator,
  TabList,
  TabPanel,
  TabPanels,
  Table2 as Table,
  TableCaption,
  TableContainer,
  Tabs2 as Tabs,
  TabsDescendantsProvider,
  TabsProvider,
  Tag2 as Tag,
  TagCloseButton,
  TagLabel,
  TagLeftIcon,
  TagRightIcon,
  Tbody,
  Td,
  Text,
  Textarea2 as Textarea,
  Tfoot,
  Th,
  Thead,
  ThemeProvider5 as ThemeProvider,
  Tooltip2 as Tooltip,
  Tr,
  UnorderedList,
  VStack,
  VisuallyHidden,
  VisuallyHiddenInput,
  Wrap,
  WrapItem,
  addPrefix3 as addPrefix,
  assignRef2 as assignRef,
  background2 as background,
  baseStyle22 as baseStyle,
  border2 as border,
  calc3 as calc,
  chakra2 as chakra,
  color2 as color,
  cookieStorageManager,
  cookieStorageManagerSSR,
  createCookieStorageManager,
  createIcon,
  createLocalStorageManager,
  createStandaloneToast,
  createStylesContext,
  css4 as css,
  cssVar3 as cssVar,
  defaultStandaloneParam,
  effect2 as effect,
  extendTheme,
  fadeConfig,
  filter4 as filter,
  flattenTokens2 as flattenTokens,
  flexbox2 as flexbox,
  forwardRef5 as forwardRef,
  getCss2 as getCss,
  getScriptSrc,
  grid2 as grid,
  interactivity2 as interactivity,
  isChakraTheme,
  isStyleProp3 as isStyleProp,
  keyframes,
  layout2 as layout,
  layoutPropNames2 as layoutPropNames,
  list2 as list,
  localStorageManager2 as localStorageManager,
  mergeThemeOverride,
  omitThemingProps2 as omitThemingProps,
  others2 as others,
  cssVars as popperCSSVars,
  position3 as position,
  propNames2 as propNames,
  pseudoPropNames2 as pseudoPropNames,
  pseudoSelectors2 as pseudoSelectors,
  requiredChakraThemeKeys,
  resolveStyleConfig,
  ring4 as ring,
  scaleFadeConfig,
  scroll2 as scroll,
  shouldForwardProp3 as shouldForwardProp,
  slideFadeConfig,
  space2 as space,
  styled2 as styled,
  systemProps2 as systemProps,
  textDecoration2 as textDecoration,
  theme,
  toCSSObject3 as toCSSObject,
  toCSSVar2 as toCSSVar,
  toVarDefinition2 as toVarDefinition,
  toVarReference2 as toVarReference,
  toast,
  tokenToCSSVar3 as tokenToCSSVar,
  transform17 as transform,
  transition2 as transition,
  typography3 as typography,
  useAccordion,
  useAccordionContext,
  useAccordionDescendant,
  useAccordionDescendants,
  useAccordionDescendantsContext,
  useAccordionItem,
  useAccordionItemState,
  useAnimationState,
  useAriaHidden,
  useBoolean,
  useBreakpoint,
  useBreakpointValue,
  useButtonGroup,
  useCallbackRef,
  useChakra2 as useChakra,
  useCheckbox,
  useCheckboxGroup,
  useCheckboxGroupContext,
  useClipboard,
  useColorMode3 as useColorMode,
  useColorModePreference,
  useColorModeValue,
  useConst,
  useControllableProp,
  useControllableState,
  useCounter,
  useDimensions,
  useDisclosure,
  useEditable,
  useEditableControls,
  useEditableState,
  useEventCallback,
  useEventListener,
  useEventListenerMap,
  useFocusEffect,
  useFocusOnHide,
  useFocusOnPointerDown,
  useFocusOnShow,
  useForceUpdate,
  useFormControl,
  useFormControlContext,
  useFormControlProps,
  useId,
  useIds,
  useImage,
  useInterval,
  useLatestRef,
  useMediaQuery,
  useMenu,
  useMenuButton,
  useMenuContext,
  useMenuDescendant,
  useMenuDescendants,
  useMenuDescendantsContext,
  useMenuItem,
  useMenuList,
  useMenuOption,
  useMenuOptionGroup,
  useMenuPositioner,
  useMenuState,
  useMergeRefs,
  useModal,
  useModalContext,
  useMouseDownRef,
  useMultiStyleConfig,
  useNumberInput,
  useOptionalPart,
  useOutsideClick,
  usePanGesture,
  usePinInput,
  usePinInputContext,
  usePinInputDescendant,
  usePinInputDescendants,
  usePinInputDescendantsContext,
  usePinInputField,
  usePointerEvent,
  usePopover,
  usePopoverContext,
  usePopper,
  usePortalManager,
  usePrefersReducedMotion,
  usePrevious,
  useProps,
  useQuery,
  useRadio,
  useRadioGroup,
  useRadioGroupContext,
  useRangeSlider,
  useRangeSliderContext,
  useSafeLayoutEffect,
  useShortcut,
  useSlider,
  useSliderContext,
  useStyleConfig2 as useStyleConfig,
  useStyles2 as useStyles,
  useTab,
  useTabIndicator,
  useTabList,
  useTabPanel,
  useTabPanels,
  useTabs,
  useTabsContext,
  useTabsDescendant,
  useTabsDescendants,
  useTabsDescendantsContext,
  useTheme3 as useTheme,
  useTimeout,
  useToast,
  useToken,
  useTooltip,
  useUnmountEffect,
  useUpdateEffect,
  useWhyDidYouUpdate,
  visuallyHiddenStyle,
  withDefaultColorScheme,
  withDefaultProps,
  withDefaultSize,
  withDefaultVariant
};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
//# sourceMappingURL=@chakra-ui_react.js.map
