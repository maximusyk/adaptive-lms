{
  "version": 3,
  "sources": ["../../.pnpm/async-mutex@0.3.2/node_modules/async-mutex/es6/errors.js", "../../.pnpm/async-mutex@0.3.2/node_modules/async-mutex/es6/Semaphore.js", "../../.pnpm/async-mutex@0.3.2/node_modules/async-mutex/es6/Mutex.js", "../../.pnpm/async-mutex@0.3.2/node_modules/async-mutex/es6/withTimeout.js", "../../.pnpm/async-mutex@0.3.2/node_modules/async-mutex/es6/tryAcquire.js"],
  "sourcesContent": ["export var E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nexport var E_ALREADY_LOCKED = new Error('mutex already locked');\nexport var E_CANCELED = new Error('request for lock canceled');\n", "import { __awaiter, __generator } from \"tslib\";\nimport { E_CANCELED } from './errors';\nvar Semaphore = /** @class */ (function () {\n    function Semaphore(_maxConcurrency, _cancelError) {\n        if (_cancelError === void 0) { _cancelError = E_CANCELED; }\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._waiters = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    Semaphore.prototype.acquire = function () {\n        var _this = this;\n        var locked = this.isLocked();\n        var ticketPromise = new Promise(function (resolve, reject) {\n            return _this._queue.push({ resolve: resolve, reject: reject });\n        });\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    };\n    Semaphore.prototype.runExclusive = function (callback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, value, release;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.acquire()];\n                    case 1:\n                        _a = _b.sent(), value = _a[0], release = _a[1];\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 4, 5]);\n                        return [4 /*yield*/, callback(value)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                    case 4:\n                        release();\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Semaphore.prototype.waitForUnlock = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var waitPromise;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!this.isLocked()) {\n                    return [2 /*return*/, Promise.resolve()];\n                }\n                waitPromise = new Promise(function (resolve) { return _this._waiters.push({ resolve: resolve }); });\n                return [2 /*return*/, waitPromise];\n            });\n        });\n    };\n    Semaphore.prototype.isLocked = function () {\n        return this._value <= 0;\n    };\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    Semaphore.prototype.release = function () {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            var releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    };\n    Semaphore.prototype.cancel = function () {\n        var _this = this;\n        this._queue.forEach(function (ticket) { return ticket.reject(_this._cancelError); });\n        this._queue = [];\n    };\n    Semaphore.prototype._dispatch = function () {\n        var _this = this;\n        var nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        var released = false;\n        this._currentReleaser = function () {\n            if (released)\n                return;\n            released = true;\n            _this._value++;\n            _this._resolveWaiters();\n            _this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    };\n    Semaphore.prototype._resolveWaiters = function () {\n        this._waiters.forEach(function (waiter) { return waiter.resolve(); });\n        this._waiters = [];\n    };\n    return Semaphore;\n}());\nexport default Semaphore;\n", "import { __awaiter, __generator } from \"tslib\";\nimport Semaphore from './Semaphore';\nvar Mutex = /** @class */ (function () {\n    function Mutex(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    Mutex.prototype.acquire = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, releaser;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\n                    case 1:\n                        _a = _b.sent(), releaser = _a[1];\n                        return [2 /*return*/, releaser];\n                }\n            });\n        });\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this._semaphore.runExclusive(function () { return callback(); });\n    };\n    Mutex.prototype.isLocked = function () {\n        return this._semaphore.isLocked();\n    };\n    Mutex.prototype.waitForUnlock = function () {\n        return this._semaphore.waitForUnlock();\n    };\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    Mutex.prototype.release = function () {\n        this._semaphore.release();\n    };\n    Mutex.prototype.cancel = function () {\n        return this._semaphore.cancel();\n    };\n    return Mutex;\n}());\nexport default Mutex;\n", "import { __awaiter, __generator } from \"tslib\";\nimport { E_TIMEOUT } from './errors';\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function withTimeout(sync, timeout, timeoutError) {\n    var _this = this;\n    if (timeoutError === void 0) { timeoutError = E_TIMEOUT; }\n    return {\n        acquire: function () {\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                var isTimeout, handle, ticket, release, e_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            isTimeout = false;\n                            handle = setTimeout(function () {\n                                isTimeout = true;\n                                reject(timeoutError);\n                            }, timeout);\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, sync.acquire()];\n                        case 2:\n                            ticket = _a.sent();\n                            if (isTimeout) {\n                                release = Array.isArray(ticket) ? ticket[1] : ticket;\n                                release();\n                            }\n                            else {\n                                clearTimeout(handle);\n                                resolve(ticket);\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            e_1 = _a.sent();\n                            if (!isTimeout) {\n                                clearTimeout(handle);\n                                reject(e_1);\n                            }\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); });\n        },\n        runExclusive: function (callback) {\n            return __awaiter(this, void 0, void 0, function () {\n                var release, ticket;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            release = function () { return undefined; };\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, , 7, 8]);\n                            return [4 /*yield*/, this.acquire()];\n                        case 2:\n                            ticket = _a.sent();\n                            if (!Array.isArray(ticket)) return [3 /*break*/, 4];\n                            release = ticket[1];\n                            return [4 /*yield*/, callback(ticket[0])];\n                        case 3: return [2 /*return*/, _a.sent()];\n                        case 4:\n                            release = ticket;\n                            return [4 /*yield*/, callback()];\n                        case 5: return [2 /*return*/, _a.sent()];\n                        case 6: return [3 /*break*/, 8];\n                        case 7:\n                            release();\n                            return [7 /*endfinally*/];\n                        case 8: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release: function () {\n            sync.release();\n        },\n        cancel: function () {\n            return sync.cancel();\n        },\n        waitForUnlock: function () { return sync.waitForUnlock(); },\n        isLocked: function () { return sync.isLocked(); },\n    };\n}\n", "import { E_ALREADY_LOCKED } from './errors';\nimport { withTimeout } from './withTimeout';\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nexport function tryAcquire(sync, alreadyAcquiredError) {\n    if (alreadyAcquiredError === void 0) { alreadyAcquiredError = E_ALREADY_LOCKED; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n"],
  "mappings": "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",
  "names": []
}
